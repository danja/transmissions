
  _____
 |_   _| __ __ _ _ __  ___
   | || '__/ _` | '_ \/ __|
   | || | | (_| | | | \__ \
   |_||_|  \__,_|_| |_|___/
             1.0.0 (dev)         
         2025-01-19


+ ***** Construct Transmission : Repository Packer <http://purl.org/stuff/transmissions/packer>
| Create processor :p10 of type :DirWalker
| Create processor :p20 of type :StringFilter
| Create processor :p30 of type :FileReader
| Create processor :p40 of type :FileContainer
| Create processor :p50 of type :CaptureAll
| Create processor :p60 of type :WhiteboardToMessage
| Create processor :p70 of type :Unfork
| Create processor :SM of type :ShowMessage
| Create processor :DE of type :DeadEnd
| Create processor :p80 of type :FileWriter
  > Connect #0 [p10] => [p20]
Transmission.connect from http://purl.org/stuff/transmissions/p10 to http://purl.org/stuff/transmissions/p10
Connector.connect this.fromName = http://purl.org/stuff/transmissions/p10 this.toName =  http://purl.org/stuff/transmissions/p20
  > Connect #1 [p20] => [p30]
Transmission.connect from http://purl.org/stuff/transmissions/p20 to http://purl.org/stuff/transmissions/p20
Connector.connect this.fromName = http://purl.org/stuff/transmissions/p20 this.toName =  http://purl.org/stuff/transmissions/p30
  > Connect #2 [p30] => [p40]
Transmission.connect from http://purl.org/stuff/transmissions/p30 to http://purl.org/stuff/transmissions/p30
Connector.connect this.fromName = http://purl.org/stuff/transmissions/p30 this.toName =  http://purl.org/stuff/transmissions/p40
  > Connect #3 [p40] => [p50]
Transmission.connect from http://purl.org/stuff/transmissions/p40 to http://purl.org/stuff/transmissions/p40
Connector.connect this.fromName = http://purl.org/stuff/transmissions/p40 this.toName =  http://purl.org/stuff/transmissions/p50
  > Connect #4 [p50] => [p60]
Transmission.connect from http://purl.org/stuff/transmissions/p50 to http://purl.org/stuff/transmissions/p50
Connector.connect this.fromName = http://purl.org/stuff/transmissions/p50 this.toName =  http://purl.org/stuff/transmissions/p60
  > Connect #5 [p60] => [p70]
Transmission.connect from http://purl.org/stuff/transmissions/p60 to http://purl.org/stuff/transmissions/p60
Connector.connect this.fromName = http://purl.org/stuff/transmissions/p60 this.toName =  http://purl.org/stuff/transmissions/p70
  > Connect #6 [p70] => [SM]
Transmission.connect from http://purl.org/stuff/transmissions/p70 to http://purl.org/stuff/transmissions/p70
Connector.connect this.fromName = http://purl.org/stuff/transmissions/p70 this.toName =  http://purl.org/stuff/transmissions/SM
  > Connect #7 [SM] => [DE]
Transmission.connect from http://purl.org/stuff/transmissions/SM to http://purl.org/stuff/transmissions/SM
Connector.connect this.fromName = http://purl.org/stuff/transmissions/SM this.toName =  http://purl.org/stuff/transmissions/DE
  > Connect #8 [DE] => [p80]
Transmission.connect from http://purl.org/stuff/transmissions/DE to http://purl.org/stuff/transmissions/DE
Connector.connect this.fromName = http://purl.org/stuff/transmissions/DE this.toName =  http://purl.org/stuff/transmissions/p80

+ ***** Execute Transmission : Repository Packer <http://purl.org/stuff/transmissions/packer>
| Running : http://purl.org/stuff/transmissions/p10 a DirWalker
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/dirWalker

DirWalker.process

Processor.getProperty looking for http://purl.org/stuff/transmissions/sourceDir
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p10
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/sourceDir
Checking property http://purl.org/stuff/transmissions/sourceDir on node http://purl.org/stuff/transmissions/dirWalker
Found direct property value: .
Found in settings: .
DirWalker sourceDir from config = .

Processor.getProperty looking for http://purl.org/stuff/transmissions/includeExtensions
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p10
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/includeExtensions
Checking property http://purl.org/stuff/transmissions/includeExtensions on node http://purl.org/stuff/transmissions/dirWalker
Found direct property value: ['.md','.js','.ttl']
Found in settings: ['.md','.js','.ttl']


DirWalker, message.targetPath = /home/danny/github-danny/transmissions/src
DirWalker, message.rootDir = /home/danny/github-danny/transmissions/src/applications/packer
DirWalker, message.sourceDir = .
DirWalker resolved dirPath = /home/danny/github-danny/transmissions/src
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/api
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/api/about.md
                        message.subdir: undefined
                        message.filepath: api/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/api/cli
StringFilter.process, done=false

Processor.getProperty looking for http://purl.org/stuff/transmissions/includePatterns
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p20
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/includePatterns
Checking property http://purl.org/stuff/transmissions/includePatterns on node http://purl.org/stuff/transmissions/filterConfig
Found direct property value: *.txt,*.md,*.js,*.jsx,*.ts,*.tsx,*.json,*.html,*.css
Found in settings: *.txt,*.md,*.js,*.jsx,*.ts,*.tsx,*.json,*.html,*.css

Processor.getProperty looking for http://purl.org/stuff/transmissions/excludePatterns
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p20
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/excludePatterns
Checking property http://purl.org/stuff/transmissions/excludePatterns on node http://purl.org/stuff/transmissions/filterConfig
Found direct property value: node_modules/*,dist/*,build/*,.git/*
Found in settings: node_modules/*,dist/*,build/*,.git/*
StringFilter initialized with:
                Include patterns: *.txt,*.md,*.js,*.jsx,*.ts,*.tsx,*.json,*.html,*.css
                Exclude patterns: node_modules/*,dist/*,build/*,.git/*
StringFilter checking path = api/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/api/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/api/cli/about.md
                        message.subdir: cli
                        message.filepath: api/cli/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: run.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/api/cli/run.js
                        message.subdir: cli
                        message.filepath: api/cli/run.js
                        message.slugs: run
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/api/common
StringFilter checking path = api/cli/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = api/cli/run.js
Running >>> :  [p10.p20]  FileReader

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: CommandUtils.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/api/common/CommandUtils.js
                        message.subdir: common
                        message.filepath: api/common/CommandUtils.js
                        message.slugs: CommandUtils
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/api/http
StringFilter checking path = api/common/CommandUtils.js
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: WebRunner.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/api/http/WebRunner.js
                        message.subdir: http
                        message.filepath: api/http/WebRunner.js
                        message.slugs: WebRunner
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = api/http/WebRunner.js
Running >>> :  [p10.p20]  FileReader
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/claude-json-converter
FileReader successfully read file: /home/danny/github-danny/transmissions/src/api/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/api/cli/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/claude-json-converter/about.md
                        message.subdir: claude-json-converter
                        message.filepath: applications/claude-json-converter/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/claude-json-converter/config.ttl
                        message.subdir: claude-json-converter
                        message.filepath: applications/claude-json-converter/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/claude-json-converter/data
StringFilter.process, done=false
StringFilter checking path = applications/claude-json-converter/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/claude-json-converter/config.ttl

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/claude-json-converter/data/conv
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/claude-json-converter/data/conv/output
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/claude-json-converter/data/input
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/claude-json-converter/data/output
FileReader successfully read file: /home/danny/github-danny/transmissions/src/api/cli/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/api/cli/run.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions copy.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/claude-json-converter/transmissions copy.ttl
                        message.subdir: claude-json-converter
                        message.filepath: applications/claude-json-converter/transmissions copy.ttl
                        message.slugs: transmissions copy
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/claude-json-converter/transmissions.ttl
                        message.subdir: claude-json-converter
                        message.filepath: applications/claude-json-converter/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/example-application
StringFilter checking path = applications/claude-json-converter/transmissions copy.ttl
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/claude-json-converter/transmissions.ttl

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/example-application/about.md
                        message.subdir: example-application
                        message.filepath: applications/example-application/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/example-application/config.ttl
                        message.subdir: example-application
                        message.filepath: applications/example-application/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/example-application/data
StringFilter.process, done=false
StringFilter checking path = applications/example-application/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/example-application/config.ttl
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/example-application/data/input
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/example-application/data/output
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/example-application/transmissions.ttl
                        message.subdir: example-application
                        message.filepath: applications/example-application/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/file-pipeline
StringFilter checking path = applications/example-application/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/file-pipeline/about.md
                        message.subdir: file-pipeline
                        message.filepath: applications/file-pipeline/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/file-pipeline/config.ttl
                        message.subdir: file-pipeline
                        message.filepath: applications/file-pipeline/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/file-pipeline/data
StringFilter.process, done=false
StringFilter checking path = applications/file-pipeline/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/file-pipeline/config.ttl
FileReader successfully read file: /home/danny/github-danny/transmissions/src/api/cli/run.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/api/common/CommandUtils.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/file-pipeline/transmissions.ttl
                        message.subdir: file-pipeline
                        message.filepath: applications/file-pipeline/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/globbo
StringFilter checking path = applications/file-pipeline/transmissions.ttl

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/globbo/about.md
                        message.subdir: globbo
                        message.filepath: applications/globbo/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/globbo/config.ttl
                        message.subdir: globbo
                        message.filepath: applications/globbo/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/globbo/transmissions.ttl
                        message.subdir: globbo
                        message.filepath: applications/globbo/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/html-to-md
StringFilter checking path = applications/globbo/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/globbo/config.ttl
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/globbo/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/html-to-md/about.md
                        message.subdir: html-to-md
                        message.filepath: applications/html-to-md/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/html-to-md/config.ttl
                        message.subdir: html-to-md
                        message.filepath: applications/html-to-md/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/html-to-md/transmissions.ttl
                        message.subdir: html-to-md
                        message.filepath: applications/html-to-md/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/link-lister
StringFilter checking path = applications/html-to-md/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/html-to-md/config.ttl
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/html-to-md/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/link-lister/about.md
                        message.subdir: link-lister
                        message.filepath: applications/link-lister/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/link-lister/config.ttl
                        message.subdir: link-lister
                        message.filepath: applications/link-lister/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/link-lister/data
StringFilter.process, done=false
StringFilter checking path = applications/link-lister/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/link-lister/config.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: links.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/link-lister/data/links.md
                        message.subdir: link-lister
                        message.filepath: applications/link-lister/data/links.md
                        message.slugs: links
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: starter-links.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/link-lister/data/starter-links.md
                        message.subdir: link-lister
                        message.filepath: applications/link-lister/data/starter-links.md
                        message.slugs: starter-links
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/link-lister/transmissions.ttl
                        message.subdir: link-lister
                        message.filepath: applications/link-lister/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter checking path = applications/link-lister/data/links.md
Running >>> :  [p10.p20]  FileReader
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/markmap
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/link-lister/data/starter-links.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/link-lister/transmissions.ttl
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/markmap/data
FileReader successfully read file: /home/danny/github-danny/transmissions/src/api/common/CommandUtils.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/api/http/WebRunner.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/packer

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/packer/about.md
                        message.subdir: packer
                        message.filepath: applications/packer/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/packer/config.ttl
                        message.subdir: packer
                        message.filepath: applications/packer/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: packer-flow.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/packer/packer-flow.md
                        message.subdir: packer
                        message.filepath: applications/packer/packer-flow.md
                        message.slugs: packer-flow
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: packer-sources.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/packer/packer-sources.md
                        message.subdir: packer
                        message.filepath: applications/packer/packer-sources.md
                        message.slugs: packer-sources
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/packer/transmissions.ttl
                        message.subdir: packer
                        message.filepath: applications/packer/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/postcraft
StringFilter checking path = applications/packer/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/packer/config.ttl
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/packer/packer-flow.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/packer/packer-sources.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/packer/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/postcraft/about.md
                        message.subdir: postcraft
                        message.filepath: applications/postcraft/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/postcraft/config.ttl
                        message.subdir: postcraft
                        message.filepath: applications/postcraft/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/postcraft/transmissions.ttl
                        message.subdir: postcraft
                        message.filepath: applications/postcraft/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/postcraft-clear-cache
StringFilter checking path = applications/postcraft/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/postcraft/config.ttl
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/postcraft/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/postcraft-clear-cache/about.md
                        message.subdir: postcraft-clear-cache
                        message.filepath: applications/postcraft-clear-cache/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/postcraft-clear-cache/config.ttl
                        message.subdir: postcraft-clear-cache
                        message.filepath: applications/postcraft-clear-cache/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/postcraft-clear-cache/transmissions.ttl
                        message.subdir: postcraft-clear-cache
                        message.filepath: applications/postcraft-clear-cache/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/postcraft-previous
StringFilter checking path = applications/postcraft-clear-cache/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/postcraft-clear-cache/config.ttl
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/postcraft-clear-cache/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/postcraft-previous/about.md
                        message.subdir: postcraft-previous
                        message.filepath: applications/postcraft-previous/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/postcraft-previous/config.ttl
                        message.subdir: postcraft-previous
                        message.filepath: applications/postcraft-previous/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/postcraft-previous/transmissions.ttl
                        message.subdir: postcraft-previous
                        message.filepath: applications/postcraft-previous/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/postcraft-render1
StringFilter checking path = applications/postcraft-previous/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/postcraft-previous/config.ttl
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/postcraft-previous/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/postcraft-render1/about.md
                        message.subdir: postcraft-render1
                        message.filepath: applications/postcraft-render1/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/postcraft-render1/config.ttl
                        message.subdir: postcraft-render1
                        message.filepath: applications/postcraft-render1/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/postcraft-render1/data
StringFilter.process, done=false
StringFilter checking path = applications/postcraft-render1/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/postcraft-render1/config.ttl
FileReader successfully read file: /home/danny/github-danny/transmissions/src/api/http/WebRunner.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/claude-json-converter/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/postcraft-render1/data/cache

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: 2023-10-27_hello.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/postcraft-render1/data/cache/2023-10-27_hello.md
                        message.subdir: postcraft-render1
                        message.filepath: applications/postcraft-render1/data/cache/2023-10-27_hello.md
                        message.slugs: 2023-10-27_hello
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: 2025-01-08_hello-again.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/postcraft-render1/data/cache/2025-01-08_hello-again.md
                        message.subdir: postcraft-render1
                        message.filepath: applications/postcraft-render1/data/cache/2025-01-08_hello-again.md
                        message.slugs: 2025-01-08_hello-again
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
StringFilter checking path = applications/postcraft-render1/data/cache/2023-10-27_hello.md
Running >>> :  [p10.p20]  FileReader
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/postcraft-render1/sparql
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/postcraft-render1/data/cache/2025-01-08_hello-again.md
Running >>> :  [p10.p20]  FileReader
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/postcraft-render1/sparql/diamonds
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/postcraft-render1/transmissions.ttl
                        message.subdir: postcraft-render1
                        message.filepath: applications/postcraft-render1/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/postcraft-render2
StringFilter checking path = applications/postcraft-render1/transmissions.ttl
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/claude-json-converter/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/example-application/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/postcraft-render2/about.md
                        message.subdir: postcraft-render2
                        message.filepath: applications/postcraft-render2/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/postcraft-render2/config.ttl
                        message.subdir: postcraft-render2
                        message.filepath: applications/postcraft-render2/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/postcraft-render2/data
StringFilter.process, done=false
StringFilter checking path = applications/postcraft-render2/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/postcraft-render2/config.ttl

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/postcraft-render2/data/cache
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/example-application/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/file-pipeline/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: 2023-10-27_hello.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/postcraft-render2/data/cache/2023-10-27_hello.md
                        message.subdir: postcraft-render2
                        message.filepath: applications/postcraft-render2/data/cache/2023-10-27_hello.md
                        message.slugs: 2023-10-27_hello
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: 2025-01-08_hello-again.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/postcraft-render2/data/cache/2025-01-08_hello-again.md
                        message.subdir: postcraft-render2
                        message.filepath: applications/postcraft-render2/data/cache/2025-01-08_hello-again.md
                        message.slugs: 2025-01-08_hello-again
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
StringFilter checking path = applications/postcraft-render2/data/cache/2023-10-27_hello.md
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/postcraft-render2/transmissions.ttl
                        message.subdir: postcraft-render2
                        message.filepath: applications/postcraft-render2/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/selfie
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/postcraft-render2/data/cache/2025-01-08_hello-again.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/postcraft-render2/transmissions.ttl

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/selfie/about.md
                        message.subdir: selfie
                        message.filepath: applications/selfie/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/selfie/config.ttl
                        message.subdir: selfie
                        message.filepath: applications/selfie/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/selfie/data
StringFilter.process, done=false
StringFilter checking path = applications/selfie/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/selfie/config.ttl
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/selfie/data/input
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/file-pipeline/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/globbo/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/selfie/data/output

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/selfie/transmissions.ttl
                        message.subdir: selfie
                        message.filepath: applications/selfie/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/string-pipeline
StringFilter checking path = applications/selfie/transmissions.ttl
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/globbo/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/html-to-md/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/string-pipeline/about.md
                        message.subdir: string-pipeline
                        message.filepath: applications/string-pipeline/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/string-pipeline/config.ttl
                        message.subdir: string-pipeline
                        message.filepath: applications/string-pipeline/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/string-pipeline/transmissions.ttl
                        message.subdir: string-pipeline
                        message.filepath: applications/string-pipeline/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_blanker
StringFilter checking path = applications/string-pipeline/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/string-pipeline/config.ttl
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/string-pipeline/transmissions.ttl

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_blanker/about.md
                        message.subdir: test_blanker
                        message.filepath: applications/test_blanker/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_blanker/config.ttl
                        message.subdir: test_blanker
                        message.filepath: applications/test_blanker/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_blanker/data
StringFilter.process, done=false
StringFilter checking path = applications/test_blanker/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_blanker/config.ttl
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_blanker/data/input
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_blanker/data/output
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/html-to-md/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/link-lister/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_blanker/transmissions.ttl
                        message.subdir: test_blanker
                        message.filepath: applications/test_blanker/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_config-settings
StringFilter checking path = applications/test_blanker/transmissions.ttl

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_config-settings/about.md
                        message.subdir: test_config-settings
                        message.filepath: applications/test_config-settings/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_config-settings/config.ttl
                        message.subdir: test_config-settings
                        message.filepath: applications/test_config-settings/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_config-settings/data
StringFilter.process, done=false
StringFilter checking path = applications/test_config-settings/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_config-settings/config.ttl
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_config-settings/data/input
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_config-settings/data/output
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_config-settings/transmissions.ttl
                        message.subdir: test_config-settings
                        message.filepath: applications/test_config-settings/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_configmap
StringFilter checking path = applications/test_config-settings/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_configmap/about.md
                        message.subdir: test_configmap
                        message.filepath: applications/test_configmap/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_configmap/config.ttl
                        message.subdir: test_configmap
                        message.filepath: applications/test_configmap/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_configmap/data
StringFilter.process, done=false
StringFilter checking path = applications/test_configmap/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_configmap/config.ttl
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_configmap/data/input
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: input-01.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_configmap/data/input/input-01.md
                        message.subdir: test_configmap
                        message.filepath: applications/test_configmap/data/input/input-01.md
                        message.slugs: input-01
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_configmap/data/output
StringFilter checking path = applications/test_configmap/data/input/input-01.md
Running >>> :  [p10.p20]  FileReader
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/link-lister/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/link-lister/data/links.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: output-01.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_configmap/data/output/output-01.md
                        message.subdir: test_configmap
                        message.filepath: applications/test_configmap/data/output/output-01.md
                        message.slugs: output-01
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: required-01.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_configmap/data/output/required-01.md
                        message.subdir: test_configmap
                        message.filepath: applications/test_configmap/data/output/required-01.md
                        message.slugs: required-01
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
StringFilter checking path = applications/test_configmap/data/output/output-01.md
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: manifest.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_configmap/manifest.ttl
                        message.subdir: test_configmap
                        message.filepath: applications/test_configmap/manifest.ttl
                        message.slugs: manifest
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: simple.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_configmap/simple.js
                        message.subdir: test_configmap
                        message.filepath: applications/test_configmap/simple.js
                        message.slugs: simple
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_configmap/transmissions.ttl
                        message.subdir: test_configmap
                        message.filepath: applications/test_configmap/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_dirwalker
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_configmap/data/output/required-01.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_configmap/manifest.ttl
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_configmap/simple.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_configmap/transmissions.ttl

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_dirwalker/about.md
                        message.subdir: test_dirwalker
                        message.filepath: applications/test_dirwalker/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_dirwalker/config.ttl
                        message.subdir: test_dirwalker
                        message.filepath: applications/test_dirwalker/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_dirwalker/data
StringFilter.process, done=false
StringFilter checking path = applications/test_dirwalker/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_dirwalker/config.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about-data.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_dirwalker/data/about-data.md
                        message.subdir: test_dirwalker
                        message.filepath: applications/test_dirwalker/data/about-data.md
                        message.slugs: about-data
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_dirwalker/data/subdir
StringFilter.process, done=false
StringFilter checking path = applications/test_dirwalker/data/about-data.md
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about-subdir.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_dirwalker/data/subdir/about-subdir.md
                        message.subdir: test_dirwalker
                        message.filepath: applications/test_dirwalker/data/subdir/about-subdir.md
                        message.slugs: about-subdir
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_dirwalker/data/subdir/about-subdir.md
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_dirwalker/transmissions.ttl
                        message.subdir: test_dirwalker
                        message.filepath: applications/test_dirwalker/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_env-loader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_dirwalker/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_env-loader/about.md
                        message.subdir: test_env-loader
                        message.filepath: applications/test_env-loader/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_env-loader/config.ttl
                        message.subdir: test_env-loader
                        message.filepath: applications/test_env-loader/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_env-loader/transmissions.ttl
                        message.subdir: test_env-loader
                        message.filepath: applications/test_env-loader/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_file-copy-remove
StringFilter checking path = applications/test_env-loader/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_env-loader/config.ttl
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_env-loader/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_file-copy-remove/about.md
                        message.subdir: test_file-copy-remove
                        message.filepath: applications/test_file-copy-remove/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_file-copy-remove/config.ttl
                        message.subdir: test_file-copy-remove
                        message.filepath: applications/test_file-copy-remove/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_file-copy-remove/data
StringFilter.process, done=false
StringFilter checking path = applications/test_file-copy-remove/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_file-copy-remove/config.ttl
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_file-copy-remove/data/several-empty
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/link-lister/data/links.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/link-lister/data/starter-links.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_file-copy-remove/data/several-full

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_file-copy-remove/data/single-empty
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_file-copy-remove/data/single-full
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_file-copy-remove/data/start
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/link-lister/data/starter-links.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/packer/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_file-copy-remove/transmissions.ttl
                        message.subdir: test_file-copy-remove
                        message.filepath: applications/test_file-copy-remove/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore
StringFilter checking path = applications/test_file-copy-remove/transmissions.ttl

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/about.md
                        message.subdir: test_file-to-sparqlstore
                        message.filepath: applications/test_file-to-sparqlstore/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/config.ttl
                        message.subdir: test_file-to-sparqlstore
                        message.filepath: applications/test_file-to-sparqlstore/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/data
StringFilter.process, done=false
StringFilter checking path = applications/test_file-to-sparqlstore/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_file-to-sparqlstore/config.ttl
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/data/input
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/packer/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/packer/packer-flow.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: input.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/data/input/input.md
                        message.subdir: test_file-to-sparqlstore
                        message.filepath: applications/test_file-to-sparqlstore/data/input/input.md
                        message.slugs: input
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/data/output
StringFilter checking path = applications/test_file-to-sparqlstore/data/input/input.md
Running >>> :  [p10.p20]  FileReader

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/diamonds
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/packer/packer-flow.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/packer/packer-sources.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/docs

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: handover-doc.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/docs/handover-doc.md
                        message.subdir: test_file-to-sparqlstore
                        message.filepath: applications/test_file-to-sparqlstore/docs/handover-doc.md
                        message.slugs: handover-doc
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: handover.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/docs/handover.ttl
                        message.subdir: test_file-to-sparqlstore
                        message.filepath: applications/test_file-to-sparqlstore/docs/handover.ttl
                        message.slugs: handover
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: sparql-processors-docs.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/docs/sparql-processors-docs.md
                        message.subdir: test_file-to-sparqlstore
                        message.filepath: applications/test_file-to-sparqlstore/docs/sparql-processors-docs.md
                        message.slugs: sparql-processors-docs
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: test-app-docs.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/docs/test-app-docs.md
                        message.subdir: test_file-to-sparqlstore
                        message.filepath: applications/test_file-to-sparqlstore/docs/test-app-docs.md
                        message.slugs: test-app-docs
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/examples
StringFilter checking path = applications/test_file-to-sparqlstore/docs/handover-doc.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_file-to-sparqlstore/docs/handover.ttl
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_file-to-sparqlstore/docs/sparql-processors-docs.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_file-to-sparqlstore/docs/test-app-docs.md
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: sparql-queries.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/examples/sparql-queries.md
                        message.subdir: test_file-to-sparqlstore
                        message.filepath: applications/test_file-to-sparqlstore/examples/sparql-queries.md
                        message.slugs: sparql-queries
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/transmissions.ttl
                        message.subdir: test_file-to-sparqlstore
                        message.filepath: applications/test_file-to-sparqlstore/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter checking path = applications/test_file-to-sparqlstore/examples/sparql-queries.md
Running >>> :  [p10.p20]  FileReader
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_filename-mapper
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_file-to-sparqlstore/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_filename-mapper/about.md
                        message.subdir: test_filename-mapper
                        message.filepath: applications/test_filename-mapper/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_filename-mapper/config.ttl
                        message.subdir: test_filename-mapper
                        message.filepath: applications/test_filename-mapper/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_filename-mapper/data
StringFilter.process, done=false
StringFilter checking path = applications/test_filename-mapper/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_filename-mapper/config.ttl
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/packer/packer-sources.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/postcraft/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_filename-mapper/data/input

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_filename-mapper/data/output
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: filename-mapper-simple.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_filename-mapper/filename-mapper-simple.js
                        message.subdir: test_filename-mapper
                        message.filepath: applications/test_filename-mapper/filename-mapper-simple.js
                        message.slugs: filename-mapper-simple
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_filename-mapper/transmissions.ttl
                        message.subdir: test_filename-mapper
                        message.filepath: applications/test_filename-mapper/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_filereader
StringFilter checking path = applications/test_filename-mapper/filename-mapper-simple.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_filename-mapper/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_filereader/about.md
                        message.subdir: test_filereader
                        message.filepath: applications/test_filereader/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_filereader/config.ttl
                        message.subdir: test_filereader
                        message.filepath: applications/test_filereader/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_filereader/data
StringFilter.process, done=false
StringFilter checking path = applications/test_filereader/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_filereader/config.ttl
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_filereader/data/input
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: input.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_filereader/data/input/input.md
                        message.subdir: test_filereader
                        message.filepath: applications/test_filereader/data/input/input.md
                        message.slugs: input
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_filereader/data/output
StringFilter checking path = applications/test_filereader/data/input/input.md
Running >>> :  [p10.p20]  FileReader
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/postcraft/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/postcraft-clear-cache/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_filereader/transmissions.ttl
                        message.subdir: test_filereader
                        message.filepath: applications/test_filereader/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_foreach
StringFilter checking path = applications/test_filereader/transmissions.ttl

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_foreach/about.md
                        message.subdir: test_foreach
                        message.filepath: applications/test_foreach/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_foreach/config.ttl
                        message.subdir: test_foreach
                        message.filepath: applications/test_foreach/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_foreach/transmissions.ttl
                        message.subdir: test_foreach
                        message.filepath: applications/test_foreach/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_fork
StringFilter checking path = applications/test_foreach/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_foreach/config.ttl
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_foreach/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_fork/about.md
                        message.subdir: test_fork
                        message.filepath: applications/test_fork/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_fork/config.ttl
                        message.subdir: test_fork
                        message.filepath: applications/test_fork/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_fork/transmissions.ttl
                        message.subdir: test_fork
                        message.filepath: applications/test_fork/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_fork-unfork
StringFilter checking path = applications/test_fork/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_fork/config.ttl
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_fork/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_fork-unfork/about.md
                        message.subdir: test_fork-unfork
                        message.filepath: applications/test_fork-unfork/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_fork-unfork/config.ttl
                        message.subdir: test_fork-unfork
                        message.filepath: applications/test_fork-unfork/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_fork-unfork/transmissions.ttl
                        message.subdir: test_fork-unfork
                        message.filepath: applications/test_fork-unfork/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_fs-rw
StringFilter checking path = applications/test_fork-unfork/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_fork-unfork/config.ttl
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_fork-unfork/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_fs-rw/about.md
                        message.subdir: test_fs-rw
                        message.filepath: applications/test_fs-rw/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_fs-rw/config.ttl
                        message.subdir: test_fs-rw
                        message.filepath: applications/test_fs-rw/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_fs-rw/data
StringFilter.process, done=false
StringFilter checking path = applications/test_fs-rw/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_fs-rw/config.ttl
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_fs-rw/data/input
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/postcraft-clear-cache/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/postcraft-previous/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: input-01.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_fs-rw/data/input/input-01.md
                        message.subdir: test_fs-rw
                        message.filepath: applications/test_fs-rw/data/input/input-01.md
                        message.slugs: input-01
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_fs-rw/data/output
StringFilter checking path = applications/test_fs-rw/data/input/input-01.md
Running >>> :  [p10.p20]  FileReader

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: required-01.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_fs-rw/data/output/required-01.md
                        message.subdir: test_fs-rw
                        message.filepath: applications/test_fs-rw/data/output/required-01.md
                        message.slugs: required-01
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_fs-rw/data/output/required-01.md
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: simple.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_fs-rw/simple.js
                        message.subdir: test_fs-rw
                        message.filepath: applications/test_fs-rw/simple.js
                        message.slugs: simple
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_fs-rw/transmissions.ttl
                        message.subdir: test_fs-rw
                        message.filepath: applications/test_fs-rw/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_http-server
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_fs-rw/simple.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_fs-rw/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_http-server/about.md
                        message.subdir: test_http-server
                        message.filepath: applications/test_http-server/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_http-server/config.ttl
                        message.subdir: test_http-server
                        message.filepath: applications/test_http-server/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_http-server/data
StringFilter.process, done=false
StringFilter checking path = applications/test_http-server/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_http-server/config.ttl
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_http-server/data/input
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/postcraft-previous/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/postcraft-render1/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: metrics.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_http-server/data/input/metrics.js
                        message.subdir: test_http-server
                        message.filepath: applications/test_http-server/data/input/metrics.js
                        message.slugs: metrics
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_http-server/data/output
StringFilter checking path = applications/test_http-server/data/input/metrics.js
Running >>> :  [p10.p20]  FileReader

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: shutdown-client-auth.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_http-server/shutdown-client-auth.js
                        message.subdir: test_http-server
                        message.filepath: applications/test_http-server/shutdown-client-auth.js
                        message.slugs: shutdown-client-auth
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: test-shutdown.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_http-server/test-shutdown.js
                        message.subdir: test_http-server
                        message.filepath: applications/test_http-server/test-shutdown.js
                        message.slugs: test-shutdown
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_http-server/transmissions.ttl
                        message.subdir: test_http-server
                        message.filepath: applications/test_http-server/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_multi-pipe
StringFilter checking path = applications/test_http-server/shutdown-client-auth.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_http-server/test-shutdown.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_http-server/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_multi-pipe/about.md
                        message.subdir: test_multi-pipe
                        message.filepath: applications/test_multi-pipe/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_multi-pipe/config.ttl
                        message.subdir: test_multi-pipe
                        message.filepath: applications/test_multi-pipe/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_multi-pipe/transmissions.ttl
                        message.subdir: test_multi-pipe
                        message.filepath: applications/test_multi-pipe/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_nop
StringFilter checking path = applications/test_multi-pipe/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_multi-pipe/config.ttl
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_multi-pipe/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_nop/about.md
                        message.subdir: test_nop
                        message.filepath: applications/test_nop/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_nop/config.ttl
                        message.subdir: test_nop
                        message.filepath: applications/test_nop/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_nop/transmissions.ttl
                        message.subdir: test_nop
                        message.filepath: applications/test_nop/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_ping
StringFilter checking path = applications/test_nop/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_nop/config.ttl
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_nop/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_ping/config.ttl
                        message.subdir: test_ping
                        message.filepath: applications/test_ping/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_ping/transmissions.ttl
                        message.subdir: test_ping
                        message.filepath: applications/test_ping/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_restructure
StringFilter checking path = applications/test_ping/config.ttl
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_ping/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_restructure/about.md
                        message.subdir: test_restructure
                        message.filepath: applications/test_restructure/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_restructure/config.ttl
                        message.subdir: test_restructure
                        message.filepath: applications/test_restructure/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_restructure/data
StringFilter.process, done=false
StringFilter checking path = applications/test_restructure/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_restructure/config.ttl
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/postcraft-render1/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/postcraft-render1/data/cache/2023-10-27_hello.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_restructure/data/input

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_restructure/data/output
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: simple.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_restructure/simple.js
                        message.subdir: test_restructure
                        message.filepath: applications/test_restructure/simple.js
                        message.slugs: simple
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_restructure/transmissions.ttl
                        message.subdir: test_restructure
                        message.filepath: applications/test_restructure/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_runcommand
StringFilter checking path = applications/test_restructure/simple.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_restructure/transmissions.ttl
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_runcommand/about.md
                        message.subdir: test_runcommand
                        message.filepath: applications/test_runcommand/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_runcommand/config.ttl
                        message.subdir: test_runcommand
                        message.filepath: applications/test_runcommand/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_runcommand/data
StringFilter.process, done=false
StringFilter checking path = applications/test_runcommand/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_runcommand/config.ttl
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_runcommand/data/output
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: simple.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_runcommand/simple.js
                        message.subdir: test_runcommand
                        message.filepath: applications/test_runcommand/simple.js
                        message.slugs: simple
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_runcommand/transmissions.ttl
                        message.subdir: test_runcommand
                        message.filepath: applications/test_runcommand/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/applications/test_two-transmissions
StringFilter checking path = applications/test_runcommand/simple.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_runcommand/transmissions.ttl
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/postcraft-render1/data/cache/2023-10-27_hello.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/postcraft-render1/data/cache/2025-01-08_hello-again.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_two-transmissions/about.md
                        message.subdir: test_two-transmissions
                        message.filepath: applications/test_two-transmissions/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: config.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_two-transmissions/config.ttl
                        message.subdir: test_two-transmissions
                        message.filepath: applications/test_two-transmissions/config.ttl
                        message.slugs: config
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: transmissions.ttl
                        message.fullPath: /home/danny/github-danny/transmissions/src/applications/test_two-transmissions/transmissions.ttl
                        message.subdir: test_two-transmissions
                        message.filepath: applications/test_two-transmissions/transmissions.ttl
                        message.slugs: transmissions
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
StringFilter checking path = applications/test_two-transmissions/about.md
Running >>> :  [p10.p20]  FileReader
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/core
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_two-transmissions/config.ttl
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = applications/test_two-transmissions/transmissions.ttl

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: ApplicationManager.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/core/ApplicationManager.js
                        message.subdir: undefined
                        message.filepath: core/ApplicationManager.js
                        message.slugs: ApplicationManager
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: Director.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/core/Director.js
                        message.subdir: undefined
                        message.filepath: core/Director.js
                        message.slugs: Director
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: ModuleLoader.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/core/ModuleLoader.js
                        message.subdir: undefined
                        message.filepath: core/ModuleLoader.js
                        message.slugs: ModuleLoader
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: ModuleLoaderFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/core/ModuleLoaderFactory.js
                        message.subdir: undefined
                        message.filepath: core/ModuleLoaderFactory.js
                        message.slugs: ModuleLoaderFactory
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: Procurer.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/core/Procurer.js
                        message.subdir: undefined
                        message.filepath: core/Procurer.js
                        message.slugs: Procurer
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: TransmissionBuilder.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/core/TransmissionBuilder.js
                        message.subdir: undefined
                        message.filepath: core/TransmissionBuilder.js
                        message.slugs: TransmissionBuilder
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: WorkerPool.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/core/WorkerPool.js
                        message.subdir: undefined
                        message.filepath: core/WorkerPool.js
                        message.slugs: WorkerPool
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/engine
StringFilter checking path = core/ApplicationManager.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = core/Director.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = core/ModuleLoader.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = core/ModuleLoaderFactory.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = core/Procurer.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = core/TransmissionBuilder.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = core/WorkerPool.js
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: Application.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/engine/Application.js
                        message.subdir: undefined
                        message.filepath: engine/Application.js
                        message.slugs: Application
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: Connector.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/engine/Connector.js
                        message.subdir: undefined
                        message.filepath: engine/Connector.js
                        message.slugs: Connector
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: Transmission.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/engine/Transmission.js
                        message.subdir: undefined
                        message.filepath: engine/Transmission.js
                        message.slugs: Transmission
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors
StringFilter checking path = engine/Application.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = engine/Connector.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = engine/Transmission.js
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/about.md
                        message.subdir: undefined
                        message.filepath: processors/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/base
StringFilter.process, done=false
StringFilter checking path = processors/about.md
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: AbstractProcessorFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/base/AbstractProcessorFactory.js
                        message.subdir: base
                        message.filepath: processors/base/AbstractProcessorFactory.js
                        message.slugs: AbstractProcessorFactory
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: Processor.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/base/Processor.js
                        message.subdir: base
                        message.filepath: processors/base/Processor.js
                        message.slugs: Processor
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: ProcessorSettings.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/base/ProcessorSettings.js
                        message.subdir: base
                        message.filepath: processors/base/ProcessorSettings.js
                        message.slugs: ProcessorSettings
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/example-group
StringFilter checking path = processors/base/AbstractProcessorFactory.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/base/Processor.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/base/ProcessorSettings.js
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: ExampleProcessor.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/example-group/ExampleProcessor.js
                        message.subdir: example-group
                        message.filepath: processors/example-group/ExampleProcessor.js
                        message.slugs: ExampleProcessor
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: ExampleProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/example-group/ExampleProcessorsFactory.js
                        message.subdir: example-group
                        message.filepath: processors/example-group/ExampleProcessorsFactory.js
                        message.slugs: ExampleProcessorsFactory
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/example-group/about.md
                        message.subdir: example-group
                        message.filepath: processors/example-group/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/flow
StringFilter checking path = processors/example-group/ExampleProcessor.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/example-group/ExampleProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/example-group/about.md
Running >>> :  [p10.p20]  FileReader
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/postcraft-render1/data/cache/2025-01-08_hello-again.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/postcraft-render2/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: DeadEnd.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/flow/DeadEnd.js
                        message.subdir: flow
                        message.filepath: processors/flow/DeadEnd.js
                        message.slugs: DeadEnd
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: FlowProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/flow/FlowProcessorsFactory.js
                        message.subdir: flow
                        message.filepath: processors/flow/FlowProcessorsFactory.js
                        message.slugs: FlowProcessorsFactory
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: ForEach.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/flow/ForEach.js
                        message.subdir: flow
                        message.filepath: processors/flow/ForEach.js
                        message.slugs: ForEach
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: Fork.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/flow/Fork.js
                        message.subdir: flow
                        message.filepath: processors/flow/Fork.js
                        message.slugs: Fork
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: Halt.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/flow/Halt.js
                        message.subdir: flow
                        message.filepath: processors/flow/Halt.js
                        message.slugs: Halt
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: NOP.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/flow/NOP.js
                        message.subdir: flow
                        message.filepath: processors/flow/NOP.js
                        message.slugs: NOP
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: Ping.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/flow/Ping.js
                        message.subdir: flow
                        message.filepath: processors/flow/Ping.js
                        message.slugs: Ping
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: Unfork.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/flow/Unfork.js
                        message.subdir: flow
                        message.filepath: processors/flow/Unfork.js
                        message.slugs: Unfork
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/fs
StringFilter checking path = processors/flow/DeadEnd.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/flow/FlowProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/flow/ForEach.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/flow/Fork.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/flow/Halt.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/flow/NOP.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/flow/Ping.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/flow/Unfork.js
Running >>> :  [p10.p20]  FileReader

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: DirWalker.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/fs/DirWalker.js
                        message.subdir: fs
                        message.filepath: processors/fs/DirWalker.js
                        message.slugs: DirWalker
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: FileCopy.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/fs/FileCopy.js
                        message.subdir: fs
                        message.filepath: processors/fs/FileCopy.js
                        message.slugs: FileCopy
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: FileReader.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/fs/FileReader.js
                        message.subdir: fs
                        message.filepath: processors/fs/FileReader.js
                        message.slugs: FileReader
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: FileRemove.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/fs/FileRemove.js
                        message.subdir: fs
                        message.filepath: processors/fs/FileRemove.js
                        message.slugs: FileRemove
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: FileWriter.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/fs/FileWriter.js
                        message.subdir: fs
                        message.filepath: processors/fs/FileWriter.js
                        message.slugs: FileWriter
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: FilenameMapper.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/fs/FilenameMapper.js
                        message.subdir: fs
                        message.filepath: processors/fs/FilenameMapper.js
                        message.slugs: FilenameMapper
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: FsProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/fs/FsProcessorsFactory.js
                        message.subdir: fs
                        message.filepath: processors/fs/FsProcessorsFactory.js
                        message.slugs: FsProcessorsFactory
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/github
StringFilter checking path = processors/fs/DirWalker.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/fs/FileCopy.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/fs/FileReader.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/fs/FileRemove.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/fs/FileWriter.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/fs/FilenameMapper.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/fs/FsProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: GitHubList.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/github/GitHubList.js
                        message.subdir: github
                        message.filepath: processors/github/GitHubList.js
                        message.slugs: GitHubList
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: GitHubList_no-pag.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/github/GitHubList_no-pag.js
                        message.subdir: github
                        message.filepath: processors/github/GitHubList_no-pag.js
                        message.slugs: GitHubList_no-pag
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: GitHubProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/github/GitHubProcessorsFactory.js
                        message.subdir: github
                        message.filepath: processors/github/GitHubProcessorsFactory.js
                        message.slugs: GitHubProcessorsFactory
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/http
StringFilter checking path = processors/github/GitHubList.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/github/GitHubList_no-pag.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/github/GitHubProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: HttpClient.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/http/HttpClient.js
                        message.subdir: http
                        message.filepath: processors/http/HttpClient.js
                        message.slugs: HttpClient
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: HttpProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/http/HttpProcessorsFactory.js
                        message.subdir: http
                        message.filepath: processors/http/HttpProcessorsFactory.js
                        message.slugs: HttpProcessorsFactory
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: HttpProxy.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/http/HttpProxy.js
                        message.subdir: http
                        message.filepath: processors/http/HttpProxy.js
                        message.slugs: HttpProxy
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: HttpServer.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/http/HttpServer.js
                        message.subdir: http
                        message.filepath: processors/http/HttpServer.js
                        message.slugs: HttpServer
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: HttpServerWorker.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/http/HttpServerWorker.js
                        message.subdir: http
                        message.filepath: processors/http/HttpServerWorker.js
                        message.slugs: HttpServerWorker
Running >>> :  [p10]  StringFilter
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/http/services
StringFilter.process, done=false
StringFilter checking path = processors/http/HttpClient.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/http/HttpProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/http/HttpProxy.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/http/HttpServer.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/http/HttpServerWorker.js
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: MetricsService.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/http/services/MetricsService.js
                        message.subdir: http
                        message.filepath: processors/http/services/MetricsService.js
                        message.slugs: MetricsService
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: ShutdownService copy.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/http/services/ShutdownService copy.js
                        message.subdir: http
                        message.filepath: processors/http/services/ShutdownService copy.js
                        message.slugs: ShutdownService copy
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: ShutdownService.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/http/services/ShutdownService.js
                        message.subdir: http
                        message.filepath: processors/http/services/ShutdownService.js
                        message.slugs: ShutdownService
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
StringFilter checking path = processors/http/services/MetricsService.js
Running >>> :  [p10.p20]  FileReader
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/json
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/http/services/ShutdownService copy.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/http/services/ShutdownService.js
Running >>> :  [p10.p20]  FileReader
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/postcraft-render2/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/postcraft-render2/data/cache/2023-10-27_hello.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: Blanker copy.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/json/Blanker copy.js
                        message.subdir: json
                        message.filepath: processors/json/Blanker copy.js
                        message.slugs: Blanker copy
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: Blanker.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/json/Blanker.js
                        message.subdir: json
                        message.filepath: processors/json/Blanker.js
                        message.slugs: Blanker
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: JSONProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/json/JSONProcessorsFactory.js
                        message.subdir: json
                        message.filepath: processors/json/JSONProcessorsFactory.js
                        message.slugs: JSONProcessorsFactory
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: JSONWalker.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/json/JSONWalker.js
                        message.subdir: json
                        message.filepath: processors/json/JSONWalker.js
                        message.slugs: JSONWalker
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: JsonRestructurer.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/json/JsonRestructurer.js
                        message.subdir: json
                        message.filepath: processors/json/JsonRestructurer.js
                        message.slugs: JsonRestructurer
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: Restructure.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/json/Restructure.js
                        message.subdir: json
                        message.filepath: processors/json/Restructure.js
                        message.slugs: Restructure
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: ValueConcat.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/json/ValueConcat.js
                        message.subdir: json
                        message.filepath: processors/json/ValueConcat.js
                        message.slugs: ValueConcat
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/markup
StringFilter checking path = processors/json/Blanker copy.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/json/Blanker.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/json/JSONProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/json/JSONWalker.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/json/JsonRestructurer.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/json/Restructure.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/json/ValueConcat.js
Running >>> :  [p10.p20]  FileReader

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: LinkFinder.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/markup/LinkFinder.js
                        message.subdir: markup
                        message.filepath: processors/markup/LinkFinder.js
                        message.slugs: LinkFinder
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: MarkdownToHTML.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/markup/MarkdownToHTML.js
                        message.subdir: markup
                        message.filepath: processors/markup/MarkdownToHTML.js
                        message.slugs: MarkdownToHTML
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: MarkupProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/markup/MarkupProcessorsFactory.js
                        message.subdir: markup
                        message.filepath: processors/markup/MarkupProcessorsFactory.js
                        message.slugs: MarkupProcessorsFactory
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: MetadataExtractor.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/markup/MetadataExtractor.js
                        message.subdir: markup
                        message.filepath: processors/markup/MetadataExtractor.js
                        message.slugs: MetadataExtractor
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/mcp
StringFilter checking path = processors/markup/LinkFinder.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/markup/MarkdownToHTML.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/markup/MarkupProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/markup/MetadataExtractor.js
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: McpClient.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/mcp/McpClient.js
                        message.subdir: mcp
                        message.filepath: processors/mcp/McpClient.js
                        message.slugs: McpClient
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: McpProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/mcp/McpProcessorsFactory.js
                        message.subdir: mcp
                        message.filepath: processors/mcp/McpProcessorsFactory.js
                        message.slugs: McpProcessorsFactory
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: McpServer.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/mcp/McpServer.js
                        message.subdir: mcp
                        message.filepath: processors/mcp/McpServer.js
                        message.slugs: McpServer
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/packer
StringFilter checking path = processors/mcp/McpClient.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/mcp/McpProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/mcp/McpServer.js
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: CommentStripper.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/packer/CommentStripper.js
                        message.subdir: packer
                        message.filepath: processors/packer/CommentStripper.js
                        message.slugs: CommentStripper
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: FileContainer.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/packer/FileContainer.js
                        message.subdir: packer
                        message.filepath: processors/packer/FileContainer.js
                        message.slugs: FileContainer
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: PackerProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/packer/PackerProcessorsFactory.js
                        message.subdir: packer
                        message.filepath: processors/packer/PackerProcessorsFactory.js
                        message.slugs: PackerProcessorsFactory
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: comment-stripper.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/packer/comment-stripper.js
                        message.subdir: packer
                        message.filepath: processors/packer/comment-stripper.js
                        message.slugs: comment-stripper
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: file-container.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/packer/file-container.js
                        message.subdir: packer
                        message.filepath: processors/packer/file-container.js
                        message.slugs: file-container
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: packer-factory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/packer/packer-factory.js
                        message.subdir: packer
                        message.filepath: processors/packer/packer-factory.js
                        message.slugs: packer-factory
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/postcraft
StringFilter checking path = processors/packer/CommentStripper.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/packer/FileContainer.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/packer/PackerProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/packer/comment-stripper.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/packer/file-container.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/packer/packer-factory.js
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: AtomFeedPrep.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/postcraft/AtomFeedPrep.js
                        message.subdir: postcraft
                        message.filepath: processors/postcraft/AtomFeedPrep.js
                        message.slugs: AtomFeedPrep
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: EntryContentToPagePrep.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/postcraft/EntryContentToPagePrep.js
                        message.subdir: postcraft
                        message.filepath: processors/postcraft/EntryContentToPagePrep.js
                        message.slugs: EntryContentToPagePrep
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: FrontPagePrep.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/postcraft/FrontPagePrep.js
                        message.subdir: postcraft
                        message.filepath: processors/postcraft/FrontPagePrep.js
                        message.slugs: FrontPagePrep
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: PostcraftDispatcher.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/postcraft/PostcraftDispatcher.js
                        message.subdir: postcraft
                        message.filepath: processors/postcraft/PostcraftDispatcher.js
                        message.slugs: PostcraftDispatcher
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: PostcraftPrep.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/postcraft/PostcraftPrep.js
                        message.subdir: postcraft
                        message.filepath: processors/postcraft/PostcraftPrep.js
                        message.slugs: PostcraftPrep
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: PostcraftProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/postcraft/PostcraftProcessorsFactory.js
                        message.subdir: postcraft
                        message.filepath: processors/postcraft/PostcraftProcessorsFactory.js
                        message.slugs: PostcraftProcessorsFactory
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/protocols
StringFilter checking path = processors/postcraft/AtomFeedPrep.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/postcraft/EntryContentToPagePrep.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/postcraft/FrontPagePrep.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/postcraft/PostcraftDispatcher.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/postcraft/PostcraftPrep.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/postcraft/PostcraftProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: HttpGet.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/protocols/HttpGet.js
                        message.subdir: protocols
                        message.filepath: processors/protocols/HttpGet.js
                        message.slugs: HttpGet
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: ProtocolsProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/protocols/ProtocolsProcessorsFactory.js
                        message.subdir: protocols
                        message.filepath: processors/protocols/ProtocolsProcessorsFactory.js
                        message.slugs: ProtocolsProcessorsFactory
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/rdf
StringFilter checking path = processors/protocols/HttpGet.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/protocols/ProtocolsProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/postcraft-render2/data/cache/2023-10-27_hello.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/postcraft-render2/data/cache/2025-01-08_hello-again.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: ConfigMap copy.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/rdf/ConfigMap copy.js
                        message.subdir: rdf
                        message.filepath: processors/rdf/ConfigMap copy.js
                        message.slugs: ConfigMap copy
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: ConfigMap.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/rdf/ConfigMap.js
                        message.subdir: rdf
                        message.filepath: processors/rdf/ConfigMap.js
                        message.slugs: ConfigMap
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: DatasetReader copy.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/rdf/DatasetReader copy.js
                        message.subdir: rdf
                        message.filepath: processors/rdf/DatasetReader copy.js
                        message.slugs: DatasetReader copy
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: DatasetReader.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/rdf/DatasetReader.js
                        message.subdir: rdf
                        message.filepath: processors/rdf/DatasetReader.js
                        message.slugs: DatasetReader
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: RDFConfig.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/rdf/RDFConfig.js
                        message.subdir: rdf
                        message.filepath: processors/rdf/RDFConfig.js
                        message.slugs: RDFConfig
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: RDFProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/rdf/RDFProcessorsFactory.js
                        message.subdir: rdf
                        message.filepath: processors/rdf/RDFProcessorsFactory.js
                        message.slugs: RDFProcessorsFactory
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/sparql
StringFilter checking path = processors/rdf/ConfigMap copy.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/rdf/ConfigMap.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/rdf/DatasetReader copy.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/rdf/DatasetReader.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/rdf/RDFConfig.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/rdf/RDFProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: SPARQLProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/sparql/SPARQLProcessorsFactory.js
                        message.subdir: sparql
                        message.filepath: processors/sparql/SPARQLProcessorsFactory.js
                        message.slugs: SPARQLProcessorsFactory
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: SPARQLSelect.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/sparql/SPARQLSelect.js
                        message.subdir: sparql
                        message.filepath: processors/sparql/SPARQLSelect.js
                        message.slugs: SPARQLSelect
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: SPARQLUpdate.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/sparql/SPARQLUpdate.js
                        message.subdir: sparql
                        message.filepath: processors/sparql/SPARQLUpdate.js
                        message.slugs: SPARQLUpdate
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: SessionEnvironment.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/sparql/SessionEnvironment.js
                        message.subdir: sparql
                        message.filepath: processors/sparql/SessionEnvironment.js
                        message.slugs: SessionEnvironment
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/sparql/about.md
                        message.subdir: sparql
                        message.filepath: processors/sparql/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/staging
StringFilter checking path = processors/sparql/SPARQLProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/sparql/SPARQLSelect.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/sparql/SPARQLUpdate.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/sparql/SessionEnvironment.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/sparql/about.md
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: MarkdownFormatter.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/staging/MarkdownFormatter.js
                        message.subdir: staging
                        message.filepath: processors/staging/MarkdownFormatter.js
                        message.slugs: MarkdownFormatter
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: StagingProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/staging/StagingProcessorsFactory.js
                        message.subdir: staging
                        message.filepath: processors/staging/StagingProcessorsFactory.js
                        message.slugs: StagingProcessorsFactory
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: TurtleFormatter.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/staging/TurtleFormatter.js
                        message.subdir: staging
                        message.filepath: processors/staging/TurtleFormatter.js
                        message.slugs: TurtleFormatter
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/system
StringFilter checking path = processors/staging/MarkdownFormatter.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/staging/StagingProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/staging/TurtleFormatter.js
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: EnvLoader.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/system/EnvLoader.js
                        message.subdir: system
                        message.filepath: processors/system/EnvLoader.js
                        message.slugs: EnvLoader
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: SystemProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/system/SystemProcessorsFactory.js
                        message.subdir: system
                        message.filepath: processors/system/SystemProcessorsFactory.js
                        message.slugs: SystemProcessorsFactory
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/test
StringFilter checking path = processors/system/EnvLoader.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/system/SystemProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: AppendProcess.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/test/AppendProcess.js
                        message.subdir: test
                        message.filepath: processors/test/AppendProcess.js
                        message.slugs: AppendProcess
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: FileSink.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/test/FileSink.js
                        message.subdir: test
                        message.filepath: processors/test/FileSink.js
                        message.slugs: FileSink
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: FileSource.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/test/FileSource.js
                        message.subdir: test
                        message.filepath: processors/test/FileSource.js
                        message.slugs: FileSource
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: StringSink.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/test/StringSink.js
                        message.subdir: test
                        message.filepath: processors/test/StringSink.js
                        message.slugs: StringSink
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: StringSource.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/test/StringSource.js
                        message.subdir: test
                        message.filepath: processors/test/StringSource.js
                        message.slugs: StringSource
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: TestProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/test/TestProcessorsFactory.js
                        message.subdir: test
                        message.filepath: processors/test/TestProcessorsFactory.js
                        message.slugs: TestProcessorsFactory
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/text
StringFilter checking path = processors/test/AppendProcess.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/test/FileSink.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/test/FileSource.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/test/StringSink.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/test/StringSource.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/test/TestProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: LineReader.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/text/LineReader.js
                        message.subdir: text
                        message.filepath: processors/text/LineReader.js
                        message.slugs: LineReader
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: StringFilter copy.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/text/StringFilter copy.js
                        message.subdir: text
                        message.filepath: processors/text/StringFilter copy.js
                        message.slugs: StringFilter copy
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: StringFilter.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/text/StringFilter.js
                        message.subdir: text
                        message.filepath: processors/text/StringFilter.js
                        message.slugs: StringFilter
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: StringMerger.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/text/StringMerger.js
                        message.subdir: text
                        message.filepath: processors/text/StringMerger.js
                        message.slugs: StringMerger
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: StringReplace.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/text/StringReplace.js
                        message.subdir: text
                        message.filepath: processors/text/StringReplace.js
                        message.slugs: StringReplace
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: Templater.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/text/Templater.js
                        message.subdir: text
                        message.filepath: processors/text/Templater.js
                        message.slugs: Templater
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: TextProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/text/TextProcessorsFactory.js
                        message.subdir: text
                        message.filepath: processors/text/TextProcessorsFactory.js
                        message.slugs: TextProcessorsFactory
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/unsafe
StringFilter checking path = processors/text/LineReader.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/text/StringFilter copy.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/text/StringFilter.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/text/StringMerger.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/text/StringReplace.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/text/Templater.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/text/TextProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: RunCommand.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/unsafe/RunCommand.js
                        message.subdir: unsafe
                        message.filepath: processors/unsafe/RunCommand.js
                        message.slugs: RunCommand
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: UnsafeProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/unsafe/UnsafeProcessorsFactory.js
                        message.subdir: unsafe
                        message.filepath: processors/unsafe/UnsafeProcessorsFactory.js
                        message.slugs: UnsafeProcessorsFactory
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/util
StringFilter checking path = processors/unsafe/RunCommand.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/unsafe/UnsafeProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/postcraft-render2/data/cache/2025-01-08_hello-again.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/selfie/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: CaptureAll.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/util/CaptureAll.js
                        message.subdir: util
                        message.filepath: processors/util/CaptureAll.js
                        message.slugs: CaptureAll
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: SetMessage.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/util/SetMessage.js
                        message.subdir: util
                        message.filepath: processors/util/SetMessage.js
                        message.slugs: SetMessage
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: ShowConfig.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/util/ShowConfig.js
                        message.subdir: util
                        message.filepath: processors/util/ShowConfig.js
                        message.slugs: ShowConfig
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: ShowMessage.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/util/ShowMessage.js
                        message.subdir: util
                        message.filepath: processors/util/ShowMessage.js
                        message.slugs: ShowMessage
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: ShowSettings.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/util/ShowSettings.js
                        message.subdir: util
                        message.filepath: processors/util/ShowSettings.js
                        message.slugs: ShowSettings
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: ShowTransmission.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/util/ShowTransmission.js
                        message.subdir: util
                        message.filepath: processors/util/ShowTransmission.js
                        message.slugs: ShowTransmission
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: Stash.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/util/Stash.js
                        message.subdir: util
                        message.filepath: processors/util/Stash.js
                        message.slugs: Stash
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: UtilProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/util/UtilProcessorsFactory.js
                        message.subdir: util
                        message.filepath: processors/util/UtilProcessorsFactory.js
                        message.slugs: UtilProcessorsFactory
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: WhiteboardToMessage.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/util/WhiteboardToMessage.js
                        message.subdir: util
                        message.filepath: processors/util/WhiteboardToMessage.js
                        message.slugs: WhiteboardToMessage
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/processors/xmpp
StringFilter checking path = processors/util/CaptureAll.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/util/SetMessage.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/util/ShowConfig.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/util/ShowMessage.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/util/ShowSettings.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/util/ShowTransmission.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/util/Stash.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/util/UtilProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/util/WhiteboardToMessage.js
Running >>> :  [p10.p20]  FileReader

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: XmppClient.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/xmpp/XmppClient.js
                        message.subdir: xmpp
                        message.filepath: processors/xmpp/XmppClient.js
                        message.slugs: XmppClient
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: XmppProcessorsFactory.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/processors/xmpp/XmppProcessorsFactory.js
                        message.subdir: xmpp
                        message.filepath: processors/xmpp/XmppProcessorsFactory.js
                        message.slugs: XmppProcessorsFactory
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
StringFilter checking path = processors/xmpp/XmppClient.js
Running >>> :  [p10.p20]  FileReader
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/simples
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = processors/xmpp/XmppProcessorsFactory.js
Running >>> :  [p10.p20]  FileReader
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/simples/env-loader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: about.md
                        message.fullPath: /home/danny/github-danny/transmissions/src/simples/env-loader/about.md
                        message.subdir: env-loader
                        message.filepath: simples/env-loader/about.md
                        message.slugs: about
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: env-loader.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/simples/env-loader/env-loader.js
                        message.subdir: env-loader
                        message.filepath: simples/env-loader/env-loader.js
                        message.slugs: env-loader
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/simples/nop
StringFilter checking path = simples/env-loader/about.md
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = simples/env-loader/env-loader.js
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: nop copy.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/simples/nop/nop copy.js
                        message.subdir: nop
                        message.filepath: simples/nop/nop copy.js
                        message.slugs: nop copy
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: nop.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/simples/nop/nop.js
                        message.subdir: nop
                        message.filepath: simples/nop/nop.js
                        message.slugs: nop
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: simple-runner.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/simples/nop/simple-runner.js
                        message.subdir: nop
                        message.filepath: simples/nop/simple-runner.js
                        message.slugs: simple-runner
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/simples/set-message
StringFilter checking path = simples/nop/nop copy.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = simples/nop/nop.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = simples/nop/simple-runner.js
Running >>> :  [p10.p20]  FileReader
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: set-message.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/simples/set-message/set-message.js
                        message.subdir: set-message
                        message.filepath: simples/set-message/set-message.js
                        message.slugs: set-message
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = simples/set-message/set-message.js
Running >>> :  [p10.p20]  FileReader
DirWalker.walkDirectory, dir = /home/danny/github-danny/transmissions/src/utils
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/selfie/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/string-pipeline/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: GrapoiHelpers.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/utils/GrapoiHelpers.js
                        message.subdir: undefined
                        message.filepath: utils/GrapoiHelpers.js
                        message.slugs: GrapoiHelpers
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: Logger.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/utils/Logger.js
                        message.subdir: undefined
                        message.filepath: utils/Logger.js
                        message.slugs: Logger
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: cache.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/utils/cache.js
                        message.subdir: undefined
                        message.filepath: utils/cache.js
                        message.slugs: cache
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: footpath.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/utils/footpath.js
                        message.subdir: undefined
                        message.filepath: utils/footpath.js
                        message.slugs: footpath
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: ns.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/utils/ns.js
                        message.subdir: undefined
                        message.filepath: utils/ns.js
                        message.slugs: ns
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: t2j.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/utils/t2j.js
                        message.subdir: undefined
                        message.filepath: utils/t2j.js
                        message.slugs: t2j
Running >>> :  [p10]  StringFilter
DirWalker emitting :
                        message.targetPath: /home/danny/github-danny/transmissions/src
                        message.filename: test_runner.js
                        message.fullPath: /home/danny/github-danny/transmissions/src/utils/test_runner.js
                        message.subdir: undefined
                        message.filepath: utils/test_runner.js
                        message.slugs: test_runner
Running >>> :  [p10]  StringFilter
StringFilter.process, done=false
StringFilter checking path = utils/GrapoiHelpers.js
Running >>> :  [p10.p20]  FileReader
DirWalker emitting final done=true message
Running >>> :  [p10]  StringFilter
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = utils/Logger.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = utils/cache.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = utils/footpath.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = utils/ns.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = utils/t2j.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=false
StringFilter checking path = utils/test_runner.js
Running >>> :  [p10.p20]  FileReader
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/filterConfig
No direct property found
Settings query result: 1 terms
Found settings reference: http://purl.org/stuff/transmissions/filterDefaults
No property found in settings
No settings reference found
StringFilter.process, done=true
Running >>> :  [p10.p20]  FileReader

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/string-pipeline/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_blanker/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_blanker/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_config-settings/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_config-settings/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_configmap/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_configmap/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_configmap/data/input/input-01.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_configmap/data/input/input-01.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_configmap/data/output/output-01.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_configmap/data/output/output-01.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_configmap/data/output/required-01.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_configmap/data/output/required-01.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_configmap/simple.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_configmap/simple.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_dirwalker/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_dirwalker/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_dirwalker/data/about-data.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_dirwalker/data/about-data.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_dirwalker/data/subdir/about-subdir.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_dirwalker/data/subdir/about-subdir.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_env-loader/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_env-loader/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_file-copy-remove/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_file-copy-remove/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/data/input/input.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/data/input/input.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/docs/handover-doc.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/docs/handover-doc.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/docs/sparql-processors-docs.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/docs/sparql-processors-docs.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/docs/test-app-docs.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/docs/test-app-docs.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/examples/sparql-queries.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/examples/sparql-queries.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_filename-mapper/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_filename-mapper/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_filename-mapper/filename-mapper-simple.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_filename-mapper/filename-mapper-simple.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_filereader/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_filereader/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_filereader/data/input/input.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_filereader/data/input/input.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_foreach/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_foreach/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_fork/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_fork/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_fork-unfork/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_fork-unfork/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_fs-rw/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_fs-rw/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_fs-rw/data/input/input-01.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_fs-rw/data/input/input-01.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_fs-rw/data/output/required-01.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_fs-rw/data/output/required-01.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_fs-rw/simple.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_fs-rw/simple.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_http-server/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_http-server/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_http-server/data/input/metrics.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_http-server/data/input/metrics.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_http-server/shutdown-client-auth.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_http-server/shutdown-client-auth.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_http-server/test-shutdown.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_http-server/test-shutdown.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_multi-pipe/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_multi-pipe/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_nop/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_nop/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_restructure/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_restructure/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_restructure/simple.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_restructure/simple.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_runcommand/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_runcommand/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_runcommand/simple.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_runcommand/simple.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/applications/test_two-transmissions/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/applications/test_two-transmissions/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/core/ApplicationManager.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/core/ApplicationManager.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/core/Director.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/core/Director.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/core/ModuleLoader.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/core/ModuleLoader.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/core/ModuleLoaderFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/core/ModuleLoaderFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/core/Procurer.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/core/Procurer.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/core/TransmissionBuilder.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/core/TransmissionBuilder.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/core/WorkerPool.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/core/WorkerPool.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/engine/Application.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/engine/Application.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/engine/Connector.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/engine/Connector.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/engine/Transmission.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/engine/Transmission.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/base/AbstractProcessorFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/base/AbstractProcessorFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/base/Processor.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/base/Processor.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/base/ProcessorSettings.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/base/ProcessorSettings.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/example-group/ExampleProcessor.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/example-group/ExampleProcessor.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/example-group/ExampleProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/example-group/ExampleProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/example-group/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/example-group/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/flow/DeadEnd.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/flow/DeadEnd.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/flow/FlowProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/flow/FlowProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/flow/ForEach.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/flow/ForEach.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/flow/Fork.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/flow/Fork.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/flow/Halt.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/flow/Halt.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/flow/NOP.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/flow/NOP.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/flow/Ping.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/flow/Ping.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/flow/Unfork.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/flow/Unfork.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/fs/DirWalker.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/fs/DirWalker.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/fs/FileCopy.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/fs/FileCopy.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/fs/FileReader.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/fs/FileReader.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/fs/FileRemove.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/fs/FileRemove.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/fs/FileWriter.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/fs/FileWriter.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/fs/FilenameMapper.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/fs/FilenameMapper.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/fs/FsProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/fs/FsProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/github/GitHubList.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/github/GitHubList.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/github/GitHubList_no-pag.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/github/GitHubList_no-pag.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/github/GitHubProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/github/GitHubProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/http/HttpClient.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/http/HttpClient.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/http/HttpProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/http/HttpProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/http/HttpProxy.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/http/HttpProxy.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/http/HttpServer.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/http/HttpServer.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/http/HttpServerWorker.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/http/HttpServerWorker.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/http/services/MetricsService.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/http/services/MetricsService.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/http/services/ShutdownService copy.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/http/services/ShutdownService copy.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/http/services/ShutdownService.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/http/services/ShutdownService.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/json/Blanker copy.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/json/Blanker copy.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/json/Blanker.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/json/Blanker.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/json/JSONProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/json/JSONProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/json/JSONWalker.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/json/JSONWalker.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/json/JsonRestructurer.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/json/JsonRestructurer.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/json/Restructure.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/json/Restructure.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/json/ValueConcat.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/json/ValueConcat.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/markup/LinkFinder.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/markup/LinkFinder.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/markup/MarkdownToHTML.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/markup/MarkdownToHTML.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/markup/MarkupProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/markup/MarkupProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/markup/MetadataExtractor.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/markup/MetadataExtractor.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/mcp/McpClient.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/mcp/McpClient.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/mcp/McpProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/mcp/McpProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/mcp/McpServer.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/mcp/McpServer.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/packer/CommentStripper.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/packer/CommentStripper.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/packer/FileContainer.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/packer/FileContainer.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/packer/PackerProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/packer/PackerProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/packer/comment-stripper.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/packer/comment-stripper.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/packer/file-container.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/packer/file-container.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/packer/packer-factory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/packer/packer-factory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/postcraft/AtomFeedPrep.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/postcraft/AtomFeedPrep.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/postcraft/EntryContentToPagePrep.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/postcraft/EntryContentToPagePrep.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/postcraft/FrontPagePrep.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/postcraft/FrontPagePrep.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/postcraft/PostcraftDispatcher.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/postcraft/PostcraftDispatcher.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/postcraft/PostcraftPrep.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/postcraft/PostcraftPrep.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/postcraft/PostcraftProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/postcraft/PostcraftProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/protocols/HttpGet.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/protocols/HttpGet.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/protocols/ProtocolsProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/protocols/ProtocolsProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/rdf/ConfigMap copy.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/rdf/ConfigMap copy.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/rdf/ConfigMap.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/rdf/ConfigMap.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/rdf/DatasetReader copy.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/rdf/DatasetReader copy.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/rdf/DatasetReader.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/rdf/DatasetReader.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/rdf/RDFConfig.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/rdf/RDFConfig.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/rdf/RDFProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/rdf/RDFProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/sparql/SPARQLProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/sparql/SPARQLProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/sparql/SPARQLSelect.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/sparql/SPARQLSelect.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/sparql/SPARQLUpdate.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/sparql/SPARQLUpdate.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/sparql/SessionEnvironment.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/sparql/SessionEnvironment.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/sparql/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/sparql/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/staging/MarkdownFormatter.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/staging/MarkdownFormatter.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/staging/StagingProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/staging/StagingProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/staging/TurtleFormatter.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/staging/TurtleFormatter.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/system/EnvLoader.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/system/EnvLoader.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/system/SystemProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/system/SystemProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/test/AppendProcess.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/test/AppendProcess.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/test/FileSink.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/test/FileSink.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/test/FileSource.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/test/FileSource.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/test/StringSink.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/test/StringSink.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/test/StringSource.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/test/StringSource.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/test/TestProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/test/TestProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/text/LineReader.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/text/LineReader.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/text/StringFilter copy.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/text/StringFilter copy.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/text/StringFilter.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/text/StringFilter.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/text/StringMerger.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/text/StringMerger.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/text/StringReplace.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/text/StringReplace.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/text/Templater.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/text/Templater.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/text/TextProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/text/TextProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/unsafe/RunCommand.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/unsafe/RunCommand.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/unsafe/UnsafeProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/unsafe/UnsafeProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/util/CaptureAll.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/util/CaptureAll.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/util/SetMessage.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/util/SetMessage.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/util/ShowConfig.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/util/ShowConfig.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/util/ShowMessage.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/util/ShowMessage.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/util/ShowSettings.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/util/ShowSettings.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/util/ShowTransmission.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/util/ShowTransmission.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/util/Stash.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/util/Stash.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/util/UtilProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/util/UtilProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/util/WhiteboardToMessage.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/util/WhiteboardToMessage.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/xmpp/XmppClient.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/xmpp/XmppClient.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/processors/xmpp/XmppProcessorsFactory.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/processors/xmpp/XmppProcessorsFactory.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/simples/env-loader/about.md
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/simples/env-loader/about.md
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/simples/env-loader/env-loader.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/simples/env-loader/env-loader.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/simples/nop/nop copy.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/simples/nop/nop copy.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/simples/nop/nop.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/simples/nop/nop.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/simples/nop/simple-runner.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/simples/nop/simple-runner.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/simples/set-message/set-message.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/simples/set-message/set-message.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/utils/GrapoiHelpers.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/utils/GrapoiHelpers.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/utils/Logger.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/utils/Logger.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/utils/cache.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/utils/cache.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/utils/footpath.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/utils/footpath.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/utils/ns.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/utils/ns.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/utils/t2j.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/utils/t2j.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=false
FileReader.process(), reading file: /home/danny/github-danny/transmissions/src/utils/test_runner.js
FileReader.process(), process.cwd() = /home/danny/github-danny/transmissions

Processor.getProperty looking for http://purl.org/stuff/transmissions/metaField
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p30
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/metaField
Checking property http://purl.org/stuff/transmissions/metaField on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Using fallback: 
	undefined
FileReader successfully read file: /home/danny/github-danny/transmissions/src/utils/test_runner.js
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=false
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=false, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork terminating pipe
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/readConfig
No direct property found
Settings query result: 0 terms
No settings reference found
FileReader.process, done=true
Running >>> :  [p10.p20.p30]  FileContainer
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Checking property http://purl.org/stuff/transmissions/messageType on node http://purl.org/stuff/transmissions/containerConfig
No direct property found
Settings query result: 0 terms
No settings reference found

Processor.getProperty looking for http://purl.org/stuff/transmissions/destination
Processor.getProperty, this.transmissionNode.value = http://purl.org/stuff/transmissions/p40
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/destination
Checking property http://purl.org/stuff/transmissions/destination on node http://purl.org/stuff/transmissions/containerConfig
Found direct property value: packer.config.json
Found in settings: packer.config.json
Running >>> :  [p10.p20.p30.p40]  CaptureAll
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
CaptureAll at [p10.p20.p30.p40.p50] p50, done=true
Running >>> :  [p10.p20.p30.p40.p50]  WhiteboardToMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
WhiteboardToMessage at [p10.p20.p30.p40.p50.p60] p60
Running >>> :  [p10.p20.p30.p40.p50.p60]  Unfork
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
Unfork got message with done=true, tags=p10.p20.p30.p40.p50.p60.p70
Unfork ----
 - Unfork passing message >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Running >>> :  [p10.p20.p30.p40.p50.p60.p70]  ShowMessage
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
***************************
***  Message
***    hidden keys :  
[[dataset found, skipping]]
Instance of Object with properties - 
{
  "appName": "packer",
  "appPath": "packer",
  "subtask": "[no key]",
  "manifestFilename": "/home/danny/github-danny/transmissions/src/manifest.ttl",
  "targetPath": "/home/danny/github-danny/transmissions/src",
  "rootDir": "/home/danny/github-danny/transmissions/src/applications/packer",
  "dataDir": "/home/danny/github-danny/transmissions/src/applications/packer/data",
  "tags": "p10.p20.p30.p40.p50.p60.p70.SM",
  "counter": "[no key]",
  "slugs": [],
  "done": "[no key]",
  "sourceDir": ".",
  "content": "{\n  \"files\": {\n    \"../api/about.md\": {\n      \"content\": \"# transmissions/src/api/\\n\\nInterfaces for...",
  "filepath": "packer.config.json",
  "whiteboard": {
    "appName": [
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer"
    ],
    "appPath": [
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer"
    ],
    "subtask": [
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
    ],
    "manifestFilename": [
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl",
      "/home/danny/github-danny/transmissions/src/manifest.ttl"
    ],
    "dataset": [
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      },
      {
        "_size": 0,
        "_graphs": {},
        "_id": 0,
        "_ids": {
          "><": 0
        },
        "_entities": {},
        "_quads": {}
      }
    ],
    "targetPath": [
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src",
      "/home/danny/github-danny/transmissions/src"
    ],
    "rootDir": [
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer",
      "/home/danny/github-danny/transmissions/src/applications/packer"
    ],
    "dataDir": [
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data",
      "/home/danny/github-danny/transmissions/src/applications/packer/data"
    ],
    "tags": [
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50",
      "p10.p20.p30.p40.p50"
    ],
    "counter": [
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      0
    ],
    "slugs": [
      [
        "about"
      ],
      [
        "about"
      ],
      [
        "run"
      ],
      [
        "CommandUtils"
      ],
      [
        "WebRunner"
      ],
      [
        "about"
      ],
      [
        "about"
      ],
      [
        "about"
      ],
      [
        "about"
      ],
      [
        "about"
      ],
      [
        "links"
      ],
      [
        "starter-links"
      ],
      [
        "about"
      ],
      [
        "packer-flow"
      ],
      [
        "packer-sources"
      ],
      [
        "about"
      ],
      [
        "about"
      ],
      [
        "about"
      ],
      [
        "about"
      ],
      [
        "2023-10-27_hello"
      ],
      [
        "2025-01-08_hello-again"
      ],
      [
        "about"
      ],
      [
        "2023-10-27_hello"
      ],
      [
        "2025-01-08_hello-again"
      ],
      [
        "about"
      ],
      [
        "about"
      ],
      [
        "about"
      ],
      [
        "about"
      ],
      [
        "input-01"
      ],
      [
        "output-01"
      ],
      [
        "required-01"
      ],
      [
        "simple"
      ],
      [
        "about"
      ],
      [
        "about"
      ],
      [
        "about"
      ],
      [
        "about"
      ],
      [
        "input"
      ],
      [
        "handover-doc"
      ],
      [
        "sparql-processors-docs"
      ],
      [
        "test-app-docs"
      ],
      [
        "sparql-queries"
      ],
      [
        "about"
      ],
      [
        "filename-mapper-simple"
      ],
      [
        "about"
      ],
      [
        "input"
      ],
      [
        "about"
      ],
      [
        "about"
      ],
      [
        "about"
      ],
      [
        "about"
      ],
      [
        "input-01"
      ],
      [
        "required-01"
      ],
      [
        "simple"
      ],
      [
        "about"
      ],
      [
        "metrics"
      ],
      [
        "shutdown-client-auth"
      ],
      [
        "test-shutdown"
      ],
      [
        "about"
      ],
      [
        "about"
      ],
      [
        "simple"
      ],
      [
        "about"
      ],
      [
        "simple"
      ],
      [
        "ApplicationManager"
      ],
      [
        "Director"
      ],
      [
        "ModuleLoader"
      ],
      [
        "ModuleLoaderFactory"
      ],
      [
        "Procurer"
      ],
      [
        "TransmissionBuilder"
      ],
      [
        "WorkerPool"
      ],
      [
        "Application"
      ],
      [
        "Connector"
      ],
      [
        "Transmission"
      ],
      [
        "about"
      ],
      [
        "AbstractProcessorFactory"
      ],
      [
        "Processor"
      ],
      [
        "ProcessorSettings"
      ],
      [
        "ExampleProcessor"
      ],
      [
        "ExampleProcessorsFactory"
      ],
      [
        "DeadEnd"
      ],
      [
        "FlowProcessorsFactory"
      ],
      [
        "ForEach"
      ],
      [
        "Fork"
      ],
      [
        "Halt"
      ],
      [
        "NOP"
      ],
      [
        "Ping"
      ],
      [
        "Unfork"
      ],
      [
        "DirWalker"
      ],
      [
        "FileCopy"
      ],
      [
        "FileReader"
      ],
      [
        "FileRemove"
      ],
      [
        "FileWriter"
      ],
      [
        "FilenameMapper"
      ],
      [
        "FsProcessorsFactory"
      ],
      [
        "GitHubList"
      ],
      [
        "GitHubList_no-pag"
      ],
      [
        "GitHubProcessorsFactory"
      ],
      [
        "HttpClient"
      ],
      [
        "HttpProcessorsFactory"
      ],
      [
        "HttpProxy"
      ],
      [
        "HttpServer"
      ],
      [
        "HttpServerWorker"
      ],
      [
        "MetricsService"
      ],
      [
        "ShutdownService copy"
      ],
      [
        "ShutdownService"
      ],
      [
        "Blanker copy"
      ],
      [
        "Blanker"
      ],
      [
        "JSONProcessorsFactory"
      ],
      [
        "JSONWalker"
      ],
      [
        "JsonRestructurer"
      ],
      [
        "Restructure"
      ],
      [
        "ValueConcat"
      ],
      [
        "LinkFinder"
      ],
      [
        "MarkdownToHTML"
      ],
      [
        "MarkupProcessorsFactory"
      ],
      [
        "MetadataExtractor"
      ],
      [
        "McpClient"
      ],
      [
        "McpProcessorsFactory"
      ],
      [
        "McpServer"
      ],
      [
        "CommentStripper"
      ],
      [
        "FileContainer"
      ],
      [
        "PackerProcessorsFactory"
      ],
      [
        "comment-stripper"
      ],
      [
        "file-container"
      ],
      [
        "packer-factory"
      ],
      [
        "AtomFeedPrep"
      ],
      [
        "EntryContentToPagePrep"
      ],
      [
        "FrontPagePrep"
      ],
      [
        "PostcraftDispatcher"
      ],
      [
        "PostcraftPrep"
      ],
      [
        "PostcraftProcessorsFactory"
      ],
      [
        "HttpGet"
      ],
      [
        "ProtocolsProcessorsFactory"
      ],
      [
        "ConfigMap copy"
      ],
      [
        "ConfigMap"
      ],
      [
        "DatasetReader copy"
      ],
      [
        "DatasetReader"
      ],
      [
        "RDFConfig"
      ],
      [
        "RDFProcessorsFactory"
      ],
      [
        "SPARQLProcessorsFactory"
      ],
      [
        "SPARQLSelect"
      ],
      [
        "SPARQLUpdate"
      ],
      [
        "SessionEnvironment"
      ],
      [
        "MarkdownFormatter"
      ],
      [
        "StagingProcessorsFactory"
      ],
      [
        "TurtleFormatter"
      ],
      [
        "EnvLoader"
      ],
      [
        "SystemProcessorsFactory"
      ],
      [
        "AppendProcess"
      ],
      [
        "FileSink"
      ],
      [
        "FileSource"
      ],
      [
        "StringSink"
      ],
      [
        "StringSource"
      ],
      [
        "TestProcessorsFactory"
      ],
      [
        "LineReader"
      ],
      [
        "StringFilter copy"
      ],
      [
        "StringFilter"
      ],
      [
        "StringMerger"
      ],
      [
        "StringReplace"
      ],
      [
        "Templater"
      ],
      [
        "TextProcessorsFactory"
      ],
      [
        "RunCommand"
      ],
      [
        "UnsafeProcessorsFactory"
      ],
      [
        "CaptureAll"
      ],
      [
        "SetMessage"
      ],
      [
        "ShowConfig"
      ],
      [
        "ShowMessage"
      ],
      [
        "ShowSettings"
      ],
      [
        "ShowTransmission"
      ],
      [
        "Stash"
      ],
      [
        "UtilProcessorsFactory"
      ],
      [
        "WhiteboardToMessage"
      ],
      [
        "XmppClient"
      ],
      [
        "XmppProcessorsFactory"
      ],
      [
        "about"
      ],
      [
        "env-loader"
      ],
      [
        "nop copy"
      ],
      [
        "nop"
      ],
      [
        "simple-runner"
      ],
      [
        "set-message"
      ],
      [
        "GrapoiHelpers"
      ],
      [
        "Logger"
      ],
      [
        "cache"
      ],
      [
        "footpath"
      ],
      [
        "ns"
      ],
      [
        "t2j"
      ],
      [
        "test_runner"
      ],
      []
    ],
    "done": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true
    ],
    "sourceDir": [
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      ".",
      "."
    ],
    "filename": [
      "about.md",
      "about.md",
      "run.js",
      "CommandUtils.js",
      "WebRunner.js",
      "about.md",
      "about.md",
      "about.md",
      "about.md",
      "about.md",
      "links.md",
      "starter-links.md",
      "about.md",
      "packer-flow.md",
      "packer-sources.md",
      "about.md",
      "about.md",
      "about.md",
      "about.md",
      "2023-10-27_hello.md",
      "2025-01-08_hello-again.md",
      "about.md",
      "2023-10-27_hello.md",
      "2025-01-08_hello-again.md",
      "about.md",
      "about.md",
      "about.md",
      "about.md",
      "input-01.md",
      "output-01.md",
      "required-01.md",
      "simple.js",
      "about.md",
      "about.md",
      "about.md",
      "about.md",
      "input.md",
      "handover-doc.md",
      "sparql-processors-docs.md",
      "test-app-docs.md",
      "sparql-queries.md",
      "about.md",
      "filename-mapper-simple.js",
      "about.md",
      "input.md",
      "about.md",
      "about.md",
      "about.md",
      "about.md",
      "input-01.md",
      "required-01.md",
      "simple.js",
      "about.md",
      "metrics.js",
      "shutdown-client-auth.js",
      "test-shutdown.js",
      "about.md",
      "about.md",
      "simple.js",
      "about.md",
      "simple.js",
      "ApplicationManager.js",
      "Director.js",
      "ModuleLoader.js",
      "ModuleLoaderFactory.js",
      "Procurer.js",
      "TransmissionBuilder.js",
      "WorkerPool.js",
      "Application.js",
      "Connector.js",
      "Transmission.js",
      "about.md",
      "AbstractProcessorFactory.js",
      "Processor.js",
      "ProcessorSettings.js",
      "ExampleProcessor.js",
      "ExampleProcessorsFactory.js",
      "DeadEnd.js",
      "FlowProcessorsFactory.js",
      "ForEach.js",
      "Fork.js",
      "Halt.js",
      "NOP.js",
      "Ping.js",
      "Unfork.js",
      "DirWalker.js",
      "FileCopy.js",
      "FileReader.js",
      "FileRemove.js",
      "FileWriter.js",
      "FilenameMapper.js",
      "FsProcessorsFactory.js",
      "GitHubList.js",
      "GitHubList_no-pag.js",
      "GitHubProcessorsFactory.js",
      "HttpClient.js",
      "HttpProcessorsFactory.js",
      "HttpProxy.js",
      "HttpServer.js",
      "HttpServerWorker.js",
      "MetricsService.js",
      "ShutdownService copy.js",
      "ShutdownService.js",
      "Blanker copy.js",
      "Blanker.js",
      "JSONProcessorsFactory.js",
      "JSONWalker.js",
      "JsonRestructurer.js",
      "Restructure.js",
      "ValueConcat.js",
      "LinkFinder.js",
      "MarkdownToHTML.js",
      "MarkupProcessorsFactory.js",
      "MetadataExtractor.js",
      "McpClient.js",
      "McpProcessorsFactory.js",
      "McpServer.js",
      "CommentStripper.js",
      "FileContainer.js",
      "PackerProcessorsFactory.js",
      "comment-stripper.js",
      "file-container.js",
      "packer-factory.js",
      "AtomFeedPrep.js",
      "EntryContentToPagePrep.js",
      "FrontPagePrep.js",
      "PostcraftDispatcher.js",
      "PostcraftPrep.js",
      "PostcraftProcessorsFactory.js",
      "HttpGet.js",
      "ProtocolsProcessorsFactory.js",
      "ConfigMap copy.js",
      "ConfigMap.js",
      "DatasetReader copy.js",
      "DatasetReader.js",
      "RDFConfig.js",
      "RDFProcessorsFactory.js",
      "SPARQLProcessorsFactory.js",
      "SPARQLSelect.js",
      "SPARQLUpdate.js",
      "SessionEnvironment.js",
      "MarkdownFormatter.js",
      "StagingProcessorsFactory.js",
      "TurtleFormatter.js",
      "EnvLoader.js",
      "SystemProcessorsFactory.js",
      "AppendProcess.js",
      "FileSink.js",
      "FileSource.js",
      "StringSink.js",
      "StringSource.js",
      "TestProcessorsFactory.js",
      "LineReader.js",
      "StringFilter copy.js",
      "StringFilter.js",
      "StringMerger.js",
      "StringReplace.js",
      "Templater.js",
      "TextProcessorsFactory.js",
      "RunCommand.js",
      "UnsafeProcessorsFactory.js",
      "CaptureAll.js",
      "SetMessage.js",
      "ShowConfig.js",
      "ShowMessage.js",
      "ShowSettings.js",
      "ShowTransmission.js",
      "Stash.js",
      "UtilProcessorsFactory.js",
      "WhiteboardToMessage.js",
      "XmppClient.js",
      "XmppProcessorsFactory.js",
      "about.md",
      "env-loader.js",
      "nop copy.js",
      "nop.js",
      "simple-runner.js",
      "set-message.js",
      "GrapoiHelpers.js",
      "Logger.js",
      "cache.js",
      "footpath.js",
      "ns.js",
      "t2j.js",
      "test_runner.js"
    ],
    "subdir": [
      null,
      "cli",
      "cli",
      "common",
      "http",
      "claude-json-converter",
      "example-application",
      "globbo",
      "html-to-md",
      "link-lister",
      "link-lister",
      "link-lister",
      "packer",
      "packer",
      "packer",
      "postcraft",
      "postcraft-clear-cache",
      "postcraft-previous",
      "postcraft-render1",
      "postcraft-render1",
      "postcraft-render1",
      "postcraft-render2",
      "postcraft-render2",
      "postcraft-render2",
      "selfie",
      "test_blanker",
      "test_config-settings",
      "test_configmap",
      "test_configmap",
      "test_configmap",
      "test_configmap",
      "test_configmap",
      "test_dirwalker",
      "test_env-loader",
      "test_file-copy-remove",
      "test_file-to-sparqlstore",
      "test_file-to-sparqlstore",
      "test_file-to-sparqlstore",
      "test_file-to-sparqlstore",
      "test_file-to-sparqlstore",
      "test_file-to-sparqlstore",
      "test_filename-mapper",
      "test_filename-mapper",
      "test_filereader",
      "test_filereader",
      "test_foreach",
      "test_fork",
      "test_fork-unfork",
      "test_fs-rw",
      "test_fs-rw",
      "test_fs-rw",
      "test_fs-rw",
      "test_http-server",
      "test_http-server",
      "test_http-server",
      "test_http-server",
      "test_nop",
      "test_restructure",
      "test_restructure",
      "test_runcommand",
      "test_runcommand",
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      "base",
      "base",
      "base",
      "example-group",
      "example-group",
      "flow",
      "flow",
      "flow",
      "flow",
      "flow",
      "flow",
      "flow",
      "flow",
      "fs",
      "fs",
      "fs",
      "fs",
      "fs",
      "fs",
      "fs",
      "github",
      "github",
      "github",
      "http",
      "http",
      "http",
      "http",
      "http",
      "http",
      "http",
      "http",
      "json",
      "json",
      "json",
      "json",
      "json",
      "json",
      "json",
      "markup",
      "markup",
      "markup",
      "markup",
      "mcp",
      "mcp",
      "mcp",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "packer",
      "postcraft",
      "postcraft",
      "postcraft",
      "postcraft",
      "postcraft",
      "postcraft",
      "protocols",
      "protocols",
      "rdf",
      "rdf",
      "rdf",
      "rdf",
      "rdf",
      "rdf",
      "sparql",
      "sparql",
      "sparql",
      "sparql",
      "staging",
      "staging",
      "staging",
      "system",
      "system",
      "test",
      "test",
      "test",
      "test",
      "test",
      "test",
      "text",
      "text",
      "text",
      "text",
      "text",
      "text",
      "text",
      "unsafe",
      "unsafe",
      "util",
      "util",
      "util",
      "util",
      "util",
      "util",
      "util",
      "util",
      "util",
      "xmpp",
      "xmpp",
      "env-loader",
      "env-loader",
      "nop",
      "nop",
      "nop",
      "set-message",
      null,
      null,
      null,
      null,
      null,
      null,
      null
    ],
    "fullPath": [
      "/home/danny/github-danny/transmissions/src/api/about.md",
      "/home/danny/github-danny/transmissions/src/api/cli/about.md",
      "/home/danny/github-danny/transmissions/src/api/cli/run.js",
      "/home/danny/github-danny/transmissions/src/api/common/CommandUtils.js",
      "/home/danny/github-danny/transmissions/src/api/http/WebRunner.js",
      "/home/danny/github-danny/transmissions/src/applications/claude-json-converter/about.md",
      "/home/danny/github-danny/transmissions/src/applications/example-application/about.md",
      "/home/danny/github-danny/transmissions/src/applications/globbo/about.md",
      "/home/danny/github-danny/transmissions/src/applications/html-to-md/about.md",
      "/home/danny/github-danny/transmissions/src/applications/link-lister/about.md",
      "/home/danny/github-danny/transmissions/src/applications/link-lister/data/links.md",
      "/home/danny/github-danny/transmissions/src/applications/link-lister/data/starter-links.md",
      "/home/danny/github-danny/transmissions/src/applications/packer/about.md",
      "/home/danny/github-danny/transmissions/src/applications/packer/packer-flow.md",
      "/home/danny/github-danny/transmissions/src/applications/packer/packer-sources.md",
      "/home/danny/github-danny/transmissions/src/applications/postcraft/about.md",
      "/home/danny/github-danny/transmissions/src/applications/postcraft-clear-cache/about.md",
      "/home/danny/github-danny/transmissions/src/applications/postcraft-previous/about.md",
      "/home/danny/github-danny/transmissions/src/applications/postcraft-render1/about.md",
      "/home/danny/github-danny/transmissions/src/applications/postcraft-render1/data/cache/2023-10-27_hello.md",
      "/home/danny/github-danny/transmissions/src/applications/postcraft-render1/data/cache/2025-01-08_hello-again.md",
      "/home/danny/github-danny/transmissions/src/applications/postcraft-render2/about.md",
      "/home/danny/github-danny/transmissions/src/applications/postcraft-render2/data/cache/2023-10-27_hello.md",
      "/home/danny/github-danny/transmissions/src/applications/postcraft-render2/data/cache/2025-01-08_hello-again.md",
      "/home/danny/github-danny/transmissions/src/applications/selfie/about.md",
      "/home/danny/github-danny/transmissions/src/applications/test_blanker/about.md",
      "/home/danny/github-danny/transmissions/src/applications/test_config-settings/about.md",
      "/home/danny/github-danny/transmissions/src/applications/test_configmap/about.md",
      "/home/danny/github-danny/transmissions/src/applications/test_configmap/data/input/input-01.md",
      "/home/danny/github-danny/transmissions/src/applications/test_configmap/data/output/output-01.md",
      "/home/danny/github-danny/transmissions/src/applications/test_configmap/data/output/required-01.md",
      "/home/danny/github-danny/transmissions/src/applications/test_configmap/simple.js",
      "/home/danny/github-danny/transmissions/src/applications/test_dirwalker/about.md",
      "/home/danny/github-danny/transmissions/src/applications/test_env-loader/about.md",
      "/home/danny/github-danny/transmissions/src/applications/test_file-copy-remove/about.md",
      "/home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/about.md",
      "/home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/data/input/input.md",
      "/home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/docs/handover-doc.md",
      "/home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/docs/sparql-processors-docs.md",
      "/home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/docs/test-app-docs.md",
      "/home/danny/github-danny/transmissions/src/applications/test_file-to-sparqlstore/examples/sparql-queries.md",
      "/home/danny/github-danny/transmissions/src/applications/test_filename-mapper/about.md",
      "/home/danny/github-danny/transmissions/src/applications/test_filename-mapper/filename-mapper-simple.js",
      "/home/danny/github-danny/transmissions/src/applications/test_filereader/about.md",
      "/home/danny/github-danny/transmissions/src/applications/test_filereader/data/input/input.md",
      "/home/danny/github-danny/transmissions/src/applications/test_foreach/about.md",
      "/home/danny/github-danny/transmissions/src/applications/test_fork/about.md",
      "/home/danny/github-danny/transmissions/src/applications/test_fork-unfork/about.md",
      "/home/danny/github-danny/transmissions/src/applications/test_fs-rw/about.md",
      "/home/danny/github-danny/transmissions/src/applications/test_fs-rw/data/input/input-01.md",
      "/home/danny/github-danny/transmissions/src/applications/test_fs-rw/data/output/required-01.md",
      "/home/danny/github-danny/transmissions/src/applications/test_fs-rw/simple.js",
      "/home/danny/github-danny/transmissions/src/applications/test_http-server/about.md",
      "/home/danny/github-danny/transmissions/src/applications/test_http-server/data/input/metrics.js",
      "/home/danny/github-danny/transmissions/src/applications/test_http-server/shutdown-client-auth.js",
      "/home/danny/github-danny/transmissions/src/applications/test_http-server/test-shutdown.js",
      "/home/danny/github-danny/transmissions/src/applications/test_nop/about.md",
      "/home/danny/github-danny/transmissions/src/applications/test_restructure/about.md",
      "/home/danny/github-danny/transmissions/src/applications/test_restructure/simple.js",
      "/home/danny/github-danny/transmissions/src/applications/test_runcommand/about.md",
      "/home/danny/github-danny/transmissions/src/applications/test_runcommand/simple.js",
      "/home/danny/github-danny/transmissions/src/core/ApplicationManager.js",
      "/home/danny/github-danny/transmissions/src/core/Director.js",
      "/home/danny/github-danny/transmissions/src/core/ModuleLoader.js",
      "/home/danny/github-danny/transmissions/src/core/ModuleLoaderFactory.js",
      "/home/danny/github-danny/transmissions/src/core/Procurer.js",
      "/home/danny/github-danny/transmissions/src/core/TransmissionBuilder.js",
      "/home/danny/github-danny/transmissions/src/core/WorkerPool.js",
      "/home/danny/github-danny/transmissions/src/engine/Application.js",
      "/home/danny/github-danny/transmissions/src/engine/Connector.js",
      "/home/danny/github-danny/transmissions/src/engine/Transmission.js",
      "/home/danny/github-danny/transmissions/src/processors/about.md",
      "/home/danny/github-danny/transmissions/src/processors/base/AbstractProcessorFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/base/Processor.js",
      "/home/danny/github-danny/transmissions/src/processors/base/ProcessorSettings.js",
      "/home/danny/github-danny/transmissions/src/processors/example-group/ExampleProcessor.js",
      "/home/danny/github-danny/transmissions/src/processors/example-group/ExampleProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/flow/DeadEnd.js",
      "/home/danny/github-danny/transmissions/src/processors/flow/FlowProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/flow/ForEach.js",
      "/home/danny/github-danny/transmissions/src/processors/flow/Fork.js",
      "/home/danny/github-danny/transmissions/src/processors/flow/Halt.js",
      "/home/danny/github-danny/transmissions/src/processors/flow/NOP.js",
      "/home/danny/github-danny/transmissions/src/processors/flow/Ping.js",
      "/home/danny/github-danny/transmissions/src/processors/flow/Unfork.js",
      "/home/danny/github-danny/transmissions/src/processors/fs/DirWalker.js",
      "/home/danny/github-danny/transmissions/src/processors/fs/FileCopy.js",
      "/home/danny/github-danny/transmissions/src/processors/fs/FileReader.js",
      "/home/danny/github-danny/transmissions/src/processors/fs/FileRemove.js",
      "/home/danny/github-danny/transmissions/src/processors/fs/FileWriter.js",
      "/home/danny/github-danny/transmissions/src/processors/fs/FilenameMapper.js",
      "/home/danny/github-danny/transmissions/src/processors/fs/FsProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/github/GitHubList.js",
      "/home/danny/github-danny/transmissions/src/processors/github/GitHubList_no-pag.js",
      "/home/danny/github-danny/transmissions/src/processors/github/GitHubProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/http/HttpClient.js",
      "/home/danny/github-danny/transmissions/src/processors/http/HttpProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/http/HttpProxy.js",
      "/home/danny/github-danny/transmissions/src/processors/http/HttpServer.js",
      "/home/danny/github-danny/transmissions/src/processors/http/HttpServerWorker.js",
      "/home/danny/github-danny/transmissions/src/processors/http/services/MetricsService.js",
      "/home/danny/github-danny/transmissions/src/processors/http/services/ShutdownService copy.js",
      "/home/danny/github-danny/transmissions/src/processors/http/services/ShutdownService.js",
      "/home/danny/github-danny/transmissions/src/processors/json/Blanker copy.js",
      "/home/danny/github-danny/transmissions/src/processors/json/Blanker.js",
      "/home/danny/github-danny/transmissions/src/processors/json/JSONProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/json/JSONWalker.js",
      "/home/danny/github-danny/transmissions/src/processors/json/JsonRestructurer.js",
      "/home/danny/github-danny/transmissions/src/processors/json/Restructure.js",
      "/home/danny/github-danny/transmissions/src/processors/json/ValueConcat.js",
      "/home/danny/github-danny/transmissions/src/processors/markup/LinkFinder.js",
      "/home/danny/github-danny/transmissions/src/processors/markup/MarkdownToHTML.js",
      "/home/danny/github-danny/transmissions/src/processors/markup/MarkupProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/markup/MetadataExtractor.js",
      "/home/danny/github-danny/transmissions/src/processors/mcp/McpClient.js",
      "/home/danny/github-danny/transmissions/src/processors/mcp/McpProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/mcp/McpServer.js",
      "/home/danny/github-danny/transmissions/src/processors/packer/CommentStripper.js",
      "/home/danny/github-danny/transmissions/src/processors/packer/FileContainer.js",
      "/home/danny/github-danny/transmissions/src/processors/packer/PackerProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/packer/comment-stripper.js",
      "/home/danny/github-danny/transmissions/src/processors/packer/file-container.js",
      "/home/danny/github-danny/transmissions/src/processors/packer/packer-factory.js",
      "/home/danny/github-danny/transmissions/src/processors/postcraft/AtomFeedPrep.js",
      "/home/danny/github-danny/transmissions/src/processors/postcraft/EntryContentToPagePrep.js",
      "/home/danny/github-danny/transmissions/src/processors/postcraft/FrontPagePrep.js",
      "/home/danny/github-danny/transmissions/src/processors/postcraft/PostcraftDispatcher.js",
      "/home/danny/github-danny/transmissions/src/processors/postcraft/PostcraftPrep.js",
      "/home/danny/github-danny/transmissions/src/processors/postcraft/PostcraftProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/protocols/HttpGet.js",
      "/home/danny/github-danny/transmissions/src/processors/protocols/ProtocolsProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/rdf/ConfigMap copy.js",
      "/home/danny/github-danny/transmissions/src/processors/rdf/ConfigMap.js",
      "/home/danny/github-danny/transmissions/src/processors/rdf/DatasetReader copy.js",
      "/home/danny/github-danny/transmissions/src/processors/rdf/DatasetReader.js",
      "/home/danny/github-danny/transmissions/src/processors/rdf/RDFConfig.js",
      "/home/danny/github-danny/transmissions/src/processors/rdf/RDFProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/sparql/SPARQLProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/sparql/SPARQLSelect.js",
      "/home/danny/github-danny/transmissions/src/processors/sparql/SPARQLUpdate.js",
      "/home/danny/github-danny/transmissions/src/processors/sparql/SessionEnvironment.js",
      "/home/danny/github-danny/transmissions/src/processors/staging/MarkdownFormatter.js",
      "/home/danny/github-danny/transmissions/src/processors/staging/StagingProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/staging/TurtleFormatter.js",
      "/home/danny/github-danny/transmissions/src/processors/system/EnvLoader.js",
      "/home/danny/github-danny/transmissions/src/processors/system/SystemProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/test/AppendProcess.js",
      "/home/danny/github-danny/transmissions/src/processors/test/FileSink.js",
      "/home/danny/github-danny/transmissions/src/processors/test/FileSource.js",
      "/home/danny/github-danny/transmissions/src/processors/test/StringSink.js",
      "/home/danny/github-danny/transmissions/src/processors/test/StringSource.js",
      "/home/danny/github-danny/transmissions/src/processors/test/TestProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/text/LineReader.js",
      "/home/danny/github-danny/transmissions/src/processors/text/StringFilter copy.js",
      "/home/danny/github-danny/transmissions/src/processors/text/StringFilter.js",
      "/home/danny/github-danny/transmissions/src/processors/text/StringMerger.js",
      "/home/danny/github-danny/transmissions/src/processors/text/StringReplace.js",
      "/home/danny/github-danny/transmissions/src/processors/text/Templater.js",
      "/home/danny/github-danny/transmissions/src/processors/text/TextProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/unsafe/RunCommand.js",
      "/home/danny/github-danny/transmissions/src/processors/unsafe/UnsafeProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/util/CaptureAll.js",
      "/home/danny/github-danny/transmissions/src/processors/util/SetMessage.js",
      "/home/danny/github-danny/transmissions/src/processors/util/ShowConfig.js",
      "/home/danny/github-danny/transmissions/src/processors/util/ShowMessage.js",
      "/home/danny/github-danny/transmissions/src/processors/util/ShowSettings.js",
      "/home/danny/github-danny/transmissions/src/processors/util/ShowTransmission.js",
      "/home/danny/github-danny/transmissions/src/processors/util/Stash.js",
      "/home/danny/github-danny/transmissions/src/processors/util/UtilProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/processors/util/WhiteboardToMessage.js",
      "/home/danny/github-danny/transmissions/src/processors/xmpp/XmppClient.js",
      "/home/danny/github-danny/transmissions/src/processors/xmpp/XmppProcessorsFactory.js",
      "/home/danny/github-danny/transmissions/src/simples/env-loader/about.md",
      "/home/danny/github-danny/transmissions/src/simples/env-loader/env-loader.js",
      "/home/danny/github-danny/transmissions/src/simples/nop/nop copy.js",
      "/home/danny/github-danny/transmissions/src/simples/nop/nop.js",
      "/home/danny/github-danny/transmissions/src/simples/nop/simple-runner.js",
      "/home/danny/github-danny/transmissions/src/simples/set-message/set-message.js",
      "/home/danny/github-danny/transmissions/src/utils/GrapoiHelpers.js",
      "/home/danny/github-danny/transmissions/src/utils/Logger.js",
      "/home/danny/github-danny/transmissions/src/utils/cache.js",
      "/home/danny/github-danny/transmissions/src/utils/footpath.js",
      "/home/danny/github-danny/transmissions/src/utils/ns.js",
      "/home/danny/github-danny/transmissions/src/utils/t2j.js",
      "/home/danny/github-danny/transmissions/src/utils/test_runner.js"
    ],
    "filepath": [
      "api/about.md",
      "api/cli/about.md",
      "api/cli/run.js",
      "api/common/CommandUtils.js",
      "api/http/WebRunner.js",
      "applications/claude-json-converter/about.md",
      "applications/example-application/about.md",
      "applications/globbo/about.md",
      "applications/html-to-md/about.md",
      "applications/link-lister/about.md",
      "applications/link-lister/data/links.md",
      "applications/link-lister/data/starter-links.md",
      "applications/packer/about.md",
      "applications/packer/packer-flow.md",
      "applications/packer/packer-sources.md",
      "applications/postcraft/about.md",
      "applications/postcraft-clear-cache/about.md",
      "applications/postcraft-previous/about.md",
      "applications/postcraft-render1/about.md",
      "applications/postcraft-render1/data/cache/2023-10-27_hello.md",
      "applications/postcraft-render1/data/cache/2025-01-08_hello-again.md",
      "applications/postcraft-render2/about.md",
      "applications/postcraft-render2/data/cache/2023-10-27_hello.md",
      "applications/postcraft-render2/data/cache/2025-01-08_hello-again.md",
      "applications/selfie/about.md",
      "applications/test_blanker/about.md",
      "applications/test_config-settings/about.md",
      "applications/test_configmap/about.md",
      "applications/test_configmap/data/input/input-01.md",
      "applications/test_configmap/data/output/output-01.md",
      "applications/test_configmap/data/output/required-01.md",
      "applications/test_configmap/simple.js",
      "applications/test_dirwalker/about.md",
      "applications/test_env-loader/about.md",
      "applications/test_file-copy-remove/about.md",
      "applications/test_file-to-sparqlstore/about.md",
      "applications/test_file-to-sparqlstore/data/input/input.md",
      "applications/test_file-to-sparqlstore/docs/handover-doc.md",
      "applications/test_file-to-sparqlstore/docs/sparql-processors-docs.md",
      "applications/test_file-to-sparqlstore/docs/test-app-docs.md",
      "applications/test_file-to-sparqlstore/examples/sparql-queries.md",
      "applications/test_filename-mapper/about.md",
      "applications/test_filename-mapper/filename-mapper-simple.js",
      "applications/test_filereader/about.md",
      "applications/test_filereader/data/input/input.md",
      "applications/test_foreach/about.md",
      "applications/test_fork/about.md",
      "applications/test_fork-unfork/about.md",
      "applications/test_fs-rw/about.md",
      "applications/test_fs-rw/data/input/input-01.md",
      "applications/test_fs-rw/data/output/required-01.md",
      "applications/test_fs-rw/simple.js",
      "applications/test_http-server/about.md",
      "applications/test_http-server/data/input/metrics.js",
      "applications/test_http-server/shutdown-client-auth.js",
      "applications/test_http-server/test-shutdown.js",
      "applications/test_nop/about.md",
      "applications/test_restructure/about.md",
      "applications/test_restructure/simple.js",
      "applications/test_runcommand/about.md",
      "applications/test_runcommand/simple.js",
      "core/ApplicationManager.js",
      "core/Director.js",
      "core/ModuleLoader.js",
      "core/ModuleLoaderFactory.js",
      "core/Procurer.js",
      "core/TransmissionBuilder.js",
      "core/WorkerPool.js",
      "engine/Application.js",
      "engine/Connector.js",
      "engine/Transmission.js",
      "processors/about.md",
      "processors/base/AbstractProcessorFactory.js",
      "processors/base/Processor.js",
      "processors/base/ProcessorSettings.js",
      "processors/example-group/ExampleProcessor.js",
      "processors/example-group/ExampleProcessorsFactory.js",
      "processors/flow/DeadEnd.js",
      "processors/flow/FlowProcessorsFactory.js",
      "processors/flow/ForEach.js",
      "processors/flow/Fork.js",
      "processors/flow/Halt.js",
      "processors/flow/NOP.js",
      "processors/flow/Ping.js",
      "processors/flow/Unfork.js",
      "processors/fs/DirWalker.js",
      "processors/fs/FileCopy.js",
      "processors/fs/FileReader.js",
      "processors/fs/FileRemove.js",
      "processors/fs/FileWriter.js",
      "processors/fs/FilenameMapper.js",
      "processors/fs/FsProcessorsFactory.js",
      "processors/github/GitHubList.js",
      "processors/github/GitHubList_no-pag.js",
      "processors/github/GitHubProcessorsFactory.js",
      "processors/http/HttpClient.js",
      "processors/http/HttpProcessorsFactory.js",
      "processors/http/HttpProxy.js",
      "processors/http/HttpServer.js",
      "processors/http/HttpServerWorker.js",
      "processors/http/services/MetricsService.js",
      "processors/http/services/ShutdownService copy.js",
      "processors/http/services/ShutdownService.js",
      "processors/json/Blanker copy.js",
      "processors/json/Blanker.js",
      "processors/json/JSONProcessorsFactory.js",
      "processors/json/JSONWalker.js",
      "processors/json/JsonRestructurer.js",
      "processors/json/Restructure.js",
      "processors/json/ValueConcat.js",
      "processors/markup/LinkFinder.js",
      "processors/markup/MarkdownToHTML.js",
      "processors/markup/MarkupProcessorsFactory.js",
      "processors/markup/MetadataExtractor.js",
      "processors/mcp/McpClient.js",
      "processors/mcp/McpProcessorsFactory.js",
      "processors/mcp/McpServer.js",
      "processors/packer/CommentStripper.js",
      "processors/packer/FileContainer.js",
      "processors/packer/PackerProcessorsFactory.js",
      "processors/packer/comment-stripper.js",
      "processors/packer/file-container.js",
      "processors/packer/packer-factory.js",
      "processors/postcraft/AtomFeedPrep.js",
      "processors/postcraft/EntryContentToPagePrep.js",
      "processors/postcraft/FrontPagePrep.js",
      "processors/postcraft/PostcraftDispatcher.js",
      "processors/postcraft/PostcraftPrep.js",
      "processors/postcraft/PostcraftProcessorsFactory.js",
      "processors/protocols/HttpGet.js",
      "processors/protocols/ProtocolsProcessorsFactory.js",
      "processors/rdf/ConfigMap copy.js",
      "processors/rdf/ConfigMap.js",
      "processors/rdf/DatasetReader copy.js",
      "processors/rdf/DatasetReader.js",
      "processors/rdf/RDFConfig.js",
      "processors/rdf/RDFProcessorsFactory.js",
      "processors/sparql/SPARQLProcessorsFactory.js",
      "processors/sparql/SPARQLSelect.js",
      "processors/sparql/SPARQLUpdate.js",
      "processors/sparql/SessionEnvironment.js",
      "processors/staging/MarkdownFormatter.js",
      "processors/staging/StagingProcessorsFactory.js",
      "processors/staging/TurtleFormatter.js",
      "processors/system/EnvLoader.js",
      "processors/system/SystemProcessorsFactory.js",
      "processors/test/AppendProcess.js",
      "processors/test/FileSink.js",
      "processors/test/FileSource.js",
      "processors/test/StringSink.js",
      "processors/test/StringSource.js",
      "processors/test/TestProcessorsFactory.js",
      "processors/text/LineReader.js",
      "processors/text/StringFilter copy.js",
      "processors/text/StringFilter.js",
      "processors/text/StringMerger.js",
      "processors/text/StringReplace.js",
      "processors/text/Templater.js",
      "processors/text/TextProcessorsFactory.js",
      "processors/unsafe/RunCommand.js",
      "processors/unsafe/UnsafeProcessorsFactory.js",
      "processors/util/CaptureAll.js",
      "processors/util/SetMessage.js",
      "processors/util/ShowConfig.js",
      "processors/util/ShowMessage.js",
      "processors/util/ShowSettings.js",
      "processors/util/ShowTransmission.js",
      "processors/util/Stash.js",
      "processors/util/UtilProcessorsFactory.js",
      "processors/util/WhiteboardToMessage.js",
      "processors/xmpp/XmppClient.js",
      "processors/xmpp/XmppProcessorsFactory.js",
      "simples/env-loader/about.md",
      "simples/env-loader/env-loader.js",
      "simples/nop/nop copy.js",
      "simples/nop/nop.js",
      "simples/nop/simple-runner.js",
      "simples/set-message/set-message.js",
      "utils/GrapoiHelpers.js",
      "utils/Logger.js",
      "utils/cache.js",
      "utils/footpath.js",
      "utils/ns.js",
      "utils/t2j.js",
      "utils/test_runner.js",
      "packer.config.json"
    ],
    "fileCount": [
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
    ],
    "content": [
      "# transmissions/src/api/\n\nInterfaces for running transmissions.\n",
      "# About : CLI\n\n`src/api/cli/*`\n\nThe CLI entry point `./trans` calls `src/api/cli/run.js` which uses [yargs](https://yargs.js.org/) - _tee hee_, they say it best :\n\n> Yargs be a node.js library fer hearties tryin' ter parse optstrings.\n\n`src/api/cli/run.js` then calls `src/api/common/CommandUtils.js`. That does a little bit of path-splitting and simple logic, calling on `src/core/ApplicationManager.js` to get things going.\n",
      "import yargs from 'yargs'\nimport { hideBin } from 'yargs/helpers'\nimport CommandUtils from '../common/CommandUtils.js'\nimport WebRunner from '../http/WebRunner.js'\nimport chalk from 'chalk'\n\nconst defaultApplicationsDir = 'src/applications'\nconst commandUtils = new CommandUtils(defaultApplicationsDir)\n\nimport { readFileSync } from 'fs';\nimport { dirname, join } from 'path';\nimport { fileURLToPath } from 'url';\n\nconst __dirname = dirname(fileURLToPath(import.meta.url));\nconst packageJson = JSON.parse(readFileSync(join(__dirname, '../../../package.json')));\nconst buildInfo = process.env.BUILD_INFO || 'dev';\nconst version = `${packageJson.version} (${buildInfo})`;\nconst banner = `\n  _____\n |_   _| __ __ _ _ __  ___\n   | || '__/ _\\` | '_ \\\\/ __|\n   | || | | (_| | | | \\\\__ \\\\\n   |_||_|  \\\\__,_|_| |_|___/\n             ${version.padStart(10).padEnd(20)}\n         ${new Date().toISOString().split('T')[0]}\n`;\n\nasync function main() {\n    console.log(chalk.cyan(banner))\n    const yargsInstance = yargs(hideBin(process.argv))\n        .usage(chalk.cyan('Usage: ./trans [application][.subtask] [options] [target]\\n  Run without arguments to list available applications.'))\n        .option('verbose', {\n            alias: 'v',\n            describe: chalk.yellow('Enable verbose output'),\n            type: 'boolean'\n        })\n        .option('silent', {\n            alias: 's',\n            describe: chalk.yellow('Suppress all output'),\n            type: 'boolean'\n        })\n        .option('message', {\n            alias: 'm',\n            describe: chalk.yellow('Input message as JSON'),\n            type: 'string',\n            coerce: JSON.parse\n        })\n        .option('web', {\n            alias: 'w',\n            describe: chalk.yellow('Start web interface'),\n            type: 'boolean',\n        })\n        .option('port', {\n            alias: 'p',\n            describe: chalk.yellow('Port for web interface'),\n            type: 'number',\n            default: 3000\n        })\n        .command('$0 [application] [target]', chalk.green('runs the specified application\\n\\nExample: ./trans process.convert -m \\'{\"text\": \"hello\"}\\'\\n'), (yargs) => {\n            return yargs\n                .positional('application', {\n                    describe: chalk.yellow('the application to run')\n                })\n                .positional('target', {\n                    describe: chalk.yellow('the target of the application')\n                })\n        }, async (argv) => {\n            if (argv.web) {\n                const webRunner = new WebRunner(applicationsDir, argv.port)\n                webRunner.start()\n                return\n            }\n\n            if (!argv.application) {\n                console.log(chalk.cyan('Available applications:'))\n                const apps = await commandUtils.listApplications()\n                console.log(chalk.green(apps.join('\\n')))\n                yargsInstance.showHelp()\n                return\n            }\n            //  console.log(`In run.js :\\napplication : ${argv.application}\\ntarget : ${argv.target}\\nmessage : ${argv.message}`)\n            await commandUtils.begin(argv.application, argv.target, argv.message, argv.verbose)\n        })\n        .help('h')\n        .alias('h', 'help')\n\n    await yargsInstance.argv\n}\n\nmain().catch(console.error)",
      "// src/api/CommandUtils.js\n\nimport path from 'path'\nimport fs from 'fs/promises'\nimport logger from '../../utils/Logger.js'\n\nimport ApplicationManager from '../../core/ApplicationManager.js'\n\nclass CommandUtils {\n\n    #appManager\n\n    constructor() {\n        this.#appManager = new ApplicationManager();\n    }\n\n    async begin(application, target, message = {}, verbose, silent) {\n\n        var debugLevel = verbose ? \"debug\" : \"info\"\n        logger.setLogLevel(debugLevel)\n\n        logger.debug('\\nCommandUtils.begin()')\n        logger.debug('CommandUtils.begin, process.cwd() = ' + process.cwd())\n        logger.debug('CommandUtils.begin, debugLevel = ' + debugLevel)\n        logger.debug('CommandUtils.begin, application = ' + application)\n        logger.debug('CommandUtils.begin, target = ' + target)\n        logger.debug(`CommandUtils.begin, message = ${message}`)\n\n        // dir containing manifest\n        if (target && !target.startsWith('/')) {\n            target = path.join(process.cwd(), target)\n        }\n\n        var { appName, appPath, subtask } = CommandUtils.splitName(application)\n        // short name or path (TODO or URL)\n\n        logger.debug(`\\n\n    after split :\n    appName = ${appName}\n    appPath = ${appPath}\n    subtask = ${subtask}\n    target = ${target}`)\n\n\n\n        await this.#appManager.initialize(appName, appPath, subtask, target)\n\n        return await this.#appManager.start(message)\n    }\n\n    static splitName(fullPath) {\n        logger.debug(`\\nCommandUtils.splitName, fullPath  = ${fullPath}`)\n        const parts = fullPath.split(path.sep)\n        logger.debug(`\\nCommandUtils.splitName, parts  = ${parts}`)\n        var lastPart = parts[parts.length - 1]\n\n        var task = false\n        if (lastPart.includes('.')) {\n            const split = lastPart.split('.')\n            task = split[1]\n            lastPart = split[0]\n        }\n        var appPath = parts.slice(0, parts.length - 1).join(path.sep)\n        appPath = path.join(appPath, lastPart)\n        //  logger.debug(`\\nCommandUtils.splitName, parts.slice(0, parts.length - 1) = ${parts.slice(0, parts.length - 1)}`)\n\n        // const appPath = parts.join(path.sep)\n        logger.debug(`CommandUtils.splitName, appName:${lastPart}, appPath:${appPath}, task:${task},`)\n\n        return { appName: lastPart, appPath: appPath, task: task }\n    }\n\n    async listApplications() {\n        return await this.#appManager.listApplications()\n    }\n\n    // TODO appears to be unused\n    static async parseOrLoadContext(contextArg) { // TODO rename context -> message\n        logger.debug(`CommandUtils.parseOrLoadContext(), contextArg = ${contextArg}`)\n        let message = {}\n        try {\n            message.payload = JSON.parse(contextArg)\n        } catch (err) {\n            logger.debug('*** Loading JSON from file...')\n            const filePath = path.resolve(contextArg)\n            const fileContent = await fs.readFile(filePath, 'utf8')\n            message.payload = JSON.parse(fileContent)\n        }\n        return message\n    }\n}\n\nexport default CommandUtils\n",
      "// src/web/WebRunner.js\nimport express from 'express'\n\nimport ApplicationManager from '../../core/ApplicationManager.js'\nimport logger from '../../utils/Logger.js'\n\nclass WebRunner {\n    constructor(appsDir, port = 7247) { // was  3000\n        this.appManager = new ApplicationManager(appsDir)\n        //  this.runner = new TransmissionRunner()\n        this.app = express()\n        this.port = port\n\n        this.setupRoutes()\n    }\n\n    setupRoutes() {\n        this.app.use(express.json())\n\n        this.app.get('/applications', async (req, res) => {\n            const apps = await this.appManager.listApplications()\n            res.json(apps)\n        })\n\n        this.app.post('/run/:application', async (req, res) => {\n            const { application } = req.params\n            const { target, message } = req.body\n\n            try {\n\n                //  const config = await this.appManager.getApplicationConfig(application)\n                await this.appManager.initialize()\n\n                const result = await this.appManager.run({\n                    ...config,\n                    message,\n                    target\n                })\n\n                res.json(result)\n            } catch (error) {\n                logger.error('Error running application:', error)\n                res.status(500).json({\n                    success: false,\n                    error: error.message\n                })\n            }\n        })\n    }\n\n    start() {\n        this.app.listen(this.port, () => {\n            logger.log(`Web interface running on port ${this.port}`)\n        })\n    }\n}\n\nexport default WebRunner\n",
      "```sh\ncd ~/github-danny/transmissions/\n./trans claude-json-converter\n\n# -P src/applications/claude-json-converter/data/input/conversations.json\n```\n\nAfter `FileReader` (and `Blanker`):\n\n```\n{\n    // system message bits,\n\n    \"content\": [\n        {\n            \"uuid\": \"\",\n            \"name\": \"\",\n            \"created_at\": \"\",\n            \"updated_at\": \"\",\n            \"account\": {\n                \"uuid\": \"\"\n            },\n            \"chat_messages\": [\n                {\n                    \"uuid\": \"\",\n                    \"text\": \"\",\n                    \"content\": [\n                        {\n                            \"type\": \"\",\n                            \"text\": \"\"\n                        }\n                    ],\n                    \"sender\": \"\",\n                    \"created_at\": \"\",\n                    \"updated_at\": \"\",\n                    \"attachments\": [],\n                    \"files\": [\n                        {\n                            \"file_name\": \"\"\n                        }\n                    ]\n                },\n                {\n                    ...\n                }\n            ]\n        }\n}\n```\n\n`JSONWalker` fires off a message per-conversation.\n\nThese need `Restructure` to split off the common metadata as `message.content`, and move `chat_messages` to `message.content`, ready for -\n\n`JSONWalker` fires off a message per-conversation.\n",
      "`src/applications/example-application/about.md`\n\n# Example Application `about.md`\n\n## Runner\n\n```sh\ncd ~/github-danny/transmissions # my local path\n./trans example-application\n```\n\n## Description\n\n---\n",
      "# Globbo\n\n```\n./run globbo -c '{\"rootDir\": \"./\", \"sourceDir\":\"docs\"}'\n```\n\nthere are more notes under\n\n/home/danny/github-danny/transmissions/docs/postcraft-site/articles/new-application-walkthrough.md\n\n/home/danny/github-danny/transmissions/docs/postcraft-site/articles/new-service-walkthrough.md\n\n## Description\n\n- Goal : a tool to recursively read local filesystem directories, checking for files with the `.md` extension to identify collections of such\n- Goal : documentation of the app creation process\n- Implementation : a #Transmissions application\n- SoftGoal : reusability\n- _non-goal_ - efficiency\n",
      "# HTML to Markdown\n\n*a minimal application (that I need) which can also serve as an example in documentation*\n\n```\n./run html-to-md -c '{\"rootDir\": \"./test-data/html-to-md\", \"filename\":\"webidl.html\"}'\n```\n\n## Description\n\n---\n\nthere are more notes under\n\n/home/danny/github-danny/transmissions/docs/postcraft-site/articles/new-application-walkthrough.md\n\n/home/danny/github-danny/transmissions/docs/postcraft-site/articles/new-service-walkthrough.md\n\n## Description\n\n- Goal : a tool to recursively read local filesystem directories, checking for files with the `.md` extension to identify collections of such\n- Goal : documentation of the app creation process\n- Implementation : a #Transmissions application\n- SoftGoal : reusability\n- _non-goal_ - efficiency\n",
      "run.js had\n\nconst here = import.meta.url\nconst message = { runScript: here }\n\ntransmission.process('', message)\n",
      "\n[Main page](https://en.wikipedia.org/wiki/Main_Page)\n[Contents](https://en.wikipedia.org/wiki/Wikipedia:Contents)\n[Current events](https://en.wikipedia.org/wiki/Portal:Current_events)\n[Random article](https://en.wikipedia.org/wiki/Special:Random)\n[About Wikipedia](https://en.wikipedia.org/wiki/Wikipedia:About)\n[Contact us](https://en.wikipedia.org/wiki/Wikipedia:Contact_us)\n[Donate](https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&utm_medium=sidebar&utm_campaign=C13_en.wikipedia.org&uselang=en)\n[Help](https://en.wikipedia.org/wiki/Help:Contents)\n[Learn to edit](https://en.wikipedia.org/wiki/Help:Introduction)\n[Community portal](https://en.wikipedia.org/wiki/Wikipedia:Community_portal)\n[Recent changes](https://en.wikipedia.org/wiki/Special:RecentChanges)\n[Upload file](https://en.wikipedia.org/wiki/Wikipedia:File_upload_wizard)\n[\n\t\n\t\n\t\t\n\t\t\n\t\n](https://en.wikipedia.org/wiki/Main_Page)\n[\n\nSearch\n\t](https://en.wikipedia.org/wiki/Special:Search)\n[Create account](https://en.wikipedia.org/w/index.php?title=Special:CreateAccount&returnto=FOAF)\n[Log in](https://en.wikipedia.org/w/index.php?title=Special:UserLogin&returnto=FOAF)\n[ Create account](https://en.wikipedia.org/w/index.php?title=Special:CreateAccount&returnto=FOAF)\n[ Log in](https://en.wikipedia.org/w/index.php?title=Special:UserLogin&returnto=FOAF)\n[learn more](https://en.wikipedia.org/wiki/Help:Introduction)\n[Contributions](https://en.wikipedia.org/wiki/Special:MyContributions)\n[Talk](https://en.wikipedia.org/wiki/Special:MyTalk)\n\n## Contents\n\n\n# FOAF\n\n[Català](https://ca.wikipedia.org/wiki/FOAF)\n[Deutsch](https://de.wikipedia.org/wiki/FOAF)\n[Español](https://es.wikipedia.org/wiki/FOAF)\n[فارسی](https://fa.wikipedia.org/wiki/%D8%A7%D9%81%E2%80%8C%D8%A7%D9%88%D8%A7%DB%8C%E2%80%8C%D8%A7%D9%81_(%D9%87%D8%B3%D8%AA%DB%8C%E2%80%8C%D8%B4%D9%86%D8%A7%D8%B3%DB%8C))\n[Français](https://fr.wikipedia.org/wiki/FOAF)\n[Italiano](https://it.wikipedia.org/wiki/FOAF)\n[Latviešu](https://lv.wikipedia.org/wiki/FOAF)\n[Nederlands](https://nl.wikipedia.org/wiki/FOAF)\n[日本語](https://ja.wikipedia.org/wiki/Friend_of_a_Friend)\n[Norsk bokmål](https://no.wikipedia.org/wiki/FOAF)\n[Polski](https://pl.wikipedia.org/wiki/FOAF_(format))\n[Português](https://pt.wikipedia.org/wiki/FOAF)\n[Русский](https://ru.wikipedia.org/wiki/FOAF)\n[Українська](https://uk.wikipedia.org/wiki/FOAF)\n[Edit links](https://www.wikidata.org/wiki/Special:EntityPage/Q1389366#sitelinks-wikipedia)\n[Article](https://en.wikipedia.org/wiki/FOAF)\n[Talk](https://en.wikipedia.org/wiki/Talk:FOAF)\n[Read](https://en.wikipedia.org/wiki/FOAF)\n[Edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit)\n[View history](https://en.wikipedia.org/w/index.php?title=FOAF&action=history)\n[Read](https://en.wikipedia.org/wiki/FOAF)\n[Edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit)\n[View history](https://en.wikipedia.org/w/index.php?title=FOAF&action=history)\n[What links here](https://en.wikipedia.org/wiki/Special:WhatLinksHere/FOAF)\n[Related changes](https://en.wikipedia.org/wiki/Special:RecentChangesLinked/FOAF)\n[Upload file](https://en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard)\n[Special pages](https://en.wikipedia.org/wiki/Special:SpecialPages)\n[Permanent link](https://en.wikipedia.org/w/index.php?title=FOAF&oldid=1165941964)\n[Page information](https://en.wikipedia.org/w/index.php?title=FOAF&action=info)\n[Cite this page](https://en.wikipedia.org/w/index.php?title=Special:CiteThisPage&page=FOAF&id=1165941964&wpFormIdentifier=titleform)\n[Get shortened URL](https://en.wikipedia.org/w/index.php?title=Special:UrlShortener&url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FFOAF)\n[Download QR code](https://en.wikipedia.org/w/index.php?title=Special:QrCode&url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FFOAF)\n[Wikidata item](https://www.wikidata.org/wiki/Special:EntityPage/Q1389366)\n[Download as PDF](https://en.wikipedia.org/w/index.php?title=Special:DownloadAsPdf&page=FOAF&action=show-download-screen)\n[Printable version](https://en.wikipedia.org/w/index.php?title=FOAF&printable=yes)\n[Wikimedia Commons](https://commons.wikimedia.org/wiki/Category:FOAF)\n[friend of a friend](https://en.wikipedia.org/wiki/Friend_of_a_friend)\n[Friend of a Friend (disambiguation)](https://en.wikipedia.org/wiki/Friend_of_a_Friend_(disambiguation))\n[](https://en.wikipedia.org/wiki/File:FoafLogo.svg)\n[RDF](https://en.wikipedia.org/wiki/Resource_Description_Framework)\n[OWL](https://en.wikipedia.org/wiki/Web_Ontology_Language)\n[Semantic Web](https://en.wikipedia.org/wiki/Semantic_Web)\n[CC BY 1.0](https://en.wikipedia.org/wiki/Creative_Commons_license)\n[xmlns.com/foaf/spec/](http://xmlns.com/foaf/spec/)\n[friend of a friend](https://en.wikipedia.org/wiki/Friend_of_a_friend)\n[machine-readable](https://en.wikipedia.org/wiki/Machine-readable_data)\n[ontology](https://en.wikipedia.org/wiki/Ontology_(information_science))\n[persons](https://en.wikipedia.org/wiki/Person)\n[social networks](https://en.wikipedia.org/wiki/Social_networks)\n[Resource Description Framework](https://en.wikipedia.org/wiki/Resource_Description_Framework)\n[Web Ontology Language](https://en.wikipedia.org/wiki/Web_Ontology_Language)\n[e-mail addresses](https://en.wikipedia.org/wiki/E-mail_address)\n[telephone number](https://en.wikipedia.org/wiki/Telephone_number)\n[Facebook](https://en.wikipedia.org/wiki/Facebook)\n[Jabber ID](https://en.wikipedia.org/wiki/Extensible_Messaging_and_Presence_Protocol)\n[URI](https://en.wikipedia.org/wiki/Uniform_Resource_Identifier)\n[Social Semantic Web](https://en.wikipedia.org/wiki/Social_Semantic_Web)\n[citation needed](https://en.wikipedia.org/wiki/Wikipedia:Citation_needed)\n[RDF](https://en.wikipedia.org/wiki/Resource_Description_Framework)\n[social web](https://en.wikipedia.org/wiki/Social_web)\n[clarification needed](https://en.wikipedia.org/wiki/Wikipedia:Please_clarify)\n[Tim Berners-Lee](https://en.wikipedia.org/wiki/Tim_Berners-Lee)\n[semantic web](https://en.wikipedia.org/wiki/Semantic_web)\n[Giant Global Graph](https://en.wikipedia.org/wiki/Giant_Global_Graph)\n[Internet](https://en.wikipedia.org/wiki/Internet)\n[World Wide Web](https://en.wikipedia.org/wiki/World_Wide_Web)\n\n## WebID[edit]\n\n[edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit&section=1)\n[WebID](https://en.wikipedia.org/wiki/WebID)\n\n## Deployment[edit]\n\n[edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit&section=2)\n[Live Journal](https://en.wikipedia.org/wiki/Live_Journal)\n[DeadJournal](https://en.wikipedia.org/wiki/DeadJournal)\n[My Opera](https://en.wikipedia.org/wiki/My_Opera)\n[Identi.ca](https://en.wikipedia.org/wiki/Identi.ca)\n[FriendFeed](https://en.wikipedia.org/wiki/FriendFeed)\n[WordPress](https://en.wikipedia.org/wiki/WordPress)\n[TypePad](https://en.wikipedia.org/wiki/TypePad)\n[Yandex](https://en.wikipedia.org/wiki/Yandex)\n[Safari](https://en.wikipedia.org/wiki/Safari_(web_browser))\n[Firefox](https://en.wikipedia.org/wiki/Firefox_(web_browser))\n[Semantic MediaWiki](https://en.wikipedia.org/wiki/Semantic_MediaWiki)\n[semantic annotation](https://en.wikipedia.org/wiki/Semantic_annotation)\n[linked data](https://en.wikipedia.org/wiki/Linked_data)\n[MediaWiki](https://en.wikipedia.org/wiki/MediaWiki)\n[content management systems](https://en.wikipedia.org/wiki/Content_management_systems)\n\n## Example[edit]\n\n[edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit&section=3)\n[Turtle](https://en.wikipedia.org/wiki/Turtle_(syntax))\n[web resources](https://en.wikipedia.org/wiki/Web_resource)\n\n## History[edit]\n\n[edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit&section=4)\n\n### Versions[edit]\n\n[edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit&section=5)\n[http://xmlns.com/foaf/0.1/](http://xmlns.com/foaf/0.1/)\n[http://xmlns.com/foaf/0.1/](http://xmlns.com/foaf/0.1/)\n\n## See also[edit]\n\n[edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit&section=6)\n[Resource Description Framework](https://en.wikipedia.org/wiki/Resource_Description_Framework)\n[Web Ontology Language](https://en.wikipedia.org/wiki/Web_Ontology_Language)\n[Social web](https://en.wikipedia.org/wiki/Social_web)\n[Semantic Web](https://en.wikipedia.org/wiki/Semantic_Web)\n[Description of a Career](https://en.wiktionary.org/wiki/DOAC)\n[Description of a Project](https://en.wikipedia.org/wiki/DOAP)\n[Semantically-Interlinked Online Communities](https://en.wikipedia.org/wiki/Semantically-Interlinked_Online_Communities)\n[hCard](https://en.wikipedia.org/wiki/HCard)\n[vCard](https://en.wikipedia.org/wiki/VCard)\n[XHTML Friends Network](https://en.wikipedia.org/wiki/XHTML_Friends_Network)\n\n## References[edit]\n\n[edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit&section=7)\n[XML Watch: Finding friends with XML and RDF](https://web.archive.org/web/20091223003446/http://www.ibm.com/developerworks/xml/library/x-foaf.html)\n[IBM DeveloperWorks](https://en.wikipedia.org/wiki/IBM_DeveloperWorks)\n[XML Watch: Support online communities with FOAF](https://web.archive.org/web/20100307223814/http://www.ibm.com/developerworks/xml/library/x-foaf2.html)\n[IBM DeveloperWorks](https://en.wikipedia.org/wiki/IBM_DeveloperWorks)\n[\"Giant Global Graph\"](https://web.archive.org/web/20160713021037/http://dig.csail.mit.edu/breadcrumbs/node/215)\n[the original](http://dig.csail.mit.edu/breadcrumbs/node/215)\n[\"LiveJournal FOAF\"](https://web.archive.org/web/20100118151037/http://community.livejournal.com/ljfoaf)\n[the original](http://community.livejournal.com/ljfoaf)\n[\"Known FOAF data providers\"](https://web.archive.org/web/20100226072731/http://wiki.foaf-project.org/w/DataSources)\n[the original](http://wiki.foaf-project.org/w/DataSources)\n[\"press release on the social networking support\"](http://company.yandex.com/press_center/press_releases/2008/2008-08-15.xml)\n[\"FOAF Support in Safari RSS\"](http://ejohn.org/blog/foaf-support-in-safari-rss/)\n[\"Semantic Radar plugin for the Firefox browser\"](https://web.archive.org/web/20140108014347/https://addons.mozilla.org/en-US/firefox/addon/semantic-radar/)\n[the original](https://addons.mozilla.org/en-US/firefox/addon/semantic-radar/)\n[\"FOAF support module for Perl\"](https://metacpan.org/pod/XML::FOAF)\n[\"FOAF+SSL authentication support for Perl\"](https://metacpan.org/pod/Web::ID)\n[http://drupal.org/project/foaf](https://drupal.org/project/foaf)\n[Drupal](https://en.wikipedia.org/wiki/Drupal)\n[\"FOAF Vocabulary Specification 0.99\"](http://xmlns.com/foaf/spec/20140114.html)\n[Archived](https://web.archive.org/web/20220303180551/http://xmlns.com/foaf/spec/20140114.html)\n\n## External links[edit]\n\n[edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit&section=8)\n[Official website](http://www.foaf-project.org)\n[Archived](https://web.archive.org/web/20211023122305/http://www.foaf-project.org/)\n[Wayback Machine](https://en.wikipedia.org/wiki/Wayback_Machine)\n[FOAF dataset](http://ebiquity.umbc.edu/resource/html/id/82/)\n[FOAF-search - a search engine for FOAF data](https://web.archive.org/web/20181130195340/https://www.foaf-search.net/)\n[Wayback Machine](https://en.wikipedia.org/wiki/Wayback_Machine)\n[v](https://en.wikipedia.org/wiki/Template:Semantic_Web)\n[t](https://en.wikipedia.org/wiki/Template_talk:Semantic_Web)\n[e](https://en.wikipedia.org/wiki/Special:EditPage/Template:Semantic_Web)\n[Semantic Web](https://en.wikipedia.org/wiki/Semantic_Web)\n[Databases](https://en.wikipedia.org/wiki/Database)\n[Hypertext](https://en.wikipedia.org/wiki/Hypertext)\n[Internet](https://en.wikipedia.org/wiki/Internet)\n[Ontologies](https://en.wikipedia.org/wiki/Ontology_(computer_science))\n[Semantics](https://en.wikipedia.org/wiki/Semantics_(computer_science))\n[Semantic networks](https://en.wikipedia.org/wiki/Semantic_network)\n[World Wide Web](https://en.wikipedia.org/wiki/World_Wide_Web)\n[Dataspaces](https://en.wikipedia.org/wiki/Dataspaces)\n[Hyperdata](https://en.wikipedia.org/wiki/Hyperdata)\n[Linked data](https://en.wikipedia.org/wiki/Linked_data)\n[Rule-based systems](https://en.wikipedia.org/wiki/Rule-based_system)\n[Semantic analytics](https://en.wikipedia.org/wiki/Semantic_analytics)\n[Semantic broker](https://en.wikipedia.org/wiki/Semantic_broker)\n[Semantic computing](https://en.wikipedia.org/wiki/Semantic_computing)\n[Semantic mapper](https://en.wikipedia.org/wiki/Semantic_mapper)\n[Semantic matching](https://en.wikipedia.org/wiki/Semantic_matching)\n[Semantic publishing](https://en.wikipedia.org/wiki/Semantic_publishing)\n[Semantic reasoner](https://en.wikipedia.org/wiki/Semantic_reasoner)\n[Semantic search](https://en.wikipedia.org/wiki/Semantic_search)\n[Semantic service-oriented architecture](https://en.wikipedia.org/wiki/Semantic_service-oriented_architecture)\n[Semantic wiki](https://en.wikipedia.org/wiki/Semantic_wiki)\n[Solid](https://en.wikipedia.org/wiki/Solid_(web_decentralization_project))\n[Collective intelligence](https://en.wikipedia.org/wiki/Collective_intelligence)\n[Description logic](https://en.wikipedia.org/wiki/Description_logic)\n[Folksonomy](https://en.wikipedia.org/wiki/Folksonomy)\n[Geotagging](https://en.wikipedia.org/wiki/Geotagging)\n[Information architecture](https://en.wikipedia.org/wiki/Information_architecture)\n[Knowledge extraction](https://en.wikipedia.org/wiki/Knowledge_extraction)\n[Knowledge management](https://en.wikipedia.org/wiki/Knowledge_management)\n[Knowledge representation and reasoning](https://en.wikipedia.org/wiki/Knowledge_representation_and_reasoning)\n[Library 2.0](https://en.wikipedia.org/wiki/Library_2.0)\n[Digital library](https://en.wikipedia.org/wiki/Digital_library)\n[Digital humanities](https://en.wikipedia.org/wiki/Digital_humanities)\n[Metadata](https://en.wikipedia.org/wiki/Metadata)\n[References](https://en.wikipedia.org/wiki/Reference_(computer_science))\n[Topic map](https://en.wikipedia.org/wiki/Topic_map)\n[Web 2.0](https://en.wikipedia.org/wiki/Web_2.0)\n[Web engineering](https://en.wikipedia.org/wiki/Web_engineering)\n[Web Science Trust](https://en.wikipedia.org/wiki/Web_Science_Trust)\n[HTTP](https://en.wikipedia.org/wiki/HTTP)\n[IRI](https://en.wikipedia.org/wiki/Internationalized_Resource_Identifier)\n[URI](https://en.wikipedia.org/wiki/Uniform_Resource_Identifier)\n[RDF](https://en.wikipedia.org/wiki/Resource_Description_Framework)\n[triples](https://en.wikipedia.org/wiki/Semantic_triple)\n[RDF/XML](https://en.wikipedia.org/wiki/RDF/XML)\n[JSON-LD](https://en.wikipedia.org/wiki/JSON-LD)\n[Turtle](https://en.wikipedia.org/wiki/Turtle_(syntax))\n[TriG](https://en.wikipedia.org/wiki/TriG_(syntax))\n[Notation3](https://en.wikipedia.org/wiki/Notation3)\n[N-Triples](https://en.wikipedia.org/wiki/N-Triples)\n[TriX](https://en.wikipedia.org/wiki/TriX_(serialization_format))\n[RRID](https://en.wikipedia.org/wiki/Research_Resource_Identifier)\n[SPARQL](https://en.wikipedia.org/wiki/SPARQL)\n[XML](https://en.wikipedia.org/wiki/XML)\n[Semantic HTML](https://en.wikipedia.org/wiki/Semantic_HTML)\n[Common Logic](https://en.wikipedia.org/wiki/Common_Logic)\n[OWL](https://en.wikipedia.org/wiki/Web_Ontology_Language)\n[RDFS](https://en.wikipedia.org/wiki/RDF_Schema)\n[Rule Interchange Format](https://en.wikipedia.org/wiki/Rule_Interchange_Format)\n[Semantic Web Rule Language](https://en.wikipedia.org/wiki/Semantic_Web_Rule_Language)\n[ALPS](https://en.wikipedia.org/w/index.php?title=Application-Level_Profile_Semantics_(ALPS)&action=edit&redlink=1)\n[SHACL](https://en.wikipedia.org/wiki/SHACL)\n[eRDF](https://en.wikipedia.org/wiki/Embedded_RDF)\n[GRDDL](https://en.wikipedia.org/wiki/GRDDL)\n[Microdata](https://en.wikipedia.org/wiki/Microdata_(HTML))\n[Microformats](https://en.wikipedia.org/wiki/Microformat)\n[RDFa](https://en.wikipedia.org/wiki/RDFa)\n[SAWSDL](https://en.wikipedia.org/wiki/SAWSDL)\n[Facebook Platform](https://en.wikipedia.org/wiki/Facebook_Platform)\n[DOAP](https://en.wikipedia.org/wiki/DOAP)\n[Dublin Core](https://en.wikipedia.org/wiki/Dublin_Core)\n[Schema.org](https://en.wikipedia.org/wiki/Schema.org)\n[SIOC](https://en.wikipedia.org/wiki/Semantically_Interlinked_Online_Communities)\n[SKOS](https://en.wikipedia.org/wiki/Simple_Knowledge_Organization_System)\n[hAtom](https://en.wikipedia.org/wiki/HAtom)\n[hCalendar](https://en.wikipedia.org/wiki/HCalendar)\n[hCard](https://en.wikipedia.org/wiki/HCard)\n[hProduct](https://en.wikipedia.org/wiki/HProduct)\n[hRecipe](https://en.wikipedia.org/wiki/HRecipe)\n[hReview](https://en.wikipedia.org/wiki/HReview)\n[v](https://en.wikipedia.org/wiki/Template:Social_networking)\n[t](https://en.wikipedia.org/wiki/Template_talk:Social_networking)\n[e](https://en.wikipedia.org/wiki/Special:EditPage/Template:Social_networking)\n[Social networks](https://en.wikipedia.org/wiki/Social_network)\n[social media](https://en.wikipedia.org/wiki/Social_media)\n[Personal](https://en.wikipedia.org/wiki/Personal_network)\n[Professional](https://en.wikipedia.org/wiki/Professional_network_service)\n[Sexual](https://en.wikipedia.org/wiki/Sexual_network)\n[Value](https://en.wikipedia.org/wiki/Value_network)\n[Clique](https://en.wikipedia.org/wiki/Clique)\n[Adolescent](https://en.wikipedia.org/wiki/Adolescent_clique)\n[Corporate social media](https://en.wikipedia.org/wiki/Corporate_social_media)\n[Distributed social network](https://en.wikipedia.org/wiki/Distributed_social_network)\n[list](https://en.wikipedia.org/wiki/Comparison_of_software_and_protocols_for_distributed_social_networking)\n[Enterprise social networking](https://en.wikipedia.org/wiki/Enterprise_social_networking)\n[Enterprise social software](https://en.wikipedia.org/wiki/Enterprise_social_software)\n[Mobile social network](https://en.wikipedia.org/wiki/Mobile_social_network)\n[Personal knowledge networking](https://en.wikipedia.org/wiki/Personal_knowledge_networking)\n[Services](https://en.wikipedia.org/wiki/Social_networking_service)\n[List of social networking services](https://en.wikipedia.org/wiki/List_of_social_networking_services)\n[List of virtual communities with more than 1 million users](https://en.wikipedia.org/wiki/List_of_virtual_communities_with_more_than_1_million_users)\n[Ambient awareness](https://en.wikipedia.org/wiki/Ambient_awareness)\n[Assortative mixing](https://en.wikipedia.org/wiki/Assortative_mixing)\n[Attention inequality](https://en.wikipedia.org/wiki/Attention_inequality)\n[Interpersonal bridge](https://en.wikipedia.org/wiki/Bridge_(interpersonal))\n[Organizational network analysis](https://en.wikipedia.org/wiki/Organizational_network_analysis)\n[Small-world experiment](https://en.wikipedia.org/wiki/Small-world_experiment)\n[Social aspects of television](https://en.wikipedia.org/wiki/Social_aspects_of_television)\n[Social capital](https://en.wikipedia.org/wiki/Social_capital)\n[Social data revolution](https://en.wikipedia.org/wiki/Social_data_revolution)\n[Social exchange theory](https://en.wikipedia.org/wiki/Social_exchange_theory)\n[Social identity theory](https://en.wikipedia.org/wiki/Social_identity_theory)\n[Social media and psychology](https://en.wikipedia.org/wiki/Social_media_and_psychology)\n[Social media intelligence](https://en.wikipedia.org/wiki/Social_media_intelligence)\n[Social media mining](https://en.wikipedia.org/wiki/Social_media_mining)\n[Social media optimization](https://en.wikipedia.org/wiki/Social_media_optimization)\n[Social network analysis](https://en.wikipedia.org/wiki/Social_network_analysis)\n[Social web](https://en.wikipedia.org/wiki/Social_web)\n[Structural endogamy](https://en.wikipedia.org/wiki/Structural_endogamy)\n[Virtual collective consciousness](https://en.wikipedia.org/wiki/Virtual_collective_consciousness)\n[Account verification](https://en.wikipedia.org/wiki/Account_verification)\n[Aggregation](https://en.wikipedia.org/wiki/Social_network_aggregation)\n[Change detection](https://en.wikipedia.org/wiki/Social_network_change_detection)\n[Blockmodeling](https://en.wikipedia.org/wiki/Blockmodeling)\n[Collaboration graph](https://en.wikipedia.org/wiki/Collaboration_graph)\n[Collaborative consumption](https://en.wikipedia.org/wiki/Collaborative_consumption)\n[Giant Global Graph](https://en.wikipedia.org/wiki/Giant_Global_Graph)\n[Lateral communication](https://en.wikipedia.org/wiki/Lateral_communication)\n[Reputation system](https://en.wikipedia.org/wiki/Reputation_system)\n[Social bot](https://en.wikipedia.org/wiki/Social_bot)\n[Social graph](https://en.wikipedia.org/wiki/Social_graph)\n[Social media analytics](https://en.wikipedia.org/wiki/Social_media_analytics)\n[Social network analysis software](https://en.wikipedia.org/wiki/Social_network_analysis_software)\n[Social networking potential](https://en.wikipedia.org/wiki/Social_networking_potential)\n[Social television](https://en.wikipedia.org/wiki/Social_television)\n[Structural cohesion](https://en.wikipedia.org/wiki/Structural_cohesion)\n[Affinity fraud](https://en.wikipedia.org/wiki/Affinity_fraud)\n[Attention economy](https://en.wikipedia.org/wiki/Attention_economy)\n[Collaborative finance](https://en.wikipedia.org/wiki/Collaborative_finance)\n[Creator economy](https://en.wikipedia.org/wiki/Creator_economy)\n[Influencer marketing](https://en.wikipedia.org/wiki/Influencer_marketing)\n[Narrowcasting](https://en.wikipedia.org/wiki/Narrowcasting)\n[Sharing economy](https://en.wikipedia.org/wiki/Sharing_economy)\n[Social commerce](https://en.wikipedia.org/wiki/Social_commerce)\n[Social sorting](https://en.wikipedia.org/wiki/Social_sorting)\n[Viral marketing](https://en.wikipedia.org/wiki/Viral_marketing)\n[Algorithmic radicalization](https://en.wikipedia.org/wiki/Algorithmic_radicalization)\n[Community recognition](https://en.wikipedia.org/wiki/Community_recognition)\n[Complex contagion](https://en.wikipedia.org/wiki/Complex_contagion)\n[Computer addiction](https://en.wikipedia.org/wiki/Computer_addiction)\n[Consequential strangers](https://en.wikipedia.org/wiki/Consequential_strangers)\n[Friend of a friend](https://en.wikipedia.org/wiki/Friend_of_a_friend)\n[Friending and following](https://en.wikipedia.org/wiki/Friending_and_following)\n[Friendship paradox](https://en.wikipedia.org/wiki/Friendship_paradox)\n[Influence-for-hire](https://en.wikipedia.org/wiki/Influence-for-hire)\n[Internet addiction](https://en.wikipedia.org/wiki/Internet_addiction)\n[Information overload](https://en.wikipedia.org/wiki/Information_overload)\n[Overchoice](https://en.wikipedia.org/wiki/Overchoice)\n[Six degrees of separation](https://en.wikipedia.org/wiki/Six_degrees_of_separation)\n[Social media addiction](https://en.wikipedia.org/wiki/Social_media_addiction)\n[Social media and suicide](https://en.wikipedia.org/wiki/Social_media_and_suicide)\n[Social invisibility](https://en.wikipedia.org/wiki/Social_invisibility)\n[Social network game](https://en.wikipedia.org/wiki/Social_network_game)\n[Suicide and the Internet](https://en.wikipedia.org/wiki/Suicide_and_the_Internet)\n[Tribe](https://en.wikipedia.org/wiki/Tribe_(internet))\n[Viral phenomenon](https://en.wikipedia.org/wiki/Viral_phenomenon)\n[Friendship recession](https://en.wikipedia.org/wiki/Friendship_recession)\n[Peer pressure](https://en.wikipedia.org/wiki/Peer_pressure)\n[Researchers](https://en.wikipedia.org/wiki/List_of_social_network_researchers)\n[User profile](https://en.wikipedia.org/wiki/User_profile)\n[Online identity](https://en.wikipedia.org/wiki/Online_identity)\n[Persona](https://en.wikipedia.org/wiki/Persona_(user_experience))\n[Social profiling](https://en.wikipedia.org/wiki/Social_profiling)\n[Viral messages](https://en.wikipedia.org/wiki/Viral_messages)\n[Virtual community](https://en.wikipedia.org/wiki/Virtual_community)\n[https://en.wikipedia.org/w/index.php?title=FOAF&oldid=1165941964](https://en.wikipedia.org/w/index.php?title=FOAF&oldid=1165941964)\n[Categories](https://en.wikipedia.org/wiki/Help:Category)\n[Ontology (information science)](https://en.wikipedia.org/wiki/Category:Ontology_(information_science))\n[Semantic Web](https://en.wikipedia.org/wiki/Category:Semantic_Web)\n[2000 software](https://en.wikipedia.org/wiki/Category:2000_software)\n[Articles with short description](https://en.wikipedia.org/wiki/Category:Articles_with_short_description)\n[Short description matches Wikidata](https://en.wikipedia.org/wiki/Category:Short_description_matches_Wikidata)\n[All articles with unsourced statements](https://en.wikipedia.org/wiki/Category:All_articles_with_unsourced_statements)\n[Articles with unsourced statements from April 2017](https://en.wikipedia.org/wiki/Category:Articles_with_unsourced_statements_from_April_2017)\n[Wikipedia articles needing clarification from April 2017](https://en.wikipedia.org/wiki/Category:Wikipedia_articles_needing_clarification_from_April_2017)\n[Webarchive template wayback links](https://en.wikipedia.org/wiki/Category:Webarchive_template_wayback_links)\n[Creative Commons Attribution-ShareAlike License 4.0](https://en.wikipedia.org/wiki/Wikipedia:Text_of_the_Creative_Commons_Attribution-ShareAlike_4.0_International_License)\n[](https://en.wikipedia.org/wiki/Wikipedia:Text_of_the_Creative_Commons_Attribution-ShareAlike_4.0_International_License)\n[Terms of Use](https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Terms_of_Use)\n[Privacy Policy](https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Privacy_policy)\n[Wikimedia Foundation, Inc.](https://www.wikimediafoundation.org/)\n[Privacy policy](https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Privacy_policy)\n[About Wikipedia](https://en.wikipedia.org/wiki/Wikipedia:About)\n[Disclaimers](https://en.wikipedia.org/wiki/Wikipedia:General_disclaimer)\n[Contact Wikipedia](https://en.wikipedia.org/wiki/Wikipedia:Contact_us)\n[Code of Conduct](https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Universal_Code_of_Conduct)\n[Developers](https://developer.wikimedia.org)\n[Statistics](https://stats.wikimedia.org/#/en.wikipedia.org)\n[Cookie statement](https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Cookie_statement)\n[Mobile view](https://en.m.wikipedia.org/w/index.php?title=FOAF&mobileaction=toggle_view_mobile)\n[](https://wikimediafoundation.org/)\n[](https://www.mediawiki.org/)\n\n# FOAF Vocabulary Specification 0.99\n\n\n## Namespace Document 14 January 2014 - Paddington Edition\n\n[http://xmlns.com/foaf/spec/20140114.html](http://xmlns.com/foaf/spec/20140114.html)\n[rdf](http://xmlns.com/foaf/spec/20140114.rdf)\n[http://xmlns.com/foaf/spec/](http://xmlns.com/foaf/spec/)\n[rdf](http://xmlns.com/foaf/spec/index.rdf)\n[http://xmlns.com/foaf/spec/20100809.html](http://xmlns.com/foaf/spec/20100809.html)\n[rdf](http://xmlns.com/foaf/spec/20100809.rdf)\n[Dan Brickley](mailto:danbri@danbri.org)\n[Libby Miller](mailto:libby@nicecupoftea.org)\n[foaf-dev@lists.foaf-project.org](http://lists.foaf-project.org/)\n[RDF\n    and Semantic Web developer community](http://www.w3.org/2001/sw/interest/)\n[](http://creativecommons.org/licenses/by/1.0/)\n[Creative Commons Attribution License](http://creativecommons.org/licenses/by/1.0/)\n[RDF](http://www.w3.org/RDF/)\n\n## Abstract\n\n\n## Status of This Document\n\n[FOAF project](http://www.foaf-project.org/)\n[RDFS/OWL](http://xmlns.com/foaf/spec/index.rdf)\n[per-term](http://xmlns.com/foaf/doc/)\n[multilingual translations](http://svn.foaf-project.org/foaftown/foaf18n/)\n[direct link](http://xmlns.com/foaf/spec/index.rdf)\n[content negotiation](http://en.wikipedia.org/wiki/Content_negotiation)\n[namespace URI](http://xmlns.com/foaf/0.1/)\n[foaf-dev@lists.foaf-project.org](mailto:foaf-dev@lists.foaf-project.org)\n[public archives](http://lists.foaf-project.org)\n[FOAF mailing list](mailto:foaf-dev@lists.foaf-project.org)\n[FOAF website](http://www.foaf-project.org/)\n\n### Changes in version 0.99\n\n\n## Table of Contents\n\n\n## FOAF at a glance\n\n[Dublin Core](http://www.dublincore.org/)\n[SKOS](http://www.w3.org/2004/02/skos/)\n[DOAP](http://trac.usefulinc.com/doap)\n[SIOC](http://sioc-project.org/)\n[Org vocabulary](http://www.epimorphics.com/public/vocabulary/org.html)\n[Bio vocabulary](http://vocab.org/bio/0.1/.html)\n[Portable Contacts](http://portablecontacts.net/)\n[W3C Social Web group](http://www.w3.org/2005/Incubator/socialweb/)\n\n### FOAF Core\n\n\n### Social Web\n\n\n### A-Z of FOAF terms (current and archaic)\n\n\n## Example\n\n\n## 1 Introduction: FOAF Basics\n\n\n### The Semantic Web\n\n[W3 future directions](http://www.w3.org/Talks/WWW94Tim/)\n[Giant Global Graph](http://dig.csail.mit.edu/breadcrumbs/node/215)\n[foaf](http://www.w3.org/People/Berners-Lee/card)\n\n### FOAF and the Semantic Web\n\n[Semantic Web](http://www.w3.org/2001/sw/)\n[SPARQL](http://www.w3.org/TR/rdf-sparql-query/)\n[SKOS](http://www.w3.org/2004/02/skos/)\n[GRDDL](http://www.w3.org/2001/sw/grddl-wg/)\n[RDFa](http://www.w3.org/TR/xhtml-rdfa-primer/)\n[Linked \n  Data](http://www.w3.org/DesignIssues/LinkedData.html)\n\n### The Basic Idea\n\n[FOAF namespace\n  document](http://xmlns.com/foaf/0.1/)\n\n## What's FOAF for?\n\n[XML\n  Watch: Finding friends with XML and RDF](http://www-106.ibm.com/developerworks/xml/library/x-foaf.html)\n[with image metadata](http://rdfweb.org/2002/01/photo/)\n[co-depiction](http://rdfweb.org/2002/01/photo/)\n[FOAF-a-matic](http://www.ldodds.com/foaf/foaf-a-matic.html)\n[FOAF project home page](http://www.foaf-project.org)\n\n## Background\n\n[alt.folklore.urban archive](http://www.urbanlegends.com/)\n[snopes.com](http://www.snopes.com/)\n\n## FOAF and Standards\n\n[ISO\n  Standardisation](http://www.iso.ch/iso/en/ISOOnline.openerpage)\n[W3C](http://www.w3.org/)\n[Process](http://www.w3.org/Consortium/Process/)\n[Open Source](http://www.opensource.org/)\n[Free Software](http://www.gnu.org/philosophy/free-sw.html)\n[Jabber\n  JEPs](http://www.jabber.org/jeps/jep-0001.html)\n[Resource Description Framework](http://www.w3.org/RDF/)\n\n## The FOAF Vocabulary Description\n\n[RDF](http://www.w3.org/RDF/)\n[Semantic Web](http://www.w3.org/2001/sw/)\n[Semantic Web](http://www.w3.org/2001/sw/)\n\n### Evolution and Extension of FOAF\n\n[Dublin Core](http://dublincore.org/)\n\n## FOAF Auto-Discovery: Publishing and Linking FOAF files\n\n[foaf-a-matic](http://www.ldodds.com/foaf/foaf-a-matic.html)\n[FOAF\n  autodiscovery](http://web.archive.org/web/20040416181630/rdfweb.org/mt/foaflog/archives/000041.html)\n\n## FOAF cross-reference: Listing FOAF Classes and\n  Properties\n\n[RDF/XML](http://xmlns.com/foaf/spec/index.rdf)\n\n### Classes and Properties (full detail)\n\n\n## Classes\n\n\n### Class: foaf:Agent\n\n\n### Class: foaf:Document\n\n\n### Class: foaf:Group\n\n[issue tracker](http://wiki.foaf-project.org/w/IssueTracker)\n[OWL](http://www.w3.org/2001/sw/WebOnt)\n\n### Class: foaf:Image\n\n\n### Class: foaf:Organization\n\n\n### Class: foaf:Person\n\n\n### Class: foaf:OnlineAccount\n\n\n### Class: foaf:PersonalProfileDocument\n\n[GRDDL](http://www.w3.org/2004/01/rdxh/spec)\n\n### Class: foaf:Project\n\n\n### Class: foaf:LabelProperty\n\n\n### Class: foaf:OnlineChatAccount\n\n[Jabber](http://www.jabber.org/)\n[AIM](http://www.aim.com/)\n[MSN](http://chat.msn.com/)\n[ICQ](http://web.icq.com/icqchat/)\n[Yahoo!](http://chat.yahoo.com/)\n[MSN](http://chat.msn.com/)\n[Freenode](http://www.freenode.net/)\n\n### Class: foaf:OnlineEcommerceAccount\n\n[Amazon](http://www.amazon.com/)\n[eBay](http://www.ebay.com/)\n[PayPal](http://www.paypal.com/)\n[thinkgeek](http://www.thinkgeek.com/)\n\n### Class: foaf:OnlineGamingAccount\n\n[EverQuest](http://everquest.station.sony.com/)\n[Xbox live](http://www.xbox.com/live/)\n[Neverwinter Nights](http://nwn.bioware.com/)\n\n## Properties\n\n\n### Property: foaf:homepage\n\n\n### Property: foaf:isPrimaryTopicOf\n\n\n### Property: foaf:knows\n\n[Relationship module](http://www.perceive.net/schemas/20021119/relationship/)\n[scutters](http://wiki.foaf-project.org/w/ScutterSpec)\n\n### Property: foaf:made\n\n\n### Property: foaf:maker\n\n[UsingDublinCoreCreator](http://wiki.foaf-project.org/w/UsingDublinCoreCreator)\n\n### Property: foaf:mbox\n\n[RFC 2368](http://ftp.ics.uci.edu/pub/ietf/uri/rfc2368.txt)\n\n### Property: foaf:member\n\n\n### Property: foaf:page\n\n\n### Property: foaf:primaryTopic\n\n[Wikipedia](http://www.wikipedia.org/)\n[NNDB](http://www.nndb.com/)\n\n### Property: foaf:weblog\n\n\n### Property: foaf:account\n\n\n### Property: foaf:accountName\n\n\n### Property: foaf:accountServiceHomepage\n\n\n### Property: foaf:aimChatID\n\n[AIM](http://www.aim.com/)\n[iChat](http://www.apple.com/macosx/what-is-macosx/ichat.html)\n[Apple](http://www.apple.com/)\n\n### Property: foaf:based_near\n\n[geo-positioning vocabulary](http://www.w3.org/2003/01/geo/wgs84_pos#)\n[GeoInfo](http://esw.w3.org/topic/GeoInfo)\n[GeoOnion vocab](http://esw.w3.org/topic/GeoOnion)\n[UsingContactNearestAirport](http://wiki.foaf-project.org/w/UsingContactNearestAirport)\n\n### Property: foaf:currentProject\n\n\n### Property: foaf:depiction\n\n[Co-Depiction](http://rdfweb.org/2002/01/photo/)\n['Annotating Images With SVG'](http://www.jibbering.com/svg/AnnotateImage.html)\n\n### Property: foaf:depicts\n\n\n### Property: foaf:familyName\n\n[issue tracker](http://wiki.foaf-project.org/w/NameVocabIssue)\n\n### Property: foaf:firstName\n\n[issue tracker](http://wiki.foaf-project.org/w/NameVocabIssue)\n\n### Property: foaf:focus\n\n[SKOS](http://www.w3.org/2004/02/skos/)\n[In SKOS](http://www.w3.org/TR/2005/WD-swbp-skos-core-guide-20050510/#secmodellingrdf)\n[2005 discussion](http://www.w3.org/TR/2005/WD-swbp-skos-core-guide-20051102/#secopen)\n[TDB URI scheme](http://larry.masinter.net/duri.html)\n[original goals](http://www.foaf-project.org/original-intro)\n\n### Property: foaf:gender\n\n[foaf-dev](http://lists.foaf-project.org/mailman/listinfo/foaf-dev)\n\n### Property: foaf:givenName\n\n[issue tracker](http://wiki.foaf-project.org/w/NameVocabIssue)\n\n### Property: foaf:icqChatID\n\n[icq chat](http://web.icq.com/icqchat/)\n[What is ICQ?](http://www.icq.com/products/whatisicq.html)\n[About Us](http://company.icq.com/info/)\n\n### Property: foaf:img\n\n\n### Property: foaf:interest\n\n[RDF](http://www.w3.org/RDF/)\n[CPAN](http://www.cpan.org/)\n\n### Property: foaf:jabberID\n\n[Jabber](http://www.jabber.org/)\n[Jabber](http://www.jabber.org/)\n\n### Property: foaf:lastName\n\n[issue tracker](http://wiki.foaf-project.org/w/NameVocabIssue)\n\n### Property: foaf:logo\n\n\n### Property: foaf:mbox_sha1sum\n\n[Edd Dumbill's \ndocumentation](http://usefulinc.com/foaf/)\n[FOAF-based whitelists](http://www.w3.org/2001/12/rubyrdf/util/foafwhite/intro.html)\n[in Sam Ruby's \nweblog entry](http://www.intertwingly.net/blog/1545.html)\n\n### Property: foaf:msnChatID\n\n[Windows Live Messenger](http://en.wikipedia.org/wiki/Windows_Live_Messenger)\n[Microsoft mesenger](http://download.live.com/messenger)\n[Windows Live ID](http://en.wikipedia.org/wiki/Windows_Live_ID)\n\n### Property: foaf:myersBriggs\n\n[this article](http://www.teamtechnology.co.uk/tt/t-articl/mb-simpl.htm)\n[Cory Caplinger's summary table](http://webspace.webring.com/people/cl/lifexplore/mbintro.htm)\n[FOAF Myers Briggs addition](http://web.archive.org/web/20080802184922/http://rdfweb.org/mt/foaflog/archives/000004.html)\n\n### Property: foaf:name\n\n[issue tracker](http://wiki.foaf-project.org/w/IssueTracker)\n\n### Property: foaf:nick\n\n\n### Property: foaf:openid\n\n[indirect identifier](http://www.w3.org/TR/webarch/#indirect-identification)\n[OpenID](http://openid.net/specs/openid-authentication-1_1.html)\n[delegation model](http://openid.net/specs/openid-authentication-1_1.html#delegating_authentication)\n[technique](http://xmlns.com/foaf/spec/#sec-autodesc)\n\n### Property: foaf:pastProject\n\n\n### Property: foaf:phone\n\n\n### Property: foaf:plan\n\n[History of the \nFinger Protocol](http://www.rajivshah.com/Case_Studies/Finger/Finger.htm)\n\n### Property: foaf:publications\n\n\n### Property: foaf:schoolHomepage\n\n\n### Property: foaf:skypeID\n\n\n### Property: foaf:thumbnail\n\n\n### Property: foaf:tipjar\n\n[discussions](http://rdfweb.org/mt/foaflog/archives/2004/02/12/20.07.32/)\n[PayPal](http://www.paypal.com/)\n\n### Property: foaf:title\n\n[FOAF Issue Tracker](http://wiki.foaf-project.org/w/IssueTracker)\n\n### Property: foaf:topic\n\n\n### Property: foaf:topic_interest\n\n\n### Property: foaf:workInfoHomepage\n\n\n### Property: foaf:workplaceHomepage\n\n\n### Property: foaf:yahooChatID\n\n[Yahoo! Chat](http://chat.yahoo.com/)\n[Yahoo! Groups](http://www.yahoogroups.com/)\n\n### Property: foaf:age\n\n\n### Property: foaf:birthday\n\n[BirthdayIssue](http://wiki.foaf-project.org/w/BirthdayIssue)\n\n### Property: foaf:membershipClass\n\n\n### Property: foaf:sha1\n\n\n### Property: foaf:status\n\n\n### Property: foaf:dnaChecksum\n\n\n### Property: foaf:family_name\n\n\n### Property: foaf:fundedBy\n\n\n### Property: foaf:geekcode\n\n[Wikipedia entry](http://en.wikipedia.org/wiki/Geek_Code)\n\n### Property: foaf:givenname\n\n[issue tracker](http://wiki.foaf-project.org/w/NameVocabIssue)\n\n### Property: foaf:holdsAccount\n\n\n### Property: foaf:surname\n\n[issue \ntracker](http://wiki.foaf-project.org/w/IssueTracker)\n\n### Property: foaf:theme\n\n\n## External Vocabulary References\n\n\n### Status Vocabulary\n\n[SemWeb Vocab Status Ontology](http://www.w3.org/2003/06/sw-vocab-status/note)\n\n### W3C Basic Geo (WGS84 lat/long) Vocabulary\n\n[W3CBasic Geo Vocabulary](http://www.w3.org/2003/01/geo/)\n\n### RDF Vocabulary Description - core concepts\n\n[W3C's site](http://www.w3.org/2001/sw/)\n[more background on URIs](http://www.w3.org/TR/webarch/#identification)\n[linked data](http://www.w3.org/DesignIssues/LinkedData)\n[SKOS](http://www.w3.org/2004/02/skos/)\n\n### Dublin Core terms\n\n[Dublin Core terms](http://dublincore.org/documents/dcmi-terms/)\n[dct:Agent](http://dublincore.org/documents/dcmi-terms/#classes-Agent)\n[dct:creator](http://dublincore.org/documents/dcmi-terms/#terms-creator)\n\n### Wordnet terms\n\n[recent](http://www.w3.org/TR/wordnet-rdf/)\n\n### SIOC terms\n\n[SIOC](http://rdfs.org/sioc/ns#)\n[SIOC](http://www.sioc-project.org/)\n\n### Acknowledgments\n\n[rdfweb-dev](http://rdfweb.org/pipermail/rdfweb-dev/)\n[#foaf](http://rdfweb.org/irc/)\n[FoafExplorer](http://xml.mfd-consult.dk/foaf/explorer/)\n[Web View](http://eikeon.com/foaf/)\n[foaf-a-matic](http://www.ldodds.com/foaf/foaf-a-matic.html)\n[Ecademy](http://www.ecademy.com/)\n[TypePad](http://www.typepad.com/)\n[many](http://conferences.oreillynet.com/cs/et2003/view/e_sess/3633)\n[explaining](http://hackdiary.com/)\n[in Japanese](http://kanzaki.com/docs/sw/foaf.html)\n[Spanish](http://f14web.com.ar/inkel/2003/01/27/foaf.html)\n[Chris Schmidt](http://crschmidt.net/)\n[spec generation](http://xmlns.com/foaf/0.1/specgen.py)\n[cool hacks](http://crschmidt.net/semweb/)\n[FOAF Logo](http://iandavis.com/2006/foaf-icons/)\n[years ago](http://www.w3.org/History/1989/proposal.html)\n\n## Recent Changes\n\n\n### Changes in version 0.99 (2014-01-14)\n\n[schema.org](http://schema.org/)\n[Person](http://schema.org/Person)\n[ImageObject](http://schema.org/ImageObject)\n[CreativeWork](http://schema.org/CreativeWork)\n\n### 2010-08-09\n\n[Bio vocabulary](http://vocab.org/bio/0.1/.html)\n\n### Changes from version 0.97 and 0.96\n\n[0.97](http://xmlns.com/foaf/spec/20100101.html)\n[0.96](http://xmlns.com/foaf/spec/20091215.html)\n[Portable Contacts](http://portablecontacts.net/)\n\n### 2009-12-15\n\n\n### 2007-11-02\n\n\n### 2007-05-24\n",
      "https://en.wikipedia.org/wiki/FOAF\n\n# https://en.wikipedia.org/wiki/WebID\n\n# https://en.wikipedia.org/wiki/Resource_Description_Framework\n\nhttp://xmlns.com/foaf/spec/\n",
      "# Packer Application\n\n_repopack/repomix equiv_\n\n```sh\n./trans packer path/to/repo\n\n./trans packer ./\n\n./trans packer\n```\n\nfrom Claude\n\n# Packer Application\n\n_repopack/repomix equiv_\n\n```sh\n./trans packer path/to/repo\n\n./trans packer ./\n\n./trans packer\n```\n\nWalks repository directory according to configured patterns, combines files into single AI-friendly document with:\n\n- Directory structure outline\n- File content with metadata\n- Comment stripping option\n- Configurable include/exclude patterns\n- Output format optimized for LLMs\n\n## Flow\n\n1. DirWalker scans repository with filters\n2. FileReader loads content and metadata\n3. FileContainer accumulates and formats data\n4. FileWriter generates single combined output\n",
      "# Packer Pipeline Flow\n\n## Command Processing\n1. `./trans packer ./src` initiates with:\n   - application = \"packer\" \n   - target = \"./src\"\n   - Command utils resolves target to absolute path\n   - Sets targetPath in message object\n\n## Pipeline Components\n\n### 1. DirWalker (p10)\n- Input: message with targetPath = resolved \"./src\" path\n- Config: \n  ```turtle\n  trn:dirWalker a trn:ConfigSet ;\n    trn:sourceDir \".\" ;\n    trn:includeExtensions \"['.md','.js','.ttl']\"\n  ```\n- Process:\n  - Walks target directory recursively\n  - Filters files by includeExtensions\n  - For each matching file emits message with:\n    ```javascript\n    {\n      filepath: relative path,\n      fullPath: absolute path,\n      filename: basename,\n      content: undefined // filled by FileReader\n    }\n    ```\n\n### 2. StringFilter (p20)\n- Input: individual file messages from DirWalker\n- Config:\n  ```turtle\n  trn:filterConfig a trn:ConfigSet ;\n    trn:includePatterns \"*.txt,*.md,*.js...\" ;\n    trn:excludePatterns \"node_modules/*,dist/*...\"\n  ```\n- Process:\n  - Filters files based on include/exclude patterns\n  - Passes matching files downstream\n  - Drops non-matching files\n\n### 3. FileReader (p30)\n- Input: filtered file messages\n- Config:\n  ```turtle\n  trn:readConfig a trn:ConfigSet ;\n    trn:mediaType \"text/plain\"\n  ```\n- Process:\n  - Reads file content\n  - Adds content to message.content\n  - Preserves file metadata\n\n### 4. FileContainer (p40)\n- Input: messages with file content\n- Config: \n  ```turtle\n  trn:containerConfig a trn:ConfigSet ;\n    trn:destination \"repomix.json\"\n  ```\n- Process:\n  - Accumulates files and metadata\n  - Builds container structure:\n    ```javascript\n    {\n      files: {\n        [relativePath]: {\n          content: string,\n          type: string,\n          timestamp: string\n        }\n      },\n      summary: {\n        totalFiles: number,\n        fileTypes: Record<string, number>\n      }\n    }\n    ```\n\n### 5. CaptureAll (p50)\n- Stores all messages in whiteboard array\n- Preserves message flow\n\n### 6. WhiteboardToMessage (p60)\n- Transforms whiteboard array into structured message\n- Groups similar properties\n\n### 7. Unfork (p70)\n- Collapses forked message paths\n- Ensures single output path\n\n### 8. FileWriter (p80)\n- Input: final container message\n- Config:\n  ```turtle\n  trn:writeConfig a trn:ConfigSet ;\n    trn:destinationFile \"repomix-output.txt\"\n  ```\n- Process:\n  - Writes formatted container to output file\n  - Returns success message\n\n## Expected Output\n- repomix-output.txt containing:\n  - Directory structure of src/\n  - File contents\n  - File metadata\n  - Summary statistics\n\n## Key Message Properties Throughout Pipeline\n```javascript\n{\n  targetPath: \"/absolute/path/to/src\",\n  rootDir: \"/path/to/packer/app\",\n  filepath: \"relative/path/to/file\",\n  content: \"file contents\",\n  done: boolean // indicates completion\n}\n```\n\n## Error Handling\n1. DirWalker handles missing/invalid directories\n2. StringFilter validates patterns before use\n3. FileReader checks file accessibility\n4. FileContainer validates content structure \n5. FileWriter ensures directory exists\n\n## Debug Points\n- Check message.targetPath in DirWalker\n- Verify pattern loading in StringFilter\n- Monitor content preservation in FileReader\n- Validate container structure before write",
      "# Packer Application Source Files\n\n## Core Processing \n```\nsrc/api/cli/run.js                          # Entry point, command line processing\nsrc/api/common/CommandUtils.js              # Command parsing and routing\nsrc/core/ApplicationManager.js              # Application lifecycle management\nsrc/core/TransmissionBuilder.js             # Pipeline construction from configs\nsrc/core/ModuleLoader.js                    # Dynamic processor loading\nsrc/core/ModuleLoaderFactory.js             # Processor module instantiation\n```\n\n## Pipeline Processors\n```\nsrc/processors/fs/DirWalker.js              # Directory traversal\nsrc/processors/text/StringFilter.js         # File pattern matching\nsrc/processors/fs/FileReader.js             # File content loading\nsrc/processors/packer/FileContainer.js      # Content aggregation\nsrc/processors/util/CaptureAll.js           # Message capture\nsrc/processors/util/WhiteboardToMessage.js  # Message transformation\nsrc/processors/flow/Unfork.js              # Pipeline convergence\nsrc/processors/fs/FileWriter.js             # Output generation\n```\n\n## Configuration\n```\nsrc/applications/packer/transmissions.ttl   # Pipeline definition\nsrc/applications/packer/config.ttl          # Processor configuration\nsrc/applications/packer/about.md            # Application documentation\n```\n\n## Base Classes & Support\n```\nsrc/engine/Transmission.js                  # Pipeline execution engine\nsrc/processors/base/Processor.js            # Base processor functionality\nsrc/processors/base/ProcessorSettings.js    # Configuration management\n```\n\n## Factories\n```\nsrc/processors/fs/FsProcessorsFactory.js           # File system processors\nsrc/processors/text/TextProcessorsFactory.js       # Text processing\nsrc/processors/packer/PackerProcessorsFactory.js   # Packer-specific processors\nsrc/processors/util/UtilProcessorsFactory.js       # Utility processors\nsrc/processors/flow/FlowProcessorsFactory.js       # Flow control processors\n```\n\n## Utilities\n```\nsrc/utils/ns.js                            # RDF namespace management\nsrc/utils/Logger.js                        # Logging infrastructure\nsrc/utils/footpath.js                      # Path resolution\nsrc/utils/GrapoiHelpers.js                 # RDF graph utilities\n```",
      "```sh\ncd ~/github-danny/transmissions\n\n./trans postcraft ../postcraft/danny.ayers.name\n```\n",
      "```sh\ncd ~/github-danny/transmissions\n\n./trans postcraft-clear-cache ../postcraft/danny.ayers.name\n```\n",
      "```sh\ncd ~/github-danny/transmissions\n\n./trans postcraft ../postcraft/danny.ayers.name\n```\n",
      "# Postcraft Render 1\n\nwalk source dirs for `.md`, render to `.html` in cache\n\n```sh\ncd ~/github-danny/transmissions\n\n./trans postcraft-render1 ../postcraft/test-site\n\n./trans postcraft-render1 ../postcraft/danny.ayers.name\n```\n\n```sparql\nPREFIX schema: <http://schema.org/>\nSELECT ?post ?title ?content ?date ?author WHERE {\n  ?post a schema:Article ;\n        schema:headline ?title ;\n        schema:articleBody ?content ;\n        schema:datePublished ?date ;\n        schema:author/schema:name ?author .\n} ORDER BY DESC(?date)\n```\n",
      "<h1>Hello World! (again)</h1>\n<p>lorem etc.</p>\n",
      "<h1>Hello World! (again)</h1>\n<p>lorem etc.</p>\n",
      "# Postcraft Render 2\n\nwalk cache dirs for `.html`, template to post pages\n\n```sh\ncd ~/github-danny/transmissions\n\n./trans postcraft-render2 ../postcraft/test-site\n\n./trans postcraft-render2 ../postcraft/danny.ayers.name\n```\n",
      "<h1>Hello World! (again)</h1>\n<p>lorem etc.</p>\n",
      "<h1>Hello World! (again)</h1>\n<p>lorem etc.</p>\n",
      "# Selfie\n\nScan `transmissions`, generate self-descriptions - per-dir about.md, about.ttl\n\n## Runner\n\n```sh\ncd ~/github-danny/transmissions # my local path\n./trans app-template\n```\n\n## Description\n\n---\n\n- Goal : a tool to recursively read local filesystem directories, checking for files with the `.md` extension to identify collections of such\n- Goal : documentation of the app creation process\n- Implementation : a #Transmissions application\n- SoftGoal : reusability\n- _non-goal_ - efficiency\n",
      "# App Template\n\n## Runner\n\n```sh\ncd ~/github-danny/transmissions # my local path\n./trans test_blanker\n```\n\n## Description\n",
      "# App Template\n\n## Runner\n\n```sh\ncd ~/github-danny/transmissions # my local path\n./trans test_config-settings\n```\n\n## Description\n\n---\n\n- Goal : a tool to recursively read local filesystem directories, checking for files with the `.md` extension to identify collections of such\n- Goal : documentation of the app creation process\n- Implementation : a #Transmissions application\n- SoftGoal : reusability\n- _non-goal_ - efficiency\n",
      "# Application : test_fs-rw\n\n```sh\ncd ~/github-danny/transmissions/ # my local path\n\n# run as application\n./trans test_configmap\n```\n",
      "Hello!\n",
      "Hello!\n",
      "Hello!\n",
      "// src/applications/test_fs-rw/simple.js\n\nimport FileReader from '../../processors/fs/FileReader.js'\nimport FileWriter from '../../processors/fs/FileWriter.js'\n\nconst config = {\n    \"simples\": \"true\",\n    \"sourceFile\": \"input/input-01.md\",\n    \"destinationFile\": \"output/output-01.md\"\n}\n\nvar message = { \"dataDir\": \"src/applications/test_fs-rw/data\" }\n\nconst read = new FileReader(config)\n\nmessage = await read.process(message)\n\nconst write = new FileWriter(config)\n\nmessage = await write.process(message)\n\n",
      "# DirWalker\n\n## Runner\n\n```sh\ncd ~/github-danny/transmissions  # my local path\n\n./trans test_dirwalker\n```\n\n## Description\n\n---\n\n- Goal : a tool to recursively read local filesystem directories, checking for files with the `.md` extension to identify collections of such\n- Goal : documentation of the app creation process\n- Implementation : a #Transmissions application\n- SoftGoal : reusability\n- _non-goal_ - efficiency\n",
      "```sh\ncd ~/github-danny/transmissions\n./trans env-loader-test\n```\n",
      "# file-copy-remove-test\n\nrun with :\n\n```\n# in transmissions dir\n\n./run file-copy-remove-test\n```\n\nor\n\n```\nnpm test -- tests/integration/file-copy-remove-test.spec.js\n```\n\nthis should :\n\n- copy `start/one.txt` into `single-empty/`\n- copy `single-empty/one.txt` into `single-full/`\n- remove `single-empty/one.txt`\n\n- copy everything in `start/` into `several-empty/`\n- copy everything in `several-empty/` into `several-full/`\n- remove everything in `several-empty/`\n\nHmm, test services would be helpful to check before and after - or maybe just use regular test runner script from npm?\n",
      "`src/applications/test_file-to-sparqlstore/about.md`\n\n# Application 'test_file-to-sparqlstore'\n\n**Checks interaction with SPARQL store**\n\n## Runner\n\n```sh\ncd ~/github-danny/transmissions # my local path\n./trans test_file-to-sparqlstore\n```\n\n## Description\n\n1. Reads a file from fs\n2. Templates it using nunjucks into a SPARQL UPDATE query\n3. POSTs this to the specified endpoint\n4. Does a SPARQL SELECT query (based on date) to retrieve data\n5. Compares this with the original content to ensure it is in the store\n\nData looks something like :\n\n```turtle\n@prefix schema: <http://schema.org/> .\n\n<http://example.com/posts-one> a schema:BlogPosting ;\n    schema:headline \"Post one\" ;\n    schema:url <http://example.com/posts-one> ;\n    schema:description \"Post one content.\" ;\n    schema:datePublished \"2023-05-22T13:00:00Z\"^^xsd:dateTime ;\n    schema:dateModified \"2023-05-22T15:00:00Z\"^^xsd:dateTime ;\n    schema:author [\n        a schema:Person ;\n        schema:name \"John Doe\" ;\n        schema:email \"johndoe@example.com\"\n    ] .\n```\n\n## Notes\n\nTODO complete -\n\nsrc/applications/test_file-to-sparqlstore\n├── about.md\n├── config.ttl\n├── data\n│   ├── input\n│   │   └── input.md\n│   └── output\n├── diamonds\n│   ├── select-blogposting.njk\n│   └── update-blogposting.njk\n├── endpoint.json\n└── transmissions.ttl\n\nsrc/processors/sparql\n├── about.md\n├── SPARQLProcessorsFactory.js\n├── SPARQLSelect.js\n└── SPARQLUpdate.js\n",
      "# Test Blog Post\n\nThis is a test blog post that will be converted to RDF and stored in the SPARQL database.\n\n## Metadata\n\n- Title: Test Blog Post\n- Author: Test User\n- Email: test@example.com\n\n## Content\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor\nincididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis\nnostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n",
      "# SPARQL Integration Handover Document\n\n## New Components Added\n\n### 1. SPARQL Processors\n- **SPARQLSelect.js**: Query processor with template support\n- **SPARQLUpdate.js**: Update processor with template support\n- **SPARQLProcessorsFactory.js**: Factory for processor instantiation\n\n### 2. Test Application\n- Location: src/applications/test_file-to-sparqlstore/\n- Purpose: End-to-end testing of SPARQL integration\n- Integration with FileReader for markdown processing\n\n### 3. Configuration Files\n- endpoint.json: SPARQL endpoint configuration\n- Test data and templates under diamonds/\n- SPARQL query/update templates\n\n## Key Technical Details\n\n### Authentication\n- Uses Basic Auth\n- Credentials in endpoint.json\n- Separate configs for query/update endpoints\n\n### Data Model\n- Uses schema.org vocabulary\n- BlogPosting as primary type\n- Nested author information\n- Timestamps for created/modified\n\n### Error Handling\n- Network failures\n- Authentication errors\n- Query validation\n- Template rendering errors\n\n## Testing\n\n### Automated Tests\n- Unit tests for processors\n- Integration tests for pipeline\n- Template validation\n\n### Manual Testing\n- Test scripts in bash/Python\n- Example queries\n- Curl commands for direct testing\n\n## Dependencies\n- axios for HTTP\n- nunjucks for templates\n- rdf-ext for RDF handling\n\n## Known Issues/TODOs\n1. Template caching not implemented\n2. Bulk operations not optimized\n3. Add transaction support\n4. Enhance error reporting",
      "# SPARQL Processors Documentation\n\n## Overview\nThe SPARQL processors provide functionality for interacting with SPARQL endpoints through the Transmissions pipeline framework. Two main processors are provided:\n- SPARQLSelect: Executes SELECT queries\n- SPARQLUpdate: Executes UPDATE operations\n\n## Configuration\nConfiguration is managed through endpoint.json:\n```json\n{\n    \"name\": \"local query\",\n    \"type\": \"query|update\",\n    \"url\": \"http://localhost:3030/dataset/query\",\n    \"credentials\": {\n        \"user\": \"username\",\n        \"password\": \"password\"\n    }\n}\n```\n\n## SPARQLSelect Processor\nExecutes templated SELECT queries against a SPARQL endpoint.\n\n### Usage\n```turtle\n:query a :Transmission ;\n    :pipe (:p10) .\n\n:p10 a :SPARQLSelect ;\n    :settings [\n        :templateFilename \"queries/select.njk\" ;\n        :endpointSettings \"endpoint.json\"\n    ] .\n```\n\n### Template Variables\n- startDate: ISO datetime for filtering\n- Additional variables from message object\n\n## SPARQLUpdate Processor\nExecutes templated UPDATE operations against a SPARQL endpoint.\n\n### Usage\n```turtle\n:update a :Transmission ;\n    :pipe (:p10) .\n\n:p10 a :SPARQLUpdate ;\n    :settings [\n        :templateFilename \"queries/update.njk\" ;\n        :endpointSettings \"endpoint.json\"\n    ] .\n```\n\n### Template Variables\n- id: Auto-generated UUID\n- title: From message.meta.title\n- content: From message.content\n- published/modified: Current timestamp\n- author: From message.meta.author\n\n## Error Handling\n- Connection failures throw network errors\n- Authentication failures throw 401/403 errors\n- Invalid queries throw 400 errors\n- All errors include detailed messages in logs",
      "# SPARQL Store Test Application\n\n## Purpose\nTests complete pipeline functionality for reading files, converting to RDF, storing in a SPARQL database, and verifying storage through queries.\n\n## Quick Start\n1. Configure SPARQL endpoint in endpoint.json\n2. Place test markdown in data/input/input.md\n3. Run application:\n```bash\n./trans test_file-to-sparqlstore\n```\n\n## Components\n1. FileReader processor:\n   - Reads input markdown\n   - Extracts metadata and content\n\n2. SPARQLUpdate processor:\n   - Converts markdown to RDF using schema.org vocabulary\n   - Stores in SPARQL database\n\n3. SPARQLSelect processor:\n   - Queries stored data\n   - Verifies successful storage\n\n## Testing\n### Manual Testing\nUse provided test scripts:\n```bash\n# Using bash script\n./test-queries.sh\n\n# Using Python script\npython3 test-queries.py\n```\n\n### Example Queries\n```sparql\n# Find recently added posts\nSELECT ?post ?title WHERE {\n  ?post a schema:BlogPosting ;\n        schema:headline ?title ;\n        schema:datePublished ?date .\n  FILTER(?date >= \"2024-01-01T00:00:00Z\"^^xsd:dateTime)\n}\n```\n\n## Configuration\n1. endpoint.json: SPARQL endpoint details\n2. config.ttl: Transmission configuration\n3. transmissions.ttl: Pipeline definition\n4. diamonds/*.njk: Query templates\n\n## Error Cases Handled\n- Missing input files\n- SPARQL endpoint connection failures\n- Authentication errors\n- Invalid markdown format\n- Failed data verification",
      "# Query all blog posts\nPREFIX schema: <http://schema.org/>\nSELECT ?post ?title ?date ?author WHERE {\n  ?post a schema:BlogPosting ;\n        schema:headline ?title ;\n        schema:datePublished ?date ;\n        schema:author/schema:name ?author .\n} ORDER BY DESC(?date)\n\n# Query posts by specific author\nPREFIX schema: <http://schema.org/>\nSELECT ?post ?title ?date WHERE {\n  ?post a schema:BlogPosting ;\n        schema:headline ?title ;\n        schema:datePublished ?date ;\n        schema:author [ schema:name \"Test User\" ] .\n} ORDER BY DESC(?date)\n\n# Query posts in date range\nPREFIX schema: <http://schema.org/>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nSELECT ?post ?title ?date WHERE {\n  ?post a schema:BlogPosting ;\n        schema:headline ?title ;\n        schema:datePublished ?date .\n  FILTER(?date >= \"2024-01-01T00:00:00Z\"^^xsd:dateTime && \n         ?date <= \"2024-12-31T23:59:59Z\"^^xsd:dateTime)\n} ORDER BY DESC(?date)\n\n# Update/Insert new blog post\nPREFIX schema: <http://schema.org/>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nINSERT DATA {\n  <http://example.com/posts/test-123> a schema:BlogPosting ;\n    schema:headline \"Test Post\" ;\n    schema:description \"Test content\" ;\n    schema:datePublished \"2024-01-16T10:00:00Z\"^^xsd:dateTime ;\n    schema:dateModified \"2024-01-16T10:00:00Z\"^^xsd:dateTime ;\n    schema:author [\n      a schema:Person ;\n      schema:name \"Test User\" ;\n      schema:email \"test@example.com\"\n    ] .\n}\n\n# Delete a blog post\nPREFIX schema: <http://schema.org/>\nDELETE WHERE {\n  <http://example.com/posts/test-123> ?p ?o .\n  OPTIONAL { ?o ?p2 ?o2 }\n}",
      "# Test Filename Mapper\n\n## Runner\n\n```sh\ncd ~/github-danny/transmissions # my local path\n./trans test_filename-mapper\n\nnpm test -- tests/unit/filename-mapper.spec.js\nnpm test -- tests/integration/filename-mapper.spec.js\n```\n\n## Description\n\nTests the FilenameMapper processor by:\n\n1. Reading a file\n2. Mapping its filename according to configuration\n3. Writing the file with the new name\n\n## Test Files\n\n- Input: data/input/input-01.txt\n- Expected: data/output/required-01.txt\n- Output: data/output/output-01.txt\n",
      "import FilenameMapper from '../../processors/fs/FilenameMapper.js';\nimport FileReader from '../../processors/fs/FileReader.js';\nimport FileWriter from '../../processors/fs/FileWriter.js';\n\nconst config = {\n    \"simples\": true,\n    \"sourceFile\": \"input/input-01.txt\",\n    \"destinationFile\": \"output/output-01.txt\",\n    \"extensions\": {\n        \"html\": \".mm.html\",\n        \"svg\": \".mm.svg\"\n    }\n};\n\nasync function runPipeline() {\n    var message = {\n        \"dataDir\": \"src/applications/test_filename-mapper/data\",\n        \"format\": \"html\"\n    };\n\n    // Read input file\n    const reader = new FileReader(config);\n    message = await reader.process(message);\n\n    // Map filename\n    const mapper = new FilenameMapper(config);\n    message = await mapper.process(message);\n\n    // Write output file\n    const writer = new FileWriter(config);\n    message = await writer.process(message);\n\n    return message;\n}\n\nrunPipeline().catch(console.error);\n",
      "# Example Application `about.md`\n\n## Runner\n\n```sh\ncd ~/github-danny/transmissions # my local path\n./trans test_filereader\n```\n\n## Description\n\n---\n",
      "This is the content of file input.md\n",
      "# ForEach processor module for Transmissions\n\n```sh\n./trans test_fork\n```\n\nYour Goal is to write a processor module for Transmissions that will initiate multiple processing pipelines based on a list provided in the incoming message. First review these instructions as a whole, and then identify the subgoals. Then, taking each subgoal in turn, break it down into a concrete series of tasks. Carry out the sequence of tasks.  \nYou have plenty of time, so don't rush, try to be as careful in understanding and operation as possible.\nExisting source code may be found in the Project Knowledge files.\n\nTwo modules are required -\n\n1. `ForEach` located in :\n\n```sh\n./transmissions/src/processors/flow/ForEach.js\n```\n\nmodeled on :\n\n```sh\n./transmissions/src/processors/templates/ProcessorTemplate.js\n```\n\n2. `FlowProcessorsFactory` located in\n\n```sh\n./transmissions/src/processors/flow/FlowProcessorsFactory.js\n```\n\nmodeled on :\n\n```sh\n/transmissions/src/processors/templates/TemplateProcessorsFactory.js\n```\n\nThe input message will contain the list to be processed in the form of this example :\n\n```json\n{\n  \"foreach\": [\"item1\", \"item2\", \"item3\"]\n}\n```\n\nThe behavior will be to emit the message to a subsequent processor using the existing engine infrastructure, like a simpler version of :\n\n```sh\ntransmissions/src/processors/fs/DirWalker.js\n```\n\nEach message emitted will be a structuredClone of the input message.\n\nOnce this code is completed, create application definitions in the form of these examples :\n\n```sh\ntransmissions/src/applications/test_fork/transmissions.ttl\ntransmissions/src/applications/test_fork/processors-config.ttl\n```\n\nAfter you have finished all these, re-read the high level Goal and taking each of your derived subgoals in turn, review your code to ensure that it fulfils the requirements.\nShow me the full source of the implementations.\n\n---\n\n/home/danny/github-danny/postcraft/danny.ayers.name/content-raw/entries/2024-09-27_lively-distractions.md\n\nhttps://github.com/github/rest-api-description\n",
      "# Test Fork/Unfork\n\n```\n./run test_fork | grep 's2 a NOP'\n```\n\nshould show the number of forks + 1 (for `message.done`)\n\n```\n./run test_fork | grep s1.s2.s10.s11.s12.s13\n```\n\nshould show just one\n",
      "# Test Fork/Unfork\n\n## ./trans test_fork-unfork\n\n```\n./run test_fork | grep 's2 a NOP'\n```\n\nshould show the number of forks + 1 (for `message.done`)\n\n```\n./run test_fork | grep s1.s2.s10.s11.s12.s13\n```\n\nshould show just one\n",
      "# Application : test_fs-rw\n\n```sh\ncd ~/github-danny/transmissions/ # my local path\n\n# run as application\n./trans test_fs-rw\n```\n\n---\n\nCopies\n\n```sh\nsrc/applications/test_fs-rw/data/output/input-01.md\n```\n\nto\n\n```sh\nsrc/applications/test_fs-rw/data/output/output-01.md\n```\n\nthe tests compare the new file with :\n\n```sh\nsrc/applications/test_fs-rw/data/output/required-01.md\n```\n\n```sh\ncd ~/github-danny/transmissions/ # my local path\n\n# run as application\n./trans test_fs-rw\n\n# run as simples\nnode src/applications/test_fs-rw/simple.js\n\n## Tests in tests/integration\n\n# test as application\nnpm test -- --filter=\"fs-rw test\"\n\n# test as simples\nnpm test -- --filter=\"fs-rw simple test\"\n```\n\n---\n\n```sh\ncd ~/github-danny/transmissions/\n./trans test_restructure -P ./src/applications/test_restructure/input/input-01.json\n```\n\n---\n\n./trans claude-json-converter -P ./conversations.json\n\n```turtle\n:s40 a :Restructure ;\n    trm:configKey :walkPrep .\n\n...\n\nt:walkPrep a trm:ReMap ;\n    trm:rename (t:pp1 t:pp2) . # consider using blank nodes\n    t:pp1   trm:pre     \"content\" ;\n            trm:post    \"template\"  .\n    t:pp2   trm:pre     \"entryContentMeta.sourceDir\" ;\n            trm:post    \"sourceDir\" .\n```\n",
      "Hello!\n",
      "Hello!\n",
      "// src/applications/test_fs-rw/simple.js\n\nimport FileReader from '../../processors/fs/FileReader.js'\nimport FileWriter from '../../processors/fs/FileWriter.js'\n\nconst config = {\n    \"simples\": \"true\",\n    \"sourceFile\": \"input/input-01.md\",\n    \"destinationFile\": \"output/output-01.md\"\n}\n\nvar message = { \"dataDir\": \"src/applications/test_fs-rw/data\" }\n\nconst read = new FileReader(config)\n\nmessage = await read.process(message)\n\nconst write = new FileWriter(config)\n\nmessage = await write.process(message)\n\n",
      "# App Template\n\n## Runner\n\n```sh\ncd ~/github-danny/transmissions # my local path\n./trans test_http-server\n\n---\nruns at :\n\nhttp://localhost:4000/transmissions/test/\n\n```\n\ncurl -X POST http://localhost:4000/shutdown\n\nnode src/applications/test_http-server/test-shutdown.js\n\nnpm test -- tests/unit/http-server_ShutdownService.spec.js\n\n```\n\n## Description\n\nTest application for HttpServer processor that:\n\n- Serves static files from data/input directory\n- Listens on port 4000\n- Shuts down on POST to /shutdown endpoint\n- Base path: /transmissions/test/\n```\n",
      "class MetricsUI {\n    constructor() {\n        this.ws = null;\n        this.token = null;\n        this.setupWebSocket();\n        this.setupAuth();\n    }\n\n    setupWebSocket() {\n        this.ws = new WebSocket(`ws://${window.location.host}/metrics`);\n        this.ws.onmessage = (event) => {\n            const metrics = JSON.parse(event.data);\n            this.updateMetricsDisplay(metrics);\n        };\n    }\n\n    async setupAuth() {\n        const response = await fetch('/admin/token');\n        const { token } = await response.json();\n        this.token = token;\n    }\n\n    updateMetricsDisplay(metrics) {\n        const display = document.getElementById('metrics');\n        display.innerHTML = `\n            <div>Uptime: ${Math.floor(metrics.uptime)}s</div>\n            <div>Connections: ${metrics.connections}</div>\n            <div>Requests: ${metrics.requests}</div>\n            <div>Memory Used: ${Math.floor(metrics.memory.used / 1024 / 1024)}MB</div>\n            <div>CPU Load: ${metrics.cpu.load[0].toFixed(2)}</div>\n        `;\n    }\n\n    async shutdown() {\n        try {\n            await fetch('/admin/shutdown', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${this.token}`\n                }\n            });\n        } catch (error) {\n            console.error('Shutdown failed:', error);\n        }\n    }\n}\n\nexport default new MetricsUI();",
      "async function shutdownServer(baseUrl, username, password) {\n    const credentials = Buffer.from(`${username}:${password}`).toString('base64');\n    \n    try {\n        const response = await fetch(`${baseUrl}/admin/shutdown`, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Basic ${credentials}`\n            }\n        });\n        \n        if (!response.ok) {\n            throw new Error(`Shutdown failed: ${response.statusText}`);\n        }\n        \n        return await response.text();\n    } catch (error) {\n        console.error('Shutdown error:', error);\n        throw error;\n    }\n}\n\n// Usage example:\ntry {\n    const baseUrl = 'http://localhost:4000';\n    const response = await fetch(`${baseUrl}/admin/credentials`);\n    const { username, password } = await response.json();\n    await shutdownServer(baseUrl, username, password);\n} catch (error) {\n    console.error('Error:', error);\n}\n",
      "import fetch from 'node-fetch';\n\nasync function testShutdown() {\n    try {\n        const response = await fetch('http://localhost:4000/shutdown', {\n            method: 'POST'\n        });\n        console.log('Server response:', await response.text());\n    } catch (error) {\n        console.error('Error:', error.message);\n    }\n}\n\ntestShutdown();\n",
      "# nop\n\n## Description\n\nminimal for comparing with simple runner\n\n---\n\n- Goal : a tool to recursively read local filesystem directories, checking for files with the `.md` extension to identify collections of such\n- Goal : documentation of the app creation process\n- Implementation : a #Transmissions application\n- SoftGoal : reusability\n- _non-goal_ - efficiency\n",
      "# Application : test_restructure\n\nRun with :\n\n```sh\ncd ~/github-danny/transmissions/ # local path of repo\n./trans test_restructure\n```\n\n#:todo make this into something like processor signature\n#:todo make Turtle version\n\n## Description\n\nReads :\n\n```sh\nsrc/applications/test_restructure/data/output/input-01.json\n```\n\nas a message, restructures it according to config, then writes the result to :\n\n```sh\nsrc/applications/test_restructure/data/output/output-01.json\n```\n\nthe tests compare the new file with :\n\n```sh\nsrc/applications/test_restructure/data/output/required-01.json\n```\n\n```sh\ncd ~/github-danny/transmissions/ # my local path\n\n# run as application\n./trans test_restructure\n\n# run as simples\nnode src/applications/test_restructure/simple.js\n\n## Tests in tests/integration\n\n# test as application\nnpm test -- --filter=\"restructure test\"\n\n# test as simples\nnpm test -- --filter=\"restructure_simple test\"\n```\n\n---\n\n```sh\ncd ~/github-danny/transmissions/\n./trans test_restructure -P ./src/applications/test_restructure/input/input-01.json\n```\n\n---\n\n./trans claude-json-converter -P ./conversations.json\n\n```turtle\n:s40 a :Restructure ;\n    trm:configKey :walkPrep .\n\n...\n\nt:walkPrep a trm:ReMap ;\n    trm:rename (t:pp1 t:pp2) . # consider using blank nodes\n    t:pp1   trm:pre     \"content\" ;\n            trm:post    \"template\"  .\n    t:pp2   trm:pre     \"entryContentMeta.sourceDir\" ;\n            trm:post    \"sourceDir\" .\n```\n",
      "// src/applications/test_restructure/simple.js\n\nimport FileReader from '../../processors/fs/FileReader.js'\nimport Restructure from '../../processors/json/Restructure.js'\nimport FileWriter from '../../processors/fs/FileWriter.js'\n\nconst config = {\n    \"simples\": \"true\",\n    \"sourceFile\": \"input/input-01.json\",\n    \"destinationFile\": \"output/output-01.json\",\n    \"mediaType\": \"application/json\",\n    \"rename\": [{\n        \"pre\": \"content.item.chat_messages\",\n        \"post\": \"content.channel\"\n    }, {\n        \"pre\": \"content.item.uuid\",\n        \"post\": \"content.filename\"\n    }, {\n        \"pre\": \"content.item.name\",\n        \"post\": \"content.title\"\n    }]\n}\n\nvar message = { \"dataDir\": \"src/applications/test_restructure/data\" }\n\nconst read = new FileReader(config)\nmessage = await read.process(message)\n\nconst restructure = new Restructure(config)\nmessage = await restructure.process(message)\n\nconst write = new FileWriter(config)\nawait write.process(message)",
      "# Application: test_runcommand\n\n```sh\ncd ~/github-danny/transmissions/ # my local path\n\n# run as application\n./trans test_runcommand\n```\n\nThis test application demonstrates the RunCommand processor by executing a simple echo command and verifying its output.\n\nThe test runs a simple echo command defined in config.ttl and compares the output with the expected content in:\n\n```sh\nsrc/applications/test_runcommand/data/output/required-01.txt\n```\n\n```sh\n# run as application\n./trans test_runcommand\n\n# run tests\nnpm test -- --filter=\"runcommand test\"\n```\n",
      "import RunCommand from '../../processors/unsafe/RunCommand.js'\nimport FileWriter from '../../processors/fs/FileWriter.js'\nimport FileReader from '../../processors/fs/FileReader.js'\nimport CaptureAll from '../../processors/util/CaptureAll.js'\nimport WhiteboardToMessage from '../../processors/util/WhiteboardToMessage.js'\n\nconst config = {\n    \"simples\": \"true\",\n    \"allowedCommands\": [\"ls\", \"echo\", \"pwd\"],\n    \"blockedPatterns\": [\"rm\", \">\", \"|\", \";\"],\n    \"sourceFile\": \"input/input-01.txt\",\n    \"destinationFile\": \"output/output-01.txt\",\n    \"whiteboard\": []\n}\n\nasync function runPipeline() {\n    console.log('Starting pipeline test with whiteboard...')\n    var message = { \"dataDir\": \"src/applications/test_runcommand/data\" }\n\n    // Initialize shared processors\n    const capture = new CaptureAll(config)\n    const whiteboardToMessage = new WhiteboardToMessage(config)\n\n    // Stage 1: Get current directory\n    const pwdCommand = new RunCommand({ ...config, command: \"pwd\" })\n    message = await pwdCommand.process(message)\n    message = await capture.process(message)\n\n    // Stage 2: List directory contents\n    const lsCommand = new RunCommand({ ...config, command: \"ls -l\" })\n    message = await lsCommand.process(message)\n    message = await capture.process(message)\n\n    // Stage 3: Echo combined output\n    message = await whiteboardToMessage.process(message)\n    const combinedOutput = message.whiteboard.commandResult\n        .map(result => result.stdout)\n        .join('\\n')\n\n    const echoCommand = new RunCommand({\n        ...config,\n        command: `echo 'Command Outputs:\\n${combinedOutput}'`\n    })\n    message = await echoCommand.process(message)\n\n    // Stage 4: Write final output\n    const write = new FileWriter(config)\n    message = await write.process(message)\n\n    // Stage 5: Read back and verify\n    const read = new FileReader(config)\n    message = await read.process(message)\n    console.log('Final output:', message.content)\n\n    // Show whiteboard contents\n    console.log('\\nWhiteboard contents:')\n    console.log(JSON.stringify(config.whiteboard, null, 2))\n}\n\nrunPipeline().catch(console.error)",
      "// src/api/ApplicationManager.js\nimport path from 'path'\nimport fs from 'fs/promises'\nimport _ from 'lodash'\n\nimport rdf from 'rdf-ext'\nimport { fromFile } from 'rdf-utils-fs'\n\nimport logger from '../utils/Logger.js'\nimport TransmissionBuilder from './TransmissionBuilder.js'\nimport ModuleLoaderFactory from './ModuleLoaderFactory.js'\n\nclass ApplicationManager {\n    constructor() {\n        this.appsDir = 'src/applications'\n        this.transmissionFilename = 'transmissions.ttl'\n        this.configFilename = 'config.ttl'\n        this.moduleSubDir = 'processors'\n        this.dataSubDir = 'data'\n        this.manifestFilename = 'manifest.ttl'\n    }\n\n    async initialize(appName, appPath, subtask, target) {\n        // logger.setLogLevel('info')\n        logger.debug(`\\n\\nApplicationManager.initialize appPath =  ${appPath} `)\n        this.appPath = this.resolveApplicationPath(appPath) // TODO tidy with object below\n\n        logger.debug(`\\nApplicationManager.initialize this.appPath =  ${this.appPath} `)\n        this.transmissionsFile = path.join(this.appPath, this.transmissionFilename)\n        this.processorsConfigFile = path.join(this.appPath, this.configFilename)\n        this.modulePath = path.join(this.appPath, this.moduleSubDir)\n\n        this.moduleLoader = ModuleLoaderFactory.createApplicationLoader(this.modulePath)\n        this.app = { // TODO tidy\n            appName: appName,\n            appPath: appPath,\n            subtask: subtask,\n        }\n        logger.debug(`ApplicationManager.initialize, target = {target}`)\n        if (target) {\n            this.app.manifestFilename = path.join(target, this.manifestFilename)\n            this.app.dataset = await this.loadManifest(this.app.manifestFilename)\n            this.app.targetPath = target\n        }\n    }\n\n\n    async start(message) {\n        //   logger.setLogLevel('info')\n        logger.debug(`\\nApplicationManager.start\n    transmissionsFile : ${this.transmissionsFile},\n    processorsConfigFile : ${this.processorsConfigFile}\n    subtask : ${this.app.subtask}`)\n\n\n\n        const transmissions = await TransmissionBuilder.build(\n            this.transmissionsFile,\n            this.processorsConfigFile,\n            this.moduleLoader\n        )\n\n        // lodash _.merge(object, [sources])\n        // https://lodash.com/docs/4.17.15#merge\n        message = _.merge(message, this.app)\n\n\n        if (!message.rootDir) {\n            message.rootDir = this.appPath\n        }\n        if (!message.dataDir) {\n            message.dataDir = path.join(this.appPath, this.dataSubDir)\n        }\n        // TODO figure out when to use rootDir and when targetPath - rename to be clearer?\n        if (!this.app.targetPath && !message.targetPath) {\n            message.targetPath = message.dataDir\n        }\n        for (const transmission of transmissions) {\n            if (!this.app.subtask || this.app.subtask === transmission.label) {\n                await transmission.process(message)\n            }\n        }\n\n        return { success: true }\n    }\n\n    async loadManifest(manifestFilename) { // TODO generalise, add URLs\n        logger.debug(`ApplicationManager.loadManifest, try loading : ${manifestFilename}`)\n        try {\n            //   const mfStat = await fs.stat(manifestFilename)\n            // logger.debug('HERE')\n            //  if (mfStat.isFile()) {\n            const stream = fromFile(manifestFilename)\n            return await rdf.dataset().import(stream)\n            //}\n            //else if (mfStat.isDirectory()) {\n\n        } catch (err) {\n            logger.debug(`ApplicationManager.loadManifest, ${manifestFilename} non-existent, creating empty dataset`)\n            return rdf.dataset()\n        }\n    }\n\n    async listApplications() {\n        try {\n            const entries = await fs.readdir(this.appsDir, { withFileTypes: true })\n            const subdirChecks = entries\n                .filter(dirent => dirent.isDirectory())\n                .map(async (dirent) => {\n                    const subdirPath = path.join(this.appsDir, dirent.name)\n                    const files = await fs.readdir(subdirPath)\n                    return files.includes('about.md') ? dirent.name : null\n                })\n\n            const validApps = (await Promise.all(subdirChecks)).filter(Boolean)\n            return validApps\n        } catch (err) {\n            logger.error('Error listing applications:', err)\n            return []\n        }\n    }\n\n\n    resolveApplicationPath(appName) {\n        logger.debug(`\\nApplicationManager.resolveApplicationPath, appName = ${appName}`)\n\n        if (appName.startsWith('/')) { // it's an absolute path\n            return appName\n        }\n\n        if (appName.startsWith('..')) {\n            // For external paths, use absolute path resolution\n            const resolved = path.resolve(process.cwd(), appName)\n            logger.debug(`ApplicationManager.resolveApplicationPath, resolved = ${resolved}`)\n            return resolved\n        }\n        logger.debug(`ApplicationManager.resolveApplicationPath, this.appsDir = ${this.appsDir}`)\n\n        // Default local (core) path resolution\n        return path.join(process.cwd(), this.appsDir, appName)\n    }\n\n\n}\n\nexport default ApplicationManager",
      "class Director {\n    constructor() {\n        this.builder = new TransmissionBuilder()\n        this.runner = new TransmissionRunner()\n        this.procurer = new Procurer()\n        this.proctor = new Proctor()\n    }\n\n    async initializeApplication(args) {\n        const application = new Application()\n        await this.procurer.loadResources(application, args)\n        await this.builder.buildTransmissions(application)\n        return application\n    }\n\n    async applyToTarget(application, target) {\n        await this.runner.execute(application, target)\n    }\n}\n\nexport default Director",
      "// src/engine/ModuleLoader.js\nimport path from 'path'\nimport { fileURLToPath } from 'url'\nimport logger from '../utils/Logger.js'\n\nclass ModuleLoader {\n    constructor(classpath) {\n        this.classpath = classpath\n        /*\n if (!Array.isArray(classpath)) {\n     throw new TypeError('Classpath must be an array')\n }\n\n // Ensure all paths are strings and normalize them\n \n this.classpath = classpath.map(p => {\n     if (typeof p !== 'string') {\n         throw new TypeError('All classpath entries must be strings')\n     }\n     return path.normalize(p)\n })\n*/\n\n        this.moduleCache = new Map()\n        logger.debug(`ModuleLoader initialized with paths :\\n${this.classpath}`)\n    }\n\n    async loadModule(moduleName) {\n        // logger.setLogLevel('debug')\n        logger.debug(`\\n\\nModuleLoader.loadModule, moduleName = ${moduleName}`)\n        logger.debug(`ModuleLoader.loadModule looking for module in classpath ${this.classpath} `)\n\n        // Check cache first\n        if (this.moduleCache.has(moduleName)) {\n            logger.debug(`Retrieved ${moduleName} from cache`)\n            return this.moduleCache.get(moduleName)\n        }\n\n        // Try each path in classpath\n        for (const basePath of this.classpath) {\n            try {\n                const fullPath = path.join(basePath, `${moduleName}.js`)\n                logger.debug(`Trying path: ${fullPath}`)\n\n                const module = await import(fullPath)\n                this.moduleCache.set(moduleName, module)\n                logger.debug(`Successfully loaded ${moduleName} from ${fullPath}`)\n                return module\n            } catch (error) {\n                logger.debug(`Failed to load from ${basePath}: ${error.message}`)\n                continue\n            }\n        }\n\n        throw new Error(`Module ${moduleName} not found in paths: ${this.classpath.join(', ')}`)\n    }\n\n    clearCache() {\n        this.moduleCache.clear()\n    }\n\n    addPath(newPath) {\n        if (typeof newPath !== 'string') {\n            throw new TypeError('Path must be a string')\n        }\n        this.classpath.push(path.normalize(newPath))\n    }\n}\nexport default ModuleLoader",
      "// src/engine/ModuleLoaderFactory.js\n\nimport path from 'path'\nimport { fileURLToPath } from 'url'\nimport logger from '../utils/Logger.js'\nimport ModuleLoader from './ModuleLoader.js'\n\nclass ModuleLoaderFactory {\n    static instance = null;\n\n    static createModuleLoader(classpath) { // dditionalPaths = []\n        const __filename = fileURLToPath(import.meta.url)\n        const __dirname = path.dirname(__filename)\n\n        /*\n        // Core processors path relative to factory location\n        const corePath = path.resolve(__dirname, '../processors')\n\n        // Combine and normalize paths\n        const classpath = [corePath, ...additionalPaths].map(p => path.normalize(p.toString()))\n\n        logger.debug(`Creating ModuleLoader with paths:\\n${classpath}`)\n*/\n        // Create new instance if none exists or paths have changed\n        if (!ModuleLoaderFactory.instance) {\n            ModuleLoaderFactory.instance = new ModuleLoader(classpath)\n        }\n\n        return ModuleLoaderFactory.instance\n    }\n\n    static createApplicationLoader(appPath) {\n        logger.debug(`\\nModuleLoaderFactory.createApplicationLoader called with ${appPath}`)\n        if (!appPath) {\n            throw new Error('Application path is required')\n        }\n        const __filename = fileURLToPath(import.meta.url)\n        const __dirname = path.dirname(__filename)\n\n        const normalizedPath = path.resolve(process.cwd(), appPath)\n        //    const appProcessorsPath = path.join(normalizedPath, 'processors')\n        const appProcessorsPath = normalizedPath\n        const corePath = path.resolve(__dirname, '../processors')\n\n        logger.debug(`ModuleLoaderFactory creating loader with paths:\n      App: ${appProcessorsPath}\n      Core: ${corePath}`)\n\n        return this.createModuleLoader([appProcessorsPath, corePath])\n    }\n\n    static clearInstance() {\n        ModuleLoaderFactory.instance = null\n    }\n}\nexport default ModuleLoaderFactory\n",
      "class Procurer {\n    constructor() {\n        this.moduleLoader = ModuleLoaderFactory.createModuleLoader()\n    }\n\n    async loadResources(application, args) {\n        const config = await this.loadConfig(args.configPath)\n        const manifest = await this.loadManifest(args.target)\n        application.config = config\n        application.manifest = manifest\n    }\n}\n\nexport default Procurer",
      "//import path from 'path';\n//import { fileURLToPath } from 'url';\n\nimport rdf from 'rdf-ext'\nimport grapoi from 'grapoi'\nimport { fromFile, toFile } from 'rdf-utils-fs'\n\nimport ns from '../utils/ns.js'\nimport GrapoiHelpers from '../utils/GrapoiHelpers.js'\nimport logger from '../utils/Logger.js'\n\n// import ModuleLoader from './ModuleLoader.js'\nimport AbstractProcessorFactory from \"../processors/base/AbstractProcessorFactory.js\"\nimport Transmission from '../engine/Transmission.js'\n// import ModuleLoaderFactory from './ModuleLoaderFactory.js'\n\n// TODO it looks like multiple copies of the config are being created - should be a singleton object\n\nclass TransmissionBuilder {\n\n  constructor(moduleLoader) {\n    this.moduleLoader = moduleLoader\n  }\n\n  static async build(transmissionConfigFile, processorsConfigFile, moduleLoader) {\n    const transmissionConfig = await TransmissionBuilder.readDataset(transmissionConfigFile)\n    const processorsConfig = await TransmissionBuilder.readDataset(processorsConfigFile)\n\n    const builder = new TransmissionBuilder(moduleLoader)\n    return builder.buildTransmissions(transmissionConfig, processorsConfig)\n  }\n\n  async buildTransmissions(transmissionConfig, processorsConfig) {\n    const poi = grapoi({ dataset: transmissionConfig })\n    const transmissions = []\n\n    for (const q of poi.out(ns.rdf.type).quads()) {\n      if (q.object.equals(ns.trn.Transmission)) {\n        const transmissionID = q.subject\n        //    transmissions.push(await this.constructTransmission(transmissionConfig, transmissionID, processorsConfig));\n        transmissions.push(await this.constructTransmission(transmissionConfig, transmissionID, processorsConfig)) // was await\n      }\n    }\n    return transmissions\n  }\n\n  async constructTransmission(transmissionConfig, transmissionID, processorsConfig) {\n    processorsConfig.whiteboard = {}\n\n    const transmission = new Transmission()\n    transmission.id = transmissionID.value\n    transmission.label = ''\n\n    const transPoi = grapoi({ dataset: transmissionConfig, term: transmissionID })\n\n    // TODO has grapoi got a first/single property method?\n    for (const quad of transPoi.out(ns.rdfs.label).quads()) {\n      transmission.label = quad.object.value\n    }\n    logger.log('\\n+ ***** Construct Transmission : ' + transmission.label + ' <' + transmission.id + '>')\n\n    let previousName = \"nothing\"\n\n    // grapoi probably has a built-in for all this\n    const pipenodes = GrapoiHelpers.listToArray(transmissionConfig, transmissionID, ns.trn.pipe)\n    await this.createNodes(transmission, pipenodes, transmissionConfig, processorsConfig) // was await, bad Claude\n    //    this.createNodes(transmission, pipenodes, transmissionConfig, processorsConfig); // was await, bad Claude\n    this.connectNodes(transmission, pipenodes)\n    return transmission\n  }\n\n  async createNodes(transmission, pipenodes, transmissionConfig, processorsConfig) {\n    for (let i = 0; i < pipenodes.length; i++) {\n      let node = pipenodes[i]\n      let processorName = node.value\n\n      if (!transmission.get(processorName)) {\n        let np = rdf.grapoi({ dataset: transmissionConfig, term: node })\n        let processorType = np.out(ns.rdf.type).term\n        let processorConfig = np.out(ns.trn.settings).term\n        //\n        //  #########################################################\n\n        try {\n          let name = ns.getShortname(processorName)\n          let type = ns.getShortname(processorType.value)\n\n          logger.log(\"| Create processor :\" + name + \" of type :\" + type)\n          let processor = await this.createProcessor(processorType, processorsConfig)\n\n          processor.id = processorName\n          processor.type = processorType\n\n          processor.transmissionNode = node\n          processor.transmission = transmission\n\n          processor.settingsNode = processorConfig\n\n          if (processorConfig) {\n            processor.settings = processorConfig\n          }\n          transmission.register(processorName, processor)\n        } catch (err) {\n          logger.error('-> Can\\'t resolve ' + processorName + ' (check transmission.ttl for typos!)\\n')\n          logger.error(err)\n        }\n      }\n    }\n  }\n\n  async connectNodes(transmission, pipenodes) {\n    for (let i = 0; i < pipenodes.length - 1; i++) {\n      let leftNode = pipenodes[i]\n      let leftProcessorName = leftNode.value\n      let rightNode = pipenodes[i + 1]\n      let rightProcessorName = rightNode.value\n      logger.log(\"  > Connect #\" + i + \" [\" + ns.getShortname(leftProcessorName) + \"] => [\" + ns.getShortname(rightProcessorName) + \"]\")\n      transmission.connect(leftProcessorName, rightProcessorName)\n    }\n  }\n\n  async createProcessor(type, config) {\n    //  logger.setLogLevel('debug')\n    // logger.debug(`\\n\\nTransmissionBuilder.createProcessor, config = ${config}`)\n\n    const coreProcessor = AbstractProcessorFactory.createProcessor(type, config)\n    if (coreProcessor) {\n      return coreProcessor\n    }\n\n    logger.debug(`TransmissionBuilder, core processor not found for ${type.value}. Trying remote module loader...`)\n\n    try {\n      const shortName = type.value.split('/').pop()\n      logger.debug(`TransmissionBuilder, loading module: ${shortName}`)\n      logger.log(this.moduleLoader)\n      const ProcessorClass = await this.moduleLoader.loadModule(shortName)\n\n      logger.debug(`Module loaded successfully: ${shortName}`)\n      return new ProcessorClass.default(config)\n    } catch (error) {\n      logger.error(`TransmissionBuilder.createProcessor, failed to load ${type.value} : ${error.message}`)\n      process.exit(1)\n    }\n  }\n\n  //  logger.error(`Failed to load processor ${type.value}: ${error.message}`)\n  //   throw new Error (`Failed to load processor ${type.value}: ${error.mesage}`)\n  //process.exit(1)\n  // throw error\n\n  // file utils\n  static async readDataset(filename) {\n    const stream = fromFile(filename)\n    const dataset = await rdf.dataset().import(stream)\n    return dataset\n  }\n\n  static async writeDataset(dataset, filename) {\n    await toFile(dataset.toStream(), filename)\n  }\n\n\n}\n// export { ModuleLoader, ModuleLoaderFactory, TransmissionBuilder }\nexport default TransmissionBuilder",
      "import { Worker } from 'worker_threads'\n\nclass WorkerPool {\n    constructor(module, size) {\n        this.workers = [];\n        this.queue = [];\n        for (let i = 0; i < size; i++) {\n            const worker = new Worker(module);\n            worker.on('message', () => {\n                // Handle completion, possibly dispatching next message\n                this.markWorkerIdle(worker);\n            });\n            this.workers.push({ worker, busy: false });\n        }\n    }\n\n    enqueueMessage(message) {\n        this.queue.push(message);\n        this.dispatch();\n    }\n\n    dispatch() {\n        const idleWorkerWrapper = this.workers.find(wrapper => !wrapper.busy);\n        if (idleWorkerWrapper && this.queue.length) {\n            const message = this.queue.shift();\n            idleWorkerWrapper.busy = true;\n            idleWorkerWrapper.worker.postMessage(message);\n        }\n    }\n\n    markWorkerIdle(workerWrapper) {\n        workerWrapper.busy = false;\n        this.dispatch(); // Check if there's more work to do\n    }\n}\n",
      "class Application {\n    constructor() {\n        this.transmissions = new Map()\n        this.config = null\n        this.manifest = null\n    }\n\n    addTransmission(id, transmission) {\n        this.transmissions.set(id, transmission)\n    }\n}",
      "import { EventEmitter } from 'events'\nimport logger from '../utils/Logger.js'\nimport footpath from '../utils/footpath.js'\n\nclass Connector extends EventEmitter {\n\n\n    constructor(fromName, toName) {\n        super()\n        this.fromName = fromName\n        this.toName = toName\n    }\n\n    connect(processors) {\n        logger.log(`Connector.connect this.fromName = ${this.fromName} this.toName =  ${this.toName}`)\n        let fromProcessor = processors[this.fromName]\n        let toProcessor = processors[this.toName]\n\n        if (!fromProcessor) {\n            throw new Error(`\\nMissing processor : ${this.fromName}, going to ${this.toName} \\n(check for typos in transmissions.ttl)\\n`)\n        }\n\n        /*\n        fromProcessor.on('message', (message) => { //  = {}\n            var tags = ''\n            //     if (toProcessor.message) {\n            tags = ' [' + fromProcessor.message.tags + '] '\n            toProcessor.tags = tags // TODO tidy\n            //   }\n            const thisTag = footpath.urlLastPart(this.toName)\n            logger.log(\"| Running >>> : \" + tags + thisTag + \" a \" + toProcessor.constructor.name)\n\n            toProcessor.receive(message)\n        })\n            */\n\n        // previous lacked async\n        fromProcessor.on('message', async (message) => {\n            var tags = fromProcessor.message?.tags ? ` [${fromProcessor.message.tags}] ` : ''\n            toProcessor.tags = tags\n            logger.log(`Running >>> : ${tags} ${toProcessor.constructor.name}`)\n            await toProcessor.receive(message)\n        })\n\n    }\n\n\n}\n\nexport default Connector",
      "import logger from '../utils/Logger.js'\nimport Connector from './Connector.js'\nimport ns from '../utils/ns.js'\n\nclass Transmission {\n  constructor() {\n    this.processors = {}\n    this.connectors = []\n    //  logger.log(\"Transmission constructor\")\n  }\n\n  register(processorName, instance) {\n    this.processors[processorName] = instance\n    // console.log('Registered processor:', processorName)\n  }\n\n  get(processorName) {\n    return this.processors[processorName]\n  }\n\n  connect(fromProcessorName, toProcessorName) {\n    logger.log(`Transmission.connect from ${fromProcessorName} to ${fromProcessorName}`)\n    let connector = new Connector(fromProcessorName, toProcessorName)\n    this.connectors.push(connector)\n    connector.connect(this.processors)\n  }\n\n\n  // In src/engine/Transmission.js\n\n  async process(message) {\n    logger.log('\\n+ ***** Execute Transmission : ' + this.label + ' <' + this.id + '>')\n    const processorName = this.connectors[0]?.fromName || Object.keys(this.processors)[0]\n    let processor = this.get(processorName)\n    if (processor) {\n      logger.log(\"| Running : \" + processorName + \" a \" + processor.constructor.name)\n      await processor.receive(message)\n    } else {\n      logger.error(\"No valid processor found to execute\")\n    }\n  }\n\n\n  /**\n * Describes the structure of the Transmission instance,\n * listing all registered processors and connectors.\n */\n  toString() {\n    let description = 'Transmission Structure:\\n'\n\n    // Describe processors\n    description += 'Processors:\\n'\n    Object.keys(this.processors).forEach((processorName) => {\n      //     description += `${processor}`\n\n      description += `  - ${ns.shortName(processorName)} a ${this.processors[processorName]} \\n`\n      //  description += `  - ${ns.shortName(processorName)}\\n`\n    })\n\n    /*\n      let name = ns.getShortname(processorName)\n              let type = ns.getShortname(processorType.value)\n\n              logger.log(\"| Create processor :\" + name + \" of type :\" + type)\n              */\n\n    // Describe connectors\n    description += 'Connectors:\\n'\n    this.connectors.forEach((connector, index) => {\n      description += `  - Connector ${index + 1}: ${ns.shortName(connector.fromName)} -> ${ns.shortName(connector.toName)}\\n`\n    })\n\n    return description\n  }\n}\n\nexport default Transmission",
      "# Creating a new Processor\n\n- update repopacks for `transmissions` and `trans-apps`\n- create a new chat session in existing Project\n- upload repopacks to Claude, with anything else that might be relevant (handover from previous session?)\n- follow the prompt model as in `/home/danny/workspaces_hkms-desktop/postcrafts-raw/transmissions/prompts/github-list.md`\n- remember additions to `xProcessorsFactory.js` and `transmissions/src/engine/AbstractProcessorFactory.js`\n\n#:todo add comment creation\n#:todo check simples & application suitability\n#:todo create document creation workflow\n#:todo create manifest.ttl creation\n#:todo make crossrefs.md, crossrefs.ttl\n#:todo create manifest.ttl consumption\n#:todo add test creation\n#:todo wire to an API, include file creation ops\n#:todo add support in #:hyperdata-desktop\n\n#:todo dedicated transmissions model, fine-tuned on relevant docs\n\n#:todo extract todos as something like :\n\n```turtle\n<http://hyperdata.it/transmissions/src/processors/about/nid123> a pv:ToDoItem ;\ndc:source <http://hyperdata.it/transmissions/src/processors/about.md> ;\npv:semtag \"#:todo\" ;\ndc:line \"3\" ;\ndc:title \"tbd\" ;\ndc:content \"extract todos as something like :\" .\n```\n",
      "import logger from '../../utils/Logger.js'\n\n// Import processor groups\nimport SystemProcessorsFactory from '../system/SystemProcessorsFactory.js'\nimport TestProcessorsFactory from '../test/TestProcessorsFactory.js'\nimport FsProcessorsFactory from '../fs/FsProcessorsFactory.js'\nimport MarkupProcessorsFactory from '../markup/MarkupProcessorsFactory.js'\nimport UtilProcessorsFactory from '../util/UtilProcessorsFactory.js'\nimport TextProcessorsFactory from '../text/TextProcessorsFactory.js'\nimport ProtocolsProcessorsFactory from '../protocols/ProtocolsProcessorsFactory.js'\nimport RDFProcessorsFactory from '../rdf/RDFProcessorsFactory.js'\nimport PostcraftProcessorsFactory from '../postcraft/PostcraftProcessorsFactory.js'\nimport FlowProcessorsFactory from '../flow/FlowProcessorsFactory.js'\nimport StagingProcessorsFactory from '../staging/StagingProcessorsFactory.js'\nimport GitHubProcessorsFactory from '../github/GitHubProcessorsFactory.js'\nimport JSONProcessorsFactory from '../json/JSONProcessorsFactory.js'\nimport PackerProcessorsFactory from '../packer/PackerProcessorsFactory.js' // 2025-01-01\n\n// added 2024-11-28\nimport UnsafeProcessorsFactory from '../unsafe/UnsafeProcessorsFactory.js'\nimport HttpProcessorsFactory from '../http/HttpProcessorsFactory.js'\nimport McpProcessorsFactory from '../mcp/McpProcessorsFactory.js'\nimport XmppProcessorsFactory from '../xmpp/XmppProcessorsFactory.js'\n\n// added 2025-01-14 : Happy Birthday to me!\nimport ExampleProcessorsFactory from '../example-group/ExampleProcessorsFactory.js'\n\n// 2025-01-16 : finally getting around to it\nimport SPARQLProcessorsFactory from '../sparql/SPARQLProcessorsFactory.js'\n\nclass AbstractProcessorFactory {\n\n    // looks until it finds\n    // good enough for now\n\n    static createProcessor(type, config) {\n        logger.trace(`\\nAbstractProcessorFactory.createProcessor : type.value = ${type.value}`)\n        //  logger.debug(`AbstractProcessorFactory.createProcessor : config = ${config}`)\n\n        var processor = ExampleProcessorsFactory.createProcessor(type, config)\n        if (processor) return processor\n\n        var processor = UnsafeProcessorsFactory.createProcessor(type, config)\n        if (processor) return processor\n        var processor = HttpProcessorsFactory.createProcessor(type, config)\n        if (processor) return processor\n        var processor = McpProcessorsFactory.createProcessor(type, config)\n        if (processor) return processor\n        var processor = XmppProcessorsFactory.createProcessor(type, config)\n        if (processor) return processor\n\n        var processor = TestProcessorsFactory.createProcessor(type, config)\n        if (processor) return processor\n        var processor = UtilProcessorsFactory.createProcessor(type, config)\n        if (processor) return processor\n\n        processor = FsProcessorsFactory.createProcessor(type, config)\n        if (processor) return processor\n\n        processor = MarkupProcessorsFactory.createProcessor(type, config)\n        if (processor) return processor\n\n        processor = TextProcessorsFactory.createProcessor(type, config)\n        if (processor) return processor\n\n        processor = ProtocolsProcessorsFactory.createProcessor(type, config)\n        if (processor) return processor\n\n        processor = RDFProcessorsFactory.createProcessor(type, config)\n        if (processor) return processor\n\n        processor = PostcraftProcessorsFactory.createProcessor(type, config)\n        if (processor) return processor\n\n        processor = SystemProcessorsFactory.createProcessor(type, config)\n        if (processor) return processor\n\n        processor = FlowProcessorsFactory.createProcessor(type, config)\n        if (processor) return processor\n\n        processor = GitHubProcessorsFactory.createProcessor(type, config)\n        if (processor) return processor\n\n        processor = StagingProcessorsFactory.createProcessor(type, config)\n        if (processor) return processor\n\n        processor = JSONProcessorsFactory.createProcessor(type, config)\n        if (processor) return processor\n\n        var processor = PackerProcessorsFactory.createProcessor(type, config);\n        if (processor) return processor;\n\n        var processor = SPARQLProcessorsFactory.createProcessor(type, config);\n        if (processor) return processor\n\n    }\n}\n\nexport default AbstractProcessorFactory",
      "import { EventEmitter } from 'events'\nimport grapoi from 'grapoi'\nimport logger from '../../utils/Logger.js'\nimport ns from '../../utils/ns.js'\nimport footpath from '../../utils/footpath.js'\nimport ProcessorSettings from './ProcessorSettings.js'\n\nclass Processor extends EventEmitter {\n    constructor(config) {\n        super()\n\n        this.config = config\n        this.settings = new ProcessorSettings(config)\n        this.messageQueue = []\n        this.processing = false\n        this.outputs = []\n    }\n\n    getProperty(property, fallback) {\n        logger.debug(`\\nProcessor.getProperty looking for ${property}`)\n        logger.debug(`Processor.getProperty, this.transmissionNode.value = ${this.transmissionNode.value}`)\n\n        const shortName = ns.getShortname(property)\n        if (this.message && this.message[shortName]) {\n            logger.debug(`Found in message: ${this.message[shortName]}`)\n            return this.message[shortName]\n        }\n\n        const settingsValue = this.getPropertyFromSettings(property)\n        if (settingsValue) {\n            logger.debug(`Found in settings: ${settingsValue.value}`)\n            return settingsValue.value\n        }\n\n        logger.debug(`Using fallback: \\n\\t${fallback}`)\n        return fallback\n    }\n\n    getPropertyFromSettings(property) {\n        logger.debug(`Processor.getPropertyFromSettings, property = ${property}`)\n        if (!this.config || !this.settingsNode) {\n            logger.debug('Config or node missing')\n            return undefined\n        }\n\n        // TODO GET PROPERTY FROM DATASET\n        const dataset = this.config\n        const ptr = grapoi({ dataset, term: this.settingsNode })\n\n        logger.log(`Checking property ${property} on node ${this.settingsNode.value}`)\n        let values = ptr.out(property)\n        if (values.terms.length > 0) {\n            logger.debug(`Found direct property value: ${values.term.value}`)\n            return values.term\n        }\n        logger.debug('No direct property found')\n\n        // Debug full path\n        //     logger.debug(`Dataset: ${[...dataset].map(q => `${q.subject.value} ${q.predicate.value} ${q.object.value}`).join('\\n')}`)\n\n        const settings = ptr.out(ns.trn.settings)\n        logger.debug(`Settings query result: ${settings?.terms?.length} terms`)\n        if (settings.terms.length > 0) {\n            const settingsId = settings.term\n            logger.debug(`Found settings reference: ${settingsId.value}`)\n\n            const settingsPtr = grapoi({ dataset, term: settingsId })\n            const settingsValues = settingsPtr.out(property)\n            if (settingsValues.terms.length > 0) {\n                logger.debug(`Found settings property value: ${settingsValues.term.value}`)\n                return settingsValues.term\n            }\n            logger.debug('No property found in settings')\n        }\n        logger.debug('No settings reference found')\n        return undefined\n    }\n\n    async preProcess(message) {\n        const messageType = this.getPropertyFromSettings(ns.trn.messageType)\n        if (messageType) {\n            if (messageType.value) { // named node\n                message.messageType = messageType.value\n            } else { // probably a string\n                message.messageType = messageType\n            }\n        }\n        this.message = message // TODO duplicated elsewhere?\n        logger.trace(\"Processor.preProcess\")\n    }\n\n    async postProcess(message) {\n        logger.trace(\"Processor.postProcess\")\n    }\n\n    async receive(message) {\n        await this.enqueue(message)\n    }\n\n    async enqueue(message) {\n        this.messageQueue.push({ message })\n        if (!this.processing) {\n            this.executeQueue()\n        }\n    }\n\n    async executeQueue() {\n        this.processing = true\n        while (this.messageQueue.length > 0) {\n            let { message } = this.messageQueue.shift()\n            message = structuredClone(message)\n            this.addTag(message)\n\n            await this.preProcess(message)\n            await this.process(message)\n            await this.postProcess(message)\n        }\n        this.processing = false\n    }\n\n    async process(message) {\n        throw new Error('process method not implemented')\n    }\n\n    addTag(message) {\n        const tag = this.getTag()\n        if (!message.tags) {\n            message.tags = tag\n            return\n        }\n        message.tags = message.tags + '.' + tag\n    }\n\n    getTag() {\n        return footpath.urlLastPart(this.id)\n    }\n\n    async emit(event, message) {\n        await new Promise(resolve => {\n            super.emit(event, message)\n            resolve()\n        })\n        return message\n    }\n\n    getOutputs() {\n        const results = this.outputs\n        this.outputs = []\n        return results\n    }\n}\n\nexport default Processor",
      "import logger from '../../utils/Logger.js'\nimport { EventEmitter } from 'events'\nimport rdf from 'rdf-ext'\nimport grapoi from 'grapoi'\nimport ns from '../../utils/ns.js'\nimport footpath from '../../utils/footpath.js'\n\nclass ProcessorSettings {\n\n    constructor(config) {\n        this.config = config\n    }\n\n    getProperty(property, fallback) {\n        logger.debug(`ProcessorSettings.getProperty looking for ${property}`)\n        logger.debug(`ProcessorSettings.getProperty, processor.transmissionNode.value = ${processor.transmissionNode.value}`)\n\n        const shortName = ns.getShortname(property)\n        if (message && message[shortName]) {\n            logger.debug(`Found in message: ${message[shortName]}`)\n            return message[shortName]\n        }\n\n        const settingsValue = processor.getPropertyFromSettings(property)\n        if (settingsValue) {\n            logger.debug(`Found in settings: ${settingsValue.value}`)\n            return settingsValue.value\n        }\n\n        logger.debug(`Using fallback: \\n\\t${fallback}`)\n        return fallback\n    }\n\n    getPropertyFromSettings(property) {\n        logger.log(`ProcessorSettings.getPropertyFromSettings, property = ${property}`)\n        if (!processor.config || !processor.settingsNode) {\n            logger.debug('Config or node missing')\n            return undefined\n        }\n\n        // TODO GET PROPERTY FROM DATASET\n        const dataset = processor.config\n        const ptr = grapoi({ dataset, term: processor.settingsNode })\n\n        logger.log(`Checking property ${property} on node ${processor.settingsNode.value}`)\n        let values = ptr.out(property)\n        if (values.terms.length > 0) {\n            logger.debug(`Found direct property value: ${values.term.value}`)\n            return values.term\n        }\n        logger.debug('No direct property found')\n\n        // Debug full path\n        //     logger.debug(`Dataset: ${[...dataset].map(q => `${q.subject.value} ${q.predicate.value} ${q.object.value}`).join('\\n')}`)\n\n        const settings = ptr.out(ns.trn.settings)\n        logger.debug(`Settings query result: ${settings?.terms?.length} terms`)\n        if (settings.terms.length > 0) {\n            const settingsId = settings.term\n            logger.debug(`Found settings reference: ${settingsId.value}`)\n\n            const settingsPtr = grapoi({ dataset, term: settingsId })\n            const settingsValues = settingsPtr.out(property)\n            if (settingsValues.terms.length > 0) {\n                logger.debug(`Found settings property value: ${settingsValues.term.value}`)\n                return settingsValues.term\n            }\n            logger.debug('No property found in settings')\n        }\n        logger.debug('No settings reference found')\n        return undefined\n    }\n\n}\nexport default ProcessorSettings",
      "// src/processors/example-group/ExampleProcessor.js\n/**\n * @class ExampleProcessor\n * @extends Processor\n * @classdesc\n * **a Basic Transmissions Processor**\n *\n * Provides a template for creating new processors, demonstrates use of config settings.\n *\n * #### __*Input*__\n * * **`message.common`** - addressed by all instances of this ExampleProcessor (optional, default undefined)\n * * **`message.something1`** - Template string (used if templateFilename is not provided)\n * * **`message.something2`** - Object with properties for template rendering (e.g., title, body)\n * * **`message.notavalue`** - Object with properties for template rendering (e.g., title, body)\n *\n * #### __*Output*__\n * * **`message.content`** - The rendered template content\n *\n * #### __*Behavior*__\n * * Uses Nunjucks to render templates\n * * Can render from a template file or a template string\n * * Applies content from message.contentBlocks to the template\n *\n * #### __Tests__\n * *\n *\n  * #### __TODO__\n * * Add test information here\n * * Cache templates - cache in utils?\n */\n\nimport { readFile } from 'node:fs/promises';\nimport { access, constants } from 'node:fs';\nimport path from 'path';\nimport logger from '../../utils/Logger.js';\nimport ns from '../../utils/ns.js';\nimport Processor from '../base/Processor.js';\n\n\nclass ExampleProcessor extends Processor {\n    constructor(config) {\n        super(config);\n    }\n\n    /**\n      * Does something with the message and emits a 'message' event with the processed message.\n      * @param {Object} message - The message object.\n      */\n    async process(message) {\n        logger.debug(`\\n\\nExampleProcessor.process`)\n\n        // TODO figure this out better\n        // may be needed if preceded by a spawning processor, eg. fs/DirWalker\n        if (message.done) {\n            return this.emit('message', message)\n            // or simply return\n        }\n\n        // message is processed here :\n\n        // property values pulled from message | config settings | fallback\n        const me = this.getProperty(ns.trn.me)\n        logger.log(`\\nI am ${me}`)\n\n        message.common = this.getProperty(ns.trn.common)\n        message.something1 = this.getProperty(ns.trn.something1)\n\n        message.something2 = this.getProperty(ns.trn.something2)\n\n        var added = this.getProperty(ns.trn.added, '')\n        message.something1 = message.something1 + added\n\n        message.notavalue = this.getProperty(ns.trn.notavalue, 'fallback value')\n\n        // message forwarded\n        return this.emit('message', message);\n    }\n}\nexport default ExampleProcessor;",
      "import logger from '../../utils/Logger.js'\nimport ns from '../../utils/ns.js'\n\nimport ExampleProcessor from './ExampleProcessor.js'\n/*\n   a ref to this should go in `src/processors/base/AbstractProcessorFactory.js`\n*/\n\n\n// import OtherProcessor from './ExampleProcessor.js'\n\nclass ExampleProcessorsFactory {\n\n    static createProcessor(type, config) {\n\n        if (type.equals(ns.trn.ExampleProcessor)) {\n            return new ExampleProcessor(config)\n        }\n\n        /** Other processors in the group follow the same pattern\n\n        if (type.equals(ns.trn.OtherProcessor)) {\n            return new OtherProcessor(config)\n        }\n            ...\n        */\n\n        return false\n    }\n}\nexport default ExampleProcessorsFactory",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass DeadEnd extends Processor {\n\n    async process(message) {\n        logger.log('DeadEnd at [' + message.tags + '] ' + this.getTag())\n    }\n\n}\nexport default DeadEnd\n",
      "import logger from '../../utils/Logger.js'\nimport ns from '../../utils/ns.js'\nimport ForEach from './ForEach.js'\nimport Ping from './Ping.js'\nimport NOP from '../flow/NOP.js'\nimport DeadEnd from '../flow/DeadEnd.js'\nimport Halt from '../flow/Halt.js'\nimport Unfork from '../flow/Unfork.js'\nimport Fork from '../flow/Fork.js'\n\nclass FlowProcessorsFactory {\n    static createProcessor(type, config) {\n        if (type.equals(ns.trn.ForEach)) {\n            logger.debug('FlowProcessorsFactory: Creating ForEach processor')\n            return new ForEach(config)\n        }\n        if (type.equals(ns.trn.Ping)) {\n            logger.debug('FlowProcessorsFactory: Creating Ping processor')\n            return new Ping(config)\n        }\n        if (type.equals(ns.trn.NOP)) {\n            return new NOP(config)\n        }\n        if (type.equals(ns.trn.DeadEnd)) {\n            return new DeadEnd(config)\n        }\n        if (type.equals(ns.trn.Halt)) {\n            return new Halt(config)\n        }\n        if (type.equals(ns.trn.Fork)) {\n            return new Fork(config)\n        }\n        if (type.equals(ns.trn.Unfork)) {\n            return new Unfork(config)\n        }\n        return false\n    }\n}\n\nexport default FlowProcessorsFactory",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass ForEach extends Processor {\n    constructor(config) {\n        super(config)\n    }\n\n    async process(message) {\n        //   logger.setLogLevel('debug')\n        logger.debug('ForEach execute method called')\n\n        if (!message.foreach || !Array.isArray(message.foreach)) {\n            logger.error('ForEach: Invalid or missing foreach array in message')\n            message.foreach = [\"testing-testing\", \"one\", \"two\", \"three\"]\n            // throw new Error('Invalid or missing foreach array in message')\n        }\n\n        for (const item of message.foreach) {\n            const clonedMessage = structuredClone(message)\n            clonedMessage.currentItem = item\n            delete clonedMessage.foreach // Remove the original array to prevent infinite loops TODO needed?\n\n            logger.debug(`ForEach: Emitting message for item: ${item}`)\n            this.emit('message', clonedMessage)\n        }\n\n        logger.debug('ForEach: Finished processing all items')\n    }\n}\nexport default ForEach",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\n\n// rough, only for system testing\n\nclass Fork extends Processor {\n\n    constructor(config) {\n        super(config)\n    }\n\n    async process(message) {\n        //   logger.setLogLevel('debug')\n        const nForks = message.nForks || 2\n\n        logger.debug('forks = ' + nForks)\n\n        for (let i = 0; i < nForks; i++) {\n            var messageClone = structuredClone(message)\n            messageClone.forkN = i\n            logger.debug('--- emit --- ' + i)\n            this.emit('message', messageClone)\n        }\n\n        message.done = true // one extra to flag completion\n\n        return this.emit('message', message)\n        //   return this.getOutputs()\n    }\n\n}\n\nexport default Fork\n",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass Halt extends Processor {\n\n    process(message) {\n        logger.log('\\n************************************************************************')\n        logger.log('*** << Thou Hast Summoned HALT, the Mighty Stopper of All Things  >> ***')\n        logger.log('*** <<                   ~~~ ALL IS GOOD ~~~                      >> ***')\n        logger.log('*** <<                     Have a nice day!                       >> ***')\n        logger.log('************************************************************************\\n')\n        logger.log('*** Transmission was : ' + message.tags)\n        logger.log('*** Context now : ')\n        logger.reveal(message)\n        process.exit() // all good\n    }\n}\n\nexport default Halt\n",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\nimport ns from '../../utils/ns.js'\n\nclass NOP extends Processor {\n\n    constructor(config) {\n        super(config)\n    }\n\n    async process(message) {\n        const done = message.done ? `DONE` : `NOT DONE`\n        logger.log(`\\nNOP at [${message.tags}] ${this.getTag()} (${done})`)\n\n        return this.emit('message', message)\n    }\n\n    double(string) {\n        return string + string\n    }\n}\nexport default NOP\n",
      "import { Worker } from 'worker_threads';\nimport path from 'path';\nimport logger from '../../utils/Logger.js';\nimport Processor from '../base/Processor.js';\nimport ns from '../../utils/ns.js';\n\nclass Ping extends Processor {\n    constructor(config) {\n        super(config);\n        this.worker = null;\n        this.pingConfig = {\n            interval: this.getPropertyFromMyConfig(ns.trn.interval) || 5000,\n            count: this.getPropertyFromMyConfig(ns.trn.count) || 0,\n            payload: this.getPropertyFromMyConfig(ns.trn.payload) || 'ping',\n            killSignal: this.getPropertyFromMyConfig(ns.trn.killSignal) || 'STOP',\n            retryAttempts: this.getPropertyFromMyConfig(ns.trn.retryAttempts) || 3,\n            retryDelay: this.getPropertyFromMyConfig(ns.trn.retryDelay) || 1000\n        };\n    }\n\n    async process(message) {\n        try {\n            // Check for kill signal in incoming message\n            if (message.kill === this.pingConfig.killSignal) {\n                await this.shutdown();\n                return this.emit('message', {\n                    ...message,\n                    pingStatus: 'stopped',\n                    timestamp: Date.now()\n                });\n            }\n\n            if (this.worker) {\n                logger.warn('Ping worker already running, ignoring start request');\n                return;\n            }\n\n            let retryCount = 0;\n            const startWorker = async () => {\n                try {\n                    this.worker = new Worker(\n                        path.join(process.cwd(), 'src/processors/flow/PingWorker.js')\n                    );\n\n                    this.worker.on('message', (msg) => {\n                        switch (msg.type) {\n                            case 'ping':\n                                this.emit('message', {\n                                    ...message,\n                                    ping: {\n                                        count: msg.count,\n                                        timestamp: msg.timestamp,\n                                        payload: msg.payload,\n                                        status: 'running'\n                                    }\n                                });\n                                break;\n                            case 'complete':\n                                this.emit('message', {\n                                    ...message,\n                                    pingComplete: true,\n                                    timestamp: Date.now()\n                                });\n                                break;\n                            case 'error':\n                                this.handleWorkerError(msg.error, startWorker, retryCount);\n                                break;\n                        }\n                    });\n\n                    this.worker.on('error', (error) => {\n                        this.handleWorkerError(error, startWorker, retryCount);\n                    });\n\n                    this.worker.on('exit', (code) => {\n                        if (code !== 0) {\n                            this.handleWorkerError(\n                                new Error(`Worker stopped with exit code ${code}`),\n                                startWorker,\n                                retryCount\n                            );\n                        }\n                        this.worker = null;\n                    });\n\n                    this.worker.postMessage({\n                        type: 'start',\n                        config: this.pingConfig\n                    });\n\n                } catch (error) {\n                    this.handleWorkerError(error, startWorker, retryCount);\n                }\n            };\n\n            await startWorker();\n\n            return new Promise((resolve) => {\n                this.worker.on('exit', () => {\n                    resolve(message);\n                });\n            });\n\n        } catch (error) {\n            logger.error(`Failed to start ping processor: ${error}`);\n            throw error;\n        }\n    }\n\n    async handleWorkerError(error, retryFn, retryCount) {\n        logger.error(`Ping worker error: ${error}`);\n\n        if (retryCount < this.pingConfig.retryAttempts) {\n            retryCount++;\n            logger.info(`Retrying ping worker (attempt ${retryCount}/${this.pingConfig.retryAttempts})`);\n            setTimeout(retryFn, this.pingConfig.retryDelay);\n        } else {\n            logger.error('Max retry attempts reached, stopping ping worker');\n            this.emit('error', error);\n            await this.shutdown();\n        }\n    }\n\n    async shutdown() {\n        if (this.worker) {\n            this.worker.postMessage({ type: 'stop' });\n            this.worker = null;\n        }\n    }\n}\n\nexport default Ping;\n",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\nimport ns from '../../utils/ns.js'\nimport rdf from 'rdf-ext'\nimport grapoi from 'grapoi'\nimport DeadEnd from './DeadEnd.js'\n/*\nTODO move to ./flow\n\nonly accept the first call\n*/\n\nclass Unfork extends Processor {\n\n    constructor(config) {\n        super(config)\n\n        /* NOPE\n        if (Unfork._instance) {\n            return new DeadEnd(config)\n        }\n        Unfork._instance = this;\n*/\n    }\n\n    async process(message) {\n        logger.setLogLevel(\"debug\")\n        logger.debug(`Unfork got message with done=${message.done}, tags=${message.tags}`);\n\n        logger.debug('Unfork ----')\n        if (message.done) {\n            logger.debug(' - Unfork passing message >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>')\n            message.done = false // in case it's needed later\n\n            /*\n                        await new Promise(resolve => {\n                            //    super.emit(event, message)\n                            return this.emit('message', message)\n                            resolve()\n                            logger.log(`after resolve has ${message.done}`)\n                        })\n            */\n            return this.emit('message', message)\n        } else {\n            logger.debug(' - Unfork terminating pipe')\n            return\n        }\n    }\n}\nexport default Unfork\n",
      "import { readdir } from 'fs/promises';\nimport path from 'path';\nimport ns from '../../utils/ns.js';\nimport logger from '../../utils/Logger.js';\nimport Processor from '../base/Processor.js';\n\nclass DirWalker extends Processor {\n    constructor(config) {\n        super(config);\n        this.includeExtensions = ['.md'];\n        this.excludePrefixes = ['_', '.'];\n        this.fileCount = 0\n    }\n\n    async process(message) {\n        logger.setLogLevel('debug')\n        logger.debug('\\nDirWalker.process');\n\n        message.counter = 0;\n        message.slugs = [];\n        message.done = false;\n\n        const sourceDir = this.getProperty(ns.trn.sourceDir);\n        logger.debug(`DirWalker sourceDir from config = ${sourceDir}`);\n\n        if (!sourceDir) {\n            throw new Error('sourceDir property not found in configuration');\n        }\n\n        var includeExtensions = this.getProperty(ns.trn.includeExtensions);\n        if (includeExtensions) {\n            includeExtensions = includeExtensions.replaceAll('\\'', '\"');\n            this.includeExtensions = JSON.parse(includeExtensions);\n        }\n\n        if (!message.sourceDir) {\n            message.sourceDir = sourceDir;\n        }\n\n        logger.debug('\\n\\nDirWalker, message.targetPath = ' + message.targetPath)\n        logger.debug('DirWalker, message.rootDir = ' + message.rootDir)\n        logger.debug('DirWalker, message.sourceDir = ' + message.sourceDir)\n\n        let dirPath;\n        if (path.isAbsolute(sourceDir)) {\n            dirPath = sourceDir;\n        } else {\n            if (message.targetPath) {\n                dirPath = path.join(message.targetPath, sourceDir);\n            } else {\n                dirPath = path.join(message.rootDir, sourceDir);\n            }\n        }\n        logger.debug(`DirWalker resolved dirPath = ${dirPath}`);\n\n        await this.walkDirectory(dirPath, message);\n\n        const finalMessage = structuredClone(message);\n        finalMessage.done = true;\n        logger.debug(\"DirWalker emitting final done=true message\");\n        return this.emit('message', finalMessage);\n    }\n\n    async walkDirectory(dir, baseMessage) {\n        logger.debug(`DirWalker.walkDirectory, dir = ${dir}`);\n        //   logger.reveal(this.message)\n        const entries = await readdir(dir, { withFileTypes: true });\n\n        for (const entry of entries) {\n            const fullPath = path.join(dir, entry.name);\n            if (entry.isDirectory() && !this.excludePrefixes.includes(entry.name[0])) {\n                await this.walkDirectory(fullPath, baseMessage);\n            } else if (entry.isFile()) {\n                const extension = path.extname(entry.name);\n                const prefix = entry.name[0];\n\n                if (!this.excludePrefixes.includes(prefix) &&\n                    this.includeExtensions.includes(extension)) {\n                    const message = structuredClone(baseMessage);\n                    message.filename = entry.name;\n                    message.subdir = path.dirname(path.relative(message.targetPath, fullPath)).split(path.sep)[1];\n                    message.fullPath = fullPath;\n                    message.filepath = path.relative(baseMessage.targetPath || baseMessage.rootDir, fullPath);\n                    message.done = false;\n                    message.counter++;\n\n                    const slug = message.filename.split('.')[0]\n                    message.slugs.push(slug)\n\n                    logger.debug(`DirWalker emitting :\n                        message.targetPath: ${message.targetPath}\n                        message.filename: ${message.filename}\n                        message.fullPath: ${message.fullPath}\n                        message.subdir: ${message.subdir}\n                        message.filepath: ${message.filepath}\n                        message.slugs: ${message.slugs}`);\n                    //        process.exit()\n                    message.fileCount++\n                    this.emit('message', message);\n                }\n            }\n        }\n    }\n}\n\nexport default DirWalker;",
      "// src/processors/fs/FileCopy.js\n/**\n * @class FileCopy\n * @extends Processor\n * @classdesc\n * **a Transmissions Processor**\n *\n * Copies files or entire directories on the local filesystem.\n *\n * #### __*Configuration*__\n * If a `settings` is provided in the transmission:\n * * **`ns.trn.source`** - The source path relative to `applicationRootDir`\n * * **`ns.trn.destination`** - The destination path relative to `applicationRootDir`\n *\n * #### __*Input*__\n * * **`message.rootDir`** (optional) - The root directory of the operation\n * * **`message.applicationRootDir`** (optional) - The root directory of the application, fallback `rootDir`\n * * **`message.source`** (if no `settings`) - The source path of the file or directory to copy\n * * **`message.destination`** (if no `settings`) - The destination path for the copied file or directory\n *\n * #### __*Output*__\n * * **`message`** - unmodified\n *\n * #### __*Behavior*__\n * * Copies the specified file or directory to the destination\n * * Checks and creates target directories if they don't exist\n * * Copies individual files directly\n * * Recursively copies directories and their contents\n * * Logs detailed information about the copying process for debugging\n *\n * #### __Tests__\n * * **`./run file-copy-remove-test`**\n * * **`npm test -- tests/integration/file-copy-remove-test.spec.js`**\n */\n\nimport { copyFile, mkdir, readdir, stat } from 'node:fs/promises'\nimport path from 'path'\nimport logger from '../../utils/Logger.js'\nimport ns from '../../utils/ns.js'\nimport Processor from '../base/Processor.js'\n\n\nclass FileCopy extends Processor {\n    constructor(config) {\n        super(config)\n    }\n\n    /**\n     * Executes the file copy operation\n     * @param {Object} message - The input message\n     */\n    async process(message) {\n        //  logger.setLogLevel(\"info\")\n\n        logger.debug(\"message.rootDir = \" + message.rootDir)\n        var source, destination\n\n        // Determine source and destination paths\n        if (this.settings === 'undefined') {\n            logger.debug('FileCopy: using message.source and message.destination')\n            source = message.source\n            destination = message.destination\n        } else {\n            logger.debug(`FileCopy: using settings ${this.settings.value}`)\n            source = this.getPropertyFromMyConfig(ns.trn.source)\n            destination = this.getPropertyFromMyConfig(ns.trn.destination)\n            if (message.targetPath) {\n                source = path.join(message.targetPath, source)\n                destination = path.join(message.targetPath, destination)\n            } else {\n                source = path.join(message.rootDir, source)\n                destination = path.join(message.rootDir, destination)\n            }\n\n        }\n\n        logger.debug(`Source: ${source}`)\n        logger.debug(`Destination: ${destination}`)\n\n        try {\n            await this.ensureDirectoryExists(path.dirname(destination))\n            const sourceStat = await stat(source)\n\n            if (sourceStat.isFile()) {\n                logger.debug(`Copying file from ${source} to ${destination}`)\n                await copyFile(source, destination)\n            } else if (sourceStat.isDirectory()) {\n                logger.debug(`Copying directory from ${source} to ${destination}`)\n                await this.copyDirectory(source, destination)\n            }\n        } catch (err) {\n            logger.error(`Error in FileCopy: ${err.message}`)\n            logger.error(`Source: ${source}`)\n            logger.error(`Destination: ${destination}`)\n        }\n\n        return this.emit('message', message)\n    }\n\n    /**\n     * Ensures the specified directory exists, creating it if necessary\n     * @param {string} dirPath - The directory path to ensure\n     */\n    async ensureDirectoryExists(dirPath) {\n        logger.debug(`Ensuring directory exists: ${dirPath}`)\n        try {\n            await mkdir(dirPath, { recursive: true })\n            logger.debug(`Directory created/ensured: ${dirPath}`)\n        } catch (err) {\n            logger.debug(`Error creating directory ${dirPath}: ${err.message}`)\n            throw err\n        }\n    }\n\n    /**\n     * Recursively copies a directory and its contents\n     * @param {string} source - The source directory path\n     * @param {string} destination - The destination directory path\n     */\n    async copyDirectory(source, destination) {\n        logger.debug(`Copying directory: ${source} to ${destination}`)\n        try {\n            await this.ensureDirectoryExists(destination)\n            const entries = await readdir(source, { withFileTypes: true })\n\n            for (const entry of entries) {\n                const srcPath = path.join(source, entry.name)\n                const destPath = path.join(destination, entry.name)\n\n                logger.debug(`Processing: ${srcPath} to ${destPath}`)\n\n                if (entry.isDirectory()) {\n                    await this.copyDirectory(srcPath, destPath)\n                } else {\n                    await copyFile(srcPath, destPath)\n                    logger.debug(`File copied: ${srcPath} to ${destPath}`)\n                }\n            }\n        } catch (err) {\n            logger.debug(`Error in copyDirectory: ${err.message}`)\n            throw err\n        }\n    }\n}\n\nexport default FileCopy",
      "import { readFile } from 'node:fs/promises';\nimport { access, constants, statSync } from 'node:fs';\nimport path from 'path';\nimport mime from 'node-mime-types'\nimport logger from '../../utils/Logger.js';\nimport ns from '../../utils/ns.js';\nimport Processor from '../base/Processor.js';\n\nclass FileReader extends Processor {\n    constructor(config) {\n        super(config);\n    }\n\n    getFileMetadata(filePath) {\n        try {\n            const stats = statSync(filePath);\n            const filename = path.basename(filePath)\n            return {\n                filename: filename,\n                mediaType: mime.getMIMEType(filename),\n                filepath: filePath,\n                size: stats.size,\n                created: stats.birthtime,\n                modified: stats.mtime,\n                accessed: stats.atime,\n                isDirectory: stats.isDirectory(),\n                isFile: stats.isFile(),\n                permissions: stats.mode,\n                owner: stats.uid,\n                group: stats.gid\n            };\n        } catch (error) {\n            logger.error(`Error getting file metadata: ${error.message}`);\n            return null;\n        }\n    }\n\n    async process(message) {\n        logger.log(`FileReader.process, done=${message.done}`)\n\n        if (message.done) return this.emit('message', message);\n\n        let filePath;\n\n        // First try deriving path from message properties\n        if (message.fullPath) {\n            filePath = message.fullPath;\n        } else if (message.filepath) {\n            if (message.targetPath && !path.isAbsolute(message.filepath)) {\n                filePath = path.join(message.targetPath, message.filepath);\n            } else {\n                filePath = message.filepath;\n            }\n        } else {\n            // Fall back to getting path from config\n            filePath = this.getProperty(ns.trn.sourceFile);\n            if (!filePath) {\n                throw new Error('No file path provided in message or config');\n            }\n\n            // Resolve relative to targetPath or rootDir\n            if (!path.isAbsolute(filePath)) {\n                filePath = path.join(message.targetPath || message.rootDir, filePath);\n            }\n        }\n\n        logger.debug(`FileReader.process(), reading file: ${filePath}`);\n        logger.debug(`FileReader.process(), process.cwd() = ${process.cwd()}`);\n\n        // Verify file is readable\n        await new Promise((resolve, reject) => {\n            access(filePath, constants.R_OK, (err) => {\n                if (err) {\n                    reject(new Error(`File ${filePath} is not readable: ${err.message}`));\n                }\n                resolve();\n            });\n        });\n\n        // Handle metadata if requested\n        const metaField = this.getProperty(ns.trn.metaField);\n        if (metaField) {\n            const metadata = this.getFileMetadata(filePath);\n            message[metaField] = metadata;\n        }\n\n        // Read and return file content\n        const content = await readFile(filePath, 'utf8');\n        message.content = content;\n\n        logger.debug(`FileReader successfully read file: ${filePath}`);\n        return this.emit('message', message);\n    }\n}\n\nexport default FileReader;",
      "// src/processors/fs/FileRemove.js\n/**\n * FileRemove Processor\n *\n * Removes files or directory contents on the local filesystem.\n * @extends Processor\n *\n * #### __*Input*__\n * * message.applicationRootDir (optional) - The root directory of the application\n * * message.target (if no settings) - The path of the file or directory to remove\n *\n * #### __*Configuration*__\n * If a settings is provided in the transmission:\n * * ns.trn.target - The target path relative to applicationRootDir\n *\n * #### __*Output*__\n * * Removes the specified file or directory contents\n * * message (unmodified) - The input message is passed through\n *\n * #### __*Behavior*__\n * * Removes individual files directly\n * * Recursively removes directory contents\n * * Logs debug information about the removal process\n *\n * #### __Tests__\n * `./run file-copy-remove-test`\n * `npm test -- tests/integration/file-copy-remove-test.spec.js`\n *\n */\n\nimport { unlink, readdir, stat, rm } from 'node:fs/promises'\nimport path from 'path'\nimport ns from '../../utils/ns.js'\nimport logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass FileRemove extends Processor {\n    constructor(config) {\n        super(config)\n    }\n\n    /**\n     * Executes the file or directory removal operation\n     * @param {Object} message - The input message\n     */\n    async process(message) {\n\n        //  logger.setLogLevel('debug')\n\n        this.ignoreDotfiles = true // default, simplify \".gitinclude\"\n\n        var target\n\n        // TODO add check for  ignoreDotfiles = false\n\n        // Determine target path\n        if (this.settings === 'undefined') {\n            logger.debug('FileRemove no settings from transmission, using message.target')\n            target = message.target\n        } else {\n            logger.debug('FileRemove this.settings = ' + this.settings.value)\n            target = this.getProperty(ns.trn.target)\n            //       target = this.getPropertyFromMyConfig(ns.trn.target)\n            target = path.join(message.rootDir, target)\n        }\n\n        logger.debug('FileRemove, target = ' + target)\n        try {\n            const removeStat = await stat(target)\n\n            if (removeStat.isFile()) {\n                await this.removeFile(target)\n            } else if (removeStat.isDirectory()) {\n                await this.removeDirectoryContents(target)\n            }\n        } catch (err) {\n            // probably already gone\n            logger.debug('FileRemove, target stat caused err : ' + target)\n        }\n\n        return this.emit('message', message)\n    }\n\n    /**\n     * Removes a file\n     * @param {string} filePath - The path to the file to remove\n     */\n    async removeFile(filePath) {\n        await unlink(filePath)\n    }\n\n    /**\n     * Recursively removes the contents of a directory\n     * @param {string} dirPath - The path to the directory\n     */\n    async removeDirectoryContents(dirPath) {\n        logger.debug('FileRemove, dirPath = ' + dirPath)\n        const entries = await readdir(dirPath, { withFileTypes: true })\n\n        for (const entry of entries) {\n            if (this.ignoreDotfiles && (entry.name.charAt(0) === \".\")) {\n                continue\n            }\n            const entryPath = path.join(dirPath, entry.name)\n\n            if (entry.isDirectory()) {\n                await this.removeDirectoryContents(entryPath)\n            } else {\n                await unlink(entryPath)\n            }\n        }\n    }\n}\n\nexport default FileRemove",
      "import path from 'path'\nimport { access, constants } from 'node:fs'\nimport ns from '../../utils/ns.js'\nimport { writeFile } from 'node:fs/promises'\nimport { dirname, join } from 'node:path'\nimport { mkdir, mkdirSync } from 'node:fs'\nimport logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n/**\n * FileWriter class that extends Processor\n * Write data to a file.\n *\n * First checks `message.targetFilepath` and if not set, uses the value from `processors.ttl` using `settings` for this processor instance.\n *\n * #### __*Input*__\n * * message.filepath\n * * message.content\n * #### __*Output*__\n * * as Input\n *\n * if message.loadContext is set, that is used as a name in the message for the file content\n */\nclass FileWriter extends Processor {\n\n    /**\n     * Constructs a new FileWriter object.\n     * @param {Object} config - The configuration object for the FileWriter.\n     */\n    constructor(config) {\n        super(config)\n    }\n\n    /**\n     * Executes the write operation.\n     * @param {Object} message - The execution message.\n     */\n    async process(message) {\n        logger.setLogLevel('debug')\n        logger.debug(`\\n\\nFileWriter.process, message.done = ${message.done}`)\n        if (message.done) {\n            //   message.done = false\n            return this.emit('message', message)\n        }\n\n        if (message.dump) {\n            // TODO make optional (on done?) - is a pain for multi\n            //    const filename = `message_${new Date().toISOString()}.json`\n            const filename = 'message.json'\n            const f = path.join(message.dataDir, filename)\n            const content = JSON.stringify(message)\n            // Check if the file is readable.\n            access(f, constants.W_OK, (err) => {\n                if (err) {\n                    logger.error(`FileWriter error : ${f} is not writable.`)\n                    logger.reveal(message)\n                }\n            })\n            return this.doWrite(f, content, message)\n        }\n\n        logger.debug(\"Filewriter, message.filepath = \" + message.filepath)\n\n        var destinationFile = this.getProperty(ns.trn.destinationFile)\n        var filepath = message.filepath\n        if (message.subdir) {\n            filepath = path.join(message.subdir, filepath)\n        }\n        //path.join(message.sourceDir, message.filepath)\n        logger.debug(`Filewriter, 1 filepath = ${filepath}`)\n        //   logger.reveal(filePath)\n\n        if (!destinationFile) { // TODO fix, do other cases, refactor\n            var targetDir = message.targetDir ?\n                message.targetDir : this.getProperty(ns.trn.targetDir)\n            targetDir = targetDir ? targetDir : '.'\n\n            filepath = path.join(targetDir, filepath)\n        }\n\n        if (!path.isAbsolute(filepath)) {\n            filepath = path.join(message.targetPath, filepath)\n        }\n\n        logger.debug(`Filewriter, filepath = ${filepath}`)\n        const dirName = dirname(filepath)\n        logger.debug(\"Filewriter, dirName = \" + dirName)\n\n        /*\n                var contentPath = this.getPropertyFromMyConfig(ns.trn.contentPath)\n\n                if (typeof contentPath === 'undefined' || contentPath === 'undefined' || contentPath.value === 'undefined') {\n                    contentPath = 'content'\n                }\n\n                // logger.debug(\"Filewriter, contentPath = \" + contentPath)\n                var content = message[contentPath.toString()] // TODO generalise.it\n                if (typeof content === 'object') {\n                    content = JSON.stringify(content)\n                }\n        */\n        var content = message.content // TODO generalise, see above\n        //   logger.debug(\"Filewriter, content = \" + content)\n        // logger.debug(\"Filewriter, typeof content = \" + typeof content)\n\n        this.mkdirs(dirName) // sync - see below\n\n        return await this.doWrite(filepath, content, message)\n    }\n\n    async doWrite(f, content, message) {\n        logger.log(' - FileWriter writing : ' + f)\n        await writeFile(f, content)\n        return this.emit('message', message)\n    }\n\n    mkdirs(dir) {\n        mkdirSync(dir, { recursive: true })\n        /*\n                mkdir(dir, { recursive: true }, (error) => {\n                    logger.log('EEEEEEEEEEEEEEEEEK!' + error)\n                })\n           */\n    }\n}\n\nexport default FileWriter\n",
      "import Processor from '../base/Processor.js';\nimport path from 'path';\nimport logger from '../../utils/Logger.js';\n\nclass FilenameMapper extends Processor {\n    constructor(config) {\n        super(config);\n        this.extensions = {\n            html: '.mm.html',\n            svg: '.mm.svg'\n        };\n    }\n\n    async process(message) {\n        const format = message.format || 'html';\n        const extension = this.extensions[format];\n\n        if (!extension) {\n            throw new Error(`Unknown format: ${format}`);\n        }\n\n        const parsedPath = path.parse(message.filepath);\n        message.filepath = path.join(\n            parsedPath.dir,\n            parsedPath.name + extension\n        );\n\n        return this.emit('message', message);\n    }\n}\n\nexport default FilenameMapper;\n",
      "import logger from '../../utils/Logger.js'\nimport ns from '../../utils/ns.js'\n\nimport DirWalker from './DirWalker.js'\nimport FileReader from './FileReader.js'\nimport FileWriter from './FileWriter.js'\nimport FileCopy from './FileCopy.js'\nimport FileRemove from './FileRemove.js'\nimport FilenameMapper from './FilenameMapper.js'\n\nclass FsProcessorsFactory {\n    static createProcessor(type, config) {\n        if (type.equals(ns.trn.DirWalker)) {\n            return new DirWalker(config)\n        }\n        if (type.equals(ns.trn.FileReader)) {\n            return new FileReader(config)\n        }\n        if (type.equals(ns.trn.FileWriter)) {\n            return new FileWriter(config)\n        }\n        if (type.equals(ns.trn.FileCopy)) {\n            return new FileCopy(config)\n        }\n        if (type.equals(ns.trn.FileRemove)) {\n            return new FileRemove(config)\n        }\n        if (type.equals(ns.trn.FilenameMapper)) {\n            return new FilenameMapper(config)\n        }\n        return false\n    }\n}\n\nexport default FsProcessorsFactory",
      "import { Octokit } from '@octokit/rest'\nimport dotenv from 'dotenv'\nimport Processor from '../../../../transmissions/src/processors/base/Processor.js'\nimport logger from '../../../../transmissions/src/utils/Logger.js'\n\ndotenv.config({ path: './trans-apps/applications/git-apps/.env' })\n\nclass GitHubList extends Processor {\n    constructor(config) {\n        super(config)\n        logger.debug('GitHubList constructor called')\n        this.octokit = new Octokit({ auth: process.env.GITHUB_TOKEN })\n        logger.debug('Octokit instance created')\n    }\n\n    async process(message) {\n        //    logger.setLogLevel('debug')\n        logger.debug('GitHubList process method called')\n\n        try {\n            // Initialize payload.github if missing\n            if (!message.payload) {\n                message.payload = {}\n            }\n            if (!message.payload.github) {\n                message.payload.github = {}\n            }\n\n            //     const username = message.payload.github.name\n            const username = message.github.name\n            logger.debug(`Processing for username: ${username}`)\n\n            logger.debug('Calling GitHub API with pagination')\n            logger.info(`Starting repository fetch for ${username}`)\n\n            const repositories = await this.fetchAllRepositories(username)\n            logger.debug(`Setting ${repositories.length} repositories in payload`)\n\n            // Set in payload, not message.github\n            message.payload.github.repositories = repositories\n            message.payload.github.totalRepos = repositories.length\n\n            return this.emit('message', message)\n        } catch (error) {\n            this.handleError(error, username)\n        }\n    }\n\n    async fetchAllRepositories(username) {\n        const repositories = []\n        let page = 1\n        const delay = ms => new Promise(resolve => setTimeout(resolve, ms))\n\n        /*\n        while (true) {\n            try {\n                const response = await this.octokit.repos.listForUser({\n                    username,\n                    per_page: 100,\n                    page: page\n                })\n\n                repositories.push(...response.data.map(repo => repo.name))\n                logger.debug(`Fetched page ${page} with ${response.data.length} repositories`)\n\n                this.checkRateLimit(response.headers)\n\n                if (response.data.length < 100) break\n                page++\n\n                await delay(1000) // 1 second delay between API calls\n            } catch (error) {\n                throw this.createDetailedError(error, 'Error fetching repositories page')\n            }\n        }\n            */\n\n        while (true) {\n            const response = await this.octokit.repos.listForUser({\n                username,\n                per_page: 100,\n                page\n            })\n\n            let data = response.data\n            //  data = data.slice(0, 3) // Limit to first 3 repos\n\n            logger.debug(`Page ${page}: Got ${data.length} repos`)\n\n            repositories.push(...data.map(repo => repo.name))\n\n            if (data.length < 100) break\n            page++\n\n            // Add delay between requests\n            await new Promise(r => setTimeout(r, 5000))\n        }\n\n        logger.debug(`Total repositories found: ${repositories.length}`)\n\n        return repositories\n    }\n\n    checkRateLimit(headers) {\n        const remaining = headers['x-ratelimit-remaining']\n        const resetTime = new Date(headers['x-ratelimit-reset'] * 1000)\n        logger.info(`Rate limit remaining: ${remaining}, Reset time: ${resetTime}`)\n\n        if (remaining < 10) {\n            logger.warn(`Rate limit is low. Only ${remaining} requests left. Reset at ${resetTime}`)\n        }\n    }\n\n    createDetailedError(error, message) {\n        const detailedError = new Error(`${message}: ${error.message}`)\n        detailedError.status = error.status\n        detailedError.response = error.response\n        return detailedError\n    }\n\n    handleError(error, username) {\n        logger.error(`Error fetching repositories for ${username}:`, error.message)\n        logger.debug('Error details:', JSON.stringify(error, null, 2))\n\n        if (error.status === 403) {\n            logger.warn('Rate limit exceeded. Check GitHub API rate limits.')\n            throw new Error('GitHub API rate limit exceeded')\n        } else if (error.status === 404) {\n            logger.warn(`User ${username} not found on GitHub`)\n            throw new Error(`GitHub user ${username} not found`)\n        } else {\n            throw new Error(`Failed to fetch GitHub repositories: ${error.message}`)\n        }\n    }\n}\n\nexport default GitHubList",
      "import { Octokit } from '@octokit/rest'\nimport dotenv from 'dotenv'\nimport Processor from '../base/Processor.js'\nimport logger from '../../utils/Logger.js'\n\ndotenv.config({ path: './trans-apps/applications/git-apps/.env' })\n\nclass GitHubList extends Processor {\n    constructor(config) {\n        super(config)\n        logger.debug('GitHubList constructor called')\n        this.octokit = new Octokit({ auth: process.env.GITHUB_TOKEN })\n        logger.debug('Octokit instance created')\n    }\n\n    async process(message) {\n        logger.debug('GitHubList execute method called')\n        logger.debug('Input message:', JSON.stringify(message, null, 2))\n\n        if (!message.github || !message.github.name) {\n            logger.error('GitHub username not provided in the message')\n            throw new Error('GitHub username not provided in the message')\n        }\n\n        const username = message.github.name\n        logger.debug(`Fetching repositories for username: ${username}`)\n\n        try {\n            logger.debug('Calling GitHub API')\n            const { data } = await this.octokit.repos.listForUser({ username })\n            logger.debug(`Fetched ${data.length} repositories`)\n\n            const repositories = data.map(repo => repo.name)\n            logger.debug('Extracted repository names:' + repositories)\n\n            message.github.repositories = repositories\n            logger.debug('Updated message:', JSON.stringify(message, null, 2))\n\n            this.emit('message', message)\n            logger.debug('Emitted updated message')\n        } catch (error) {\n            logger.error(`Error fetching repositories for ${username}:`, error)\n            logger.debug('Error details:', JSON.stringify(error, null, 2))\n            if (error.status === 403) {\n                logger.warn('Possible rate limit exceeded. Check GitHub API rate limits.')\n            }\n            throw error\n        }\n    }\n}\n\nexport default GitHubList",
      "// GitHubProcessorsFactory.js\nimport logger from '../../../../transmissions/src/utils/Logger.js';\nimport ns from '../../../../transmissions/src/utils/ns.js';\nimport GitHubList from './GitHubList.js';\n\nclass GitHubProcessorsFactory {\n    static createProcessor(type, config) {\n        if (type.equals(ns.trn.GitHubList)) {\n            return new GitHubList(config);\n        }\n        return false;\n    }\n}\n\nexport default GitHubProcessorsFactory;",
      "import logger from '../../utils/Logger.js' // path will likely change\nimport Processor from '../base/Processor.js' // maybe more specific\n\n/**\n * FileReader class that extends xxxxxProcessor.\n * DESCRIPTION\n * #### __*Input*__\n * **message.INPUT**\n * #### __*Output*__\n * **message.OUTPUT**\n */\nclass HttpClient extends Processor {\n\n    /**\n     * Constructs a new ProcessorExample instance.\n     * @param {Object} config - The configuration object.\n     */\n    constructor(config) {\n        super(config)\n    }\n\n    /**\n     * Does something with the message and emits a 'message' event with the processed message.\n     * @param {Object} message - The message object.\n     */\n    async process(message) {\n        //   logger.setLogLevel('debug')\n\n        // processing goes here\n        return this.emit('message', message)\n    }\n}\n\nexport default HttpClient",
      "//import logger from '../../utils/Logger.js'\nimport ns from '../../utils/ns.js'\n\nimport HttpServer from './HttpServer.js'\nimport HttpClient from './HttpClient.js'\nimport HttpProxy from './HttpProxy.js'\n\nclass HttpProcessorsFactory {\n    static createProcessor(type, config) {\n\n        if (type.equals(ns.trn.HttpServer)) {\n            return new HttpServer(config)\n        }\n        if (type.equals(ns.trn.HttpClient)) {\n            return new HttpClient(config)\n        }\n        if (type.equals(ns.trn.HttpProxy)) {\n            return new HttpProxy(config)\n        }\n\n        return false\n    }\n}\nexport default HttpProcessorsFactory",
      "import logger from '../../utils/Logger.js' // path will likely change\nimport Processor from '../base/Processor.js' // maybe more specific\n\n/**\n * FileReader class that extends xxxxxProcessor.\n * DESCRIPTION\n * #### __*Input*__\n * **message.INPUT**\n * #### __*Output*__\n * **message.OUTPUT**\n */\nclass HttpProxy extends Processor {\n\n    /**\n     * Constructs a new ProcessorExample instance.\n     * @param {Object} config - The configuration object.\n     */\n    constructor(config) {\n        super(config)\n    }\n\n    /**\n     * Does something with the message and emits a 'message' event with the processed message.\n     * @param {Object} message - The message object.\n     */\n    async process(message) {\n        //    logger.setLogLevel('debug')\n\n        // processing goes here\n        return this.emit('message', message)\n    }\n}\n\nexport default HttpProxy",
      "import path from 'path';\nimport { Worker } from 'worker_threads';\nimport logger from '../../utils/Logger.js';\nimport Processor from '../base/Processor.js';\nimport ns from '../../utils/ns.js';\n\nclass HttpServer extends Processor {\n    constructor(config) {\n        super(config);\n        this.worker = null;\n        this.serverConfig = {\n            port: this.getPropertyFromMyConfig(ns.trn.port) || 4000,\n            basePath: this.getPropertyFromMyConfig(ns.trn.basePath) || '/transmissions/test/',\n            staticPath: this.getPropertyFromMyConfig(ns.trn.staticPath),\n            cors: this.getPropertyFromMyConfig(ns.trn.cors) || false,\n            timeout: this.getPropertyFromMyConfig(ns.trn.timeout) || 30000,\n            maxRequestSize: this.getPropertyFromMyConfig(ns.trn.maxRequestSize) || '1mb',\n            rateLimit: {\n                windowMs: 15 * 60 * 1000,\n                max: 100\n            }\n        };\n    }\n\n    async process(message) {\n        try {\n            this.worker = new Worker(\n                path.join(process.cwd(), 'src/processors/http/HttpServerWorker.js')\n            );\n\n            this.worker.on('message', (msg) => {\n                switch (msg.type) {\n                    case 'status':\n                        if (msg.status === 'running') {\n                            logger.info(`Server running on port ${msg.port}`);\n                        } else if (msg.status === 'stopped') {\n                            this.emit('message', { ...message, serverStopped: true });\n                        }\n                        break;\n                    case 'error':\n                        logger.error(`Server error: ${msg.error}`);\n                        this.emit('error', new Error(msg.error));\n                        break;\n                }\n            });\n\n            this.worker.on('error', (error) => {\n                logger.error(`Worker error: ${error}`);\n                this.emit('error', error);\n            });\n\n            this.worker.postMessage({\n                type: 'start',\n                config: this.serverConfig\n            });\n\n            return new Promise((resolve) => {\n                this.worker.on('exit', () => {\n                    resolve(message);\n                });\n            });\n\n        } catch (error) {\n            logger.error(`Failed to start server: ${error}`);\n            throw error;\n        }\n    }\n\n    async shutdown() {\n        if (this.worker) {\n            this.worker.postMessage({ type: 'stop' });\n        }\n    }\n}\n\nexport default HttpServer;",
      "import { parentPort } from 'worker_threads';\nimport express from 'express';\nimport path from 'path';\nimport logger from '../../utils/Logger.js';\n\nclass ServerWorker {\n    constructor(config) {\n        this.app = express();\n        this.server = null;\n        this.config = config;\n        this.setupMessageHandling();\n    }\n\n    setupMessageHandling() {\n        parentPort.on('message', (message) => {\n            switch (message.type) {\n                case 'start':\n                    this.start(message.config);\n                    break;\n                case 'stop':\n                    this.stop();\n                    break;\n                default:\n                    logger.warn(`Unknown message type: ${message.type}`);\n            }\n        });\n    }\n\n    async start(config) {\n        try {\n            const { port = 4000, basePath = '/transmissions/test/', staticPath } = config;\n\n            if (staticPath) {\n                this.app.use(basePath, express.static(staticPath));\n            }\n\n            this.app.post('/shutdown', (req, res) => {\n                res.send('Server shutting down...');\n                this.stop();\n            });\n\n            this.server = this.app.listen(port, () => {\n                parentPort.postMessage({\n                    type: 'status',\n                    status: 'running',\n                    port: port\n                });\n            });\n\n        } catch (error) {\n            parentPort.postMessage({\n                type: 'error',\n                error: error.message\n            });\n        }\n    }\n\n    async stop() {\n        if (this.server) {\n            try {\n                await new Promise((resolve, reject) => {\n                    this.server.close((err) => {\n                        if (err) reject(err);\n                        resolve();\n                    });\n                });\n\n                parentPort.postMessage({\n                    type: 'status',\n                    status: 'stopped'\n                });\n\n                process.exit(0);\n            } catch (error) {\n                parentPort.postMessage({\n                    type: 'error',\n                    error: error.message\n                });\n                process.exit(1);\n            }\n        }\n    }\n}\n\nconst worker = new ServerWorker();",
      "import WebSocket from 'ws';\nimport os from 'os';\n\nclass MetricsService {\n    constructor(server) {\n        this.wss = new WebSocket.Server({ server });\n        this.metrics = {\n            startTime: Date.now(),\n            requests: 0,\n            connections: 0,\n            memory: {},\n            cpu: {}\n        };\n        this.setupWebSocket();\n        this.startMetricsCollection();\n    }\n\n    setupWebSocket() {\n        this.wss.on('connection', (ws) => {\n            this.metrics.connections++;\n            ws.on('close', () => this.metrics.connections--);\n        });\n    }\n\n    startMetricsCollection() {\n        setInterval(() => {\n            this.updateMetrics();\n            this.broadcastMetrics();\n        }, 1000);\n    }\n\n    updateMetrics() {\n        this.metrics.uptime = (Date.now() - this.metrics.startTime) / 1000;\n        this.metrics.memory = {\n            used: process.memoryUsage().heapUsed,\n            total: os.totalmem(),\n            free: os.freemem()\n        };\n        this.metrics.cpu = {\n            load: os.loadavg(),\n            cores: os.cpus().length\n        };\n    }\n\n    broadcastMetrics() {\n        const data = JSON.stringify(this.metrics);\n        this.wss.clients.forEach(client => {\n            if (client.readyState === WebSocket.OPEN) {\n                client.send(data);\n            }\n        });\n    }\n\n    incrementRequests() {\n        this.metrics.requests++;\n    }\n}\n\nexport default MetricsService;",
      "import jwt from 'jsonwebtoken';\nimport crypto from 'crypto';\n\nclass ShutdownService {\n    constructor() {\n        this.secret = crypto.randomBytes(32).toString('hex');\n        this.token = this.generateToken();\n    }\n\n    generateToken() {\n        return jwt.sign({ action: 'shutdown' }, this.secret, { expiresIn: '1h' });\n    }\n\n    setupMiddleware(app) {\n        app.use('/admin', (req, res, next) => {\n            const token = req.headers.authorization?.split(' ')[1];\n            if (!token) {\n                res.status(401).send('No token provided');\n                return;\n            }\n            try {\n                jwt.verify(token, this.secret);\n                next();\n            } catch (err) {\n                res.status(403).send('Invalid token');\n            }\n        });\n    }\n\n    setupEndpoints(app, shutdownCallback) {\n        app.get('/admin/token', (req, res) => {\n            res.json({ token: this.generateToken() });\n        });\n\n        app.post('/admin/shutdown', (req, res) => {\n            res.send('Shutdown initiated');\n            shutdownCallback();\n        });\n    }\n}\n\nexport default ShutdownService;",
      "import crypto from 'crypto';\n\nclass ShutdownService {\n    constructor() {\n        // Generate random credentials on startup\n        this.username = crypto.randomBytes(16).toString('hex');\n        this.password = crypto.randomBytes(32).toString('hex');\n    }\n\n    setupMiddleware(app) {\n        app.use('/admin', (req, res, next) => {\n            const authHeader = req.headers.authorization;\n            if (!this.validateAuth(authHeader)) {\n                res.setHeader('WWW-Authenticate', 'Basic');\n                return res.status(401).send('Authentication required');\n            }\n            next();\n        });\n    }\n\n    validateAuth(authHeader) {\n        if (!authHeader || !authHeader.startsWith('Basic ')) {\n            return false;\n        }\n        const base64Credentials = authHeader.split(' ')[1];\n        const credentials = Buffer.from(base64Credentials, 'base64').toString('utf-8');\n        const [username, password] = credentials.split(':');\n\n        return username === this.username && password === this.password;\n    }\n\n    setupEndpoints(app, shutdownCallback) {\n        app.get('/admin/credentials', (req, res) => {\n            res.json({ username: this.username, password: this.password });\n        });\n\n        app.post('/admin/shutdown', (req, res) => {\n            res.send('Shutdown initiated');\n            shutdownCallback();\n        });\n    }\n}\n\nexport default ShutdownService;",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\nimport ns from '../../utils/ns.js'\n\nclass Blanker extends Processor {\n    constructor(config) {\n        super(config)\n        this.blankValue = config.blankValue || ''\n    }\n\n    blankValues(obj) {\n        if (Array.isArray(obj)) {\n            return obj.map(item => this.blankValues(item))\n        } else if (typeof obj === 'object' && obj !== null) {\n            const result = {}\n            for (const [key, value] of Object.entries(obj)) {\n                result[key] = this.blankValues(value)\n            }\n            return result\n        } else if (typeof obj === 'string') {\n            return ''\n        }\n        return obj\n    }\n\n    async process(message) {\n        try {\n            const pointer = this.getPropertyFromMyConfig(ns.trn.pointer)\n\n            if (!pointer) {\n                // Blank entire message if no pointer specified\n                message = this.blankValues(message)\n            } else {\n                // Get the nested object using the pointer\n                const parts = pointer.toString().split('.')\n                let target = message\n\n                // Navigate to the target object\n                for (let i = 0; i < parts.length - 1; i++) {\n                    target = target[parts[i]]\n                    if (!target) break\n                }\n\n                // Blank values in the target object\n                if (target && target[parts[parts.length - 1]]) {\n                    target[parts[parts.length - 1]] =\n                        this.blankValues(target[parts[parts.length - 1]])\n                }\n            }\n\n            return this.emit('message', message)\n        } catch (err) {\n            logger.error(\"Blanker processor error: \" + err.message)\n            throw err\n        }\n    }\n}\n\nexport default Blanker",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\nimport ns from '../../utils/ns.js'\n\nclass Blanker extends Processor {\n    constructor(config) {\n        super(config)\n        //    logger.setLogLevel('debug')\n        logger.debug(config.blankValue)\n        this.blankValue = config.blankValue || ''\n    }\n\n    async process(message) {\n        const pointer = this.getPropertyFromMyConfig(ns.trn.pointer)\n        const preserve = this.getPropertyFromMyConfig(ns.trn.preserve)\n\n        var preservePath = preserve.value ? preserve.value : 'nonono'\n\n        logger.debug(`Blanker.process,  typeof preservePath = ${typeof preservePath}, preservePath = ${preservePath}`)\n        logger.reveal(preservePath)\n        if (!pointer) {\n            if (preservePath) {\n                message = this.blankValues(message, '', preservePath)\n            } else {\n                message = this.blankAllValues(message)\n            }\n        } else {\n            const parts = pointer.toString().split('.')\n            let target = message\n\n            for (let i = 0; i < parts.length - 1; i++) {\n                target = target[parts[i]]\n                if (!target) break\n            }\n\n            if (target && target[parts[parts.length - 1]]) {\n                if (preservePath) {\n                    target[parts[parts.length - 1]] =\n                        this.blankValues(target[parts[parts.length - 1]], parts.join('.'), preservePath)\n                } else {\n                    target[parts[parts.length - 1]] =\n                        this.blankAllValues(target[parts[parts.length - 1]])\n                }\n            }\n        }\n\n        return this.emit('message', message)\n    }\n\n    shouldPreserve(path, preservePath) {\n        logger.debug(`Blanker.shouldPreserve path = ${path}, preservePath = ${preservePath}`)\n        if (!preservePath) return false\n        const pathParts = path.split('.')\n        const preserveParts = preservePath.split('.')\n\n        if (pathParts.length < preserveParts.length) return false\n\n        for (let i = 0; i < preserveParts.length; i++) {\n            if (pathParts[i] !== preserveParts[i]) return false\n        }\n        return true\n    }\n\n    // TODO refactor...can I be arsed?\n    blankAllValues(obj) {\n        if (Array.isArray(obj)) {\n            return obj.map(item => this.blankAllValues(item))\n        } else if (typeof obj === 'object' && obj !== null) {\n            const result = {}\n            for (const [key, value] of Object.entries(obj)) {\n                result[key] = this.blankAllValues(value)\n            }\n            return result\n        } else if (typeof obj === 'string') {\n            return ''\n        }\n        return obj\n    }\n\n    blankValues(obj, currentPath = '', preservePath = '') {\n        if (Array.isArray(obj)) {\n            return obj.map((item, index) =>\n                this.blankValues(item, `${currentPath}[${index}]`, preservePath)\n            )\n        } else if (typeof obj === 'object' && obj !== null) {\n            const result = {}\n            for (const [key, value] of Object.entries(obj)) {\n                const newPath = currentPath ? `${currentPath}.${key}` : key\n                logger.debug(`Blanker.blankValues 1 newPath = ${newPath}, preservePath = ${preservePath}`)\n                if (this.shouldPreserve(newPath, preservePath)) {\n                    result[key] = value\n                } else {\n                    result[key] = this.blankValues(value, newPath, preservePath)\n                }\n            }\n            return result\n        } else if (typeof obj === 'string') {\n            logger.debug(`Blanker.blankValues 2 currentPath = ${currentPath}, preservePath = ${preservePath}`)\n            return this.shouldPreserve(currentPath, preservePath) ? obj : ''\n        }\n        return obj\n    }\n}\n\nexport default Blanker",
      "import logger from '../../utils/Logger.js'\nimport ns from '../../utils/ns.js'\n\nimport JSONWalker from './JSONWalker.js'\nimport Restructure from './Restructure.js'\nimport ValueConcat from './ValueConcat.js'\nimport Blanker from './Blanker.js'\n\nclass JSONProcessorsFactory {\n    static createProcessor(type, config) {\n        if (type.equals(ns.trn.Restructure)) {\n            return new Restructure(config)\n        }\n        if (type.equals(ns.trn.JSONWalker)) {\n            return new JSONWalker(config)\n        }\n        if (type.equals(ns.trn.ValueConcat)) {\n            return new ValueConcat(config)\n        }\n        if (type.equals(ns.trn.Blanker)) {\n            return new Blanker(config)\n        }\n        return false\n    }\n\n}\nexport default JSONProcessorsFactory",
      "// src/processors/json/JSONWalker.js\n/**\n* @class JSONWalker\n* @extends Processor\n* @classdesc\n* **A Transmissions Processor**\n*\n* Walks through a JSON structure and emits messages for each item.\n*\n* ### Processor Signature\n*\n* #### ***Configuration***\n* ***`ns.trn.targetDir`** - Target directory path relative to current working directory\n*\n* #### ***Input***\n* ***`message.payload`** - JSON object to process\n*\n* #### ***Output***\n* * Emits a message for each item in the input payload\n* * Final message has `done: true` flag\n* * Each emitted message contains:\n*   * ***`message.item`** - Current item being processed\n*   * ***`message.payload`** - Empty object (configurable)\n*\n* #### ***Behavior***\n* * Validates input is a JSON object\n* * Creates separate message for each value in payload\n* * Clones messages to prevent cross-contamination\n* * Signals completion with done flag\n*/\n\nimport path from 'path'\nimport logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\nimport ns from '../../utils/ns.js'\n\nclass JSONWalker extends Processor {\n    constructor(config) {\n        super(config)\n    }\n\n    /**\n     * Processes JSON payload by walking its structure and emitting messages\n     * @param {Object} message - Contains payload to process\n     * @throws {Error} If payload is invalid\n     * @emits message - For each item and completion\n     */\n    async process(message) {\n        try {\n            message.done = false\n            var pointer = this.getPropertyFromMyConfig(ns.trn.pointer)\n\n            logger.debug(`JSONWalker pointer =  ${pointer}`)\n\n            const content = structuredClone(message.content)\n            message.content = {} // TODO option in config\n\n            //  for (const item of Object.values(content)) {\n            for (var i = 0; i < content.length; i++) {\n                const newMessage = structuredClone(message)\n                newMessage.content = content[i]\n                this.emit('message', newMessage)\n            }\n\n            var finalMessage = structuredClone(message)\n            finalMessage.content = content[content.length - 1]\n\n            /* this is for values - dict\n            for (const item of Object.values(content)) {\n                const newMessage = structuredClone(message)\n                newMessage.content = {}\n                newMessage.content.items = []\n                newMessage.content.items.push[item]\n                //   message.item = item  // TODO refactor, it's just to grab the last\n                finalMessage = newMessage\n                this.emit('message', newMessage)\n            }\n                */\n\n            finalMessage.done = true\n            this.emit('message', finalMessage)\n        } catch (err) {\n            logger.error(\"JSONWalker.process error: \" + err.message)\n            throw err\n        }\n    }\n}\n\nexport default JSONWalker",
      "// JsonRestructurer.js\n\nimport logger from '../../utils/Logger.js'\n\nclass JsonRestructurer {\n    constructor(mappings) {\n        logger.setLogLevel('info')\n        if (!mappings?.mappings || !Array.isArray(mappings.mappings)) {\n            throw new Error('Invalid mapping structure')\n        }\n        this.mappings = mappings.mappings\n        logger.debug('JsonRestructurer,  this.mappings = ' + this.mappings)\n        //  logger.reveal(this.mappings)\n    }\n\n    getValueByPath(obj, path) {\n        //    logger.debug('JsonRestructurer, path = ' + path)\n        //  logger.debug('JsonRestructurer, OBJECT = ' + obj)\n\n        //        logger.reveal(obj)\n        //      logger.debug('JsonRestructurer, OBJECT = ^^^^')\n\n        //   logger.debug('JsonRestructurer, obj.item.chat_messages = ' + obj.item.chat_messages)\n        try {\n            const sp = path.split('.')\n            logger.debug('JsonRestructurer, sp = ' + sp)\n            const reduced = sp.reduce((acc, part) => acc[part], obj)\n            logger.debug('JsonRestructurer, reduced = ' + reduced)\n            return reduced\n        } catch (e) {\n            logger.warn(`Warning: Path ${path} not found`)\n            return undefined\n        }\n    }\n\n    setValueByPath(obj, path, value) {\n        logger.debug(`JsonRestructurer.setValueByPath, obj = ${obj}, path = ${path}, value = ${value}`)\n        const parts = path.split('.')\n        const last = parts.pop()\n        const target = parts.reduce((acc, part) => {\n            acc[part] = acc[part] || {}\n            return acc[part]\n        }, obj)\n        logger.debug(`JsonRestructurer.setValueByPath, target = ${target}, last = ${last}, value = ${value}`)\n        target[last] = value\n    }\n\n    restructure(inputData) {\n        //   logger.log(`typeof inputData = ${typeof inputData}`)\n        if (typeof inputData === 'string') {\n            try {\n                inputData = JSON.parse(inputData)\n            } catch (e) {\n                throw new Error('Invalid JSON string provided')\n            }\n        }\n        // logger.reveal(inputData)\n        //  process.exit(0)\n        const result = {}\n        this.mappings.forEach(({ pre, post }) => {\n            //   logger.log(`PRE = ${pre}, POST = ${post}`)\n            const value = this.getValueByPath(inputData, pre)\n            // logger.log(`PRE = ${pre}, POST = ${post} value = ${value}`)\n            if (value !== undefined) {\n                this.setValueByPath(result, post, value)\n            }\n        })\n        //    logger.log('RESULT%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%55')\n        //  logger.reveal(result)\n        // logger.log('RESULT ^^^^')\n        return result\n    }\n}\nexport default JsonRestructurer",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\nimport JsonRestructurer from './JsonRestructurer.js'\nimport ns from '../../utils/ns.js'\nimport GrapoiHelpers from '../../utils/GrapoiHelpers.js'\nimport rdf from 'rdf-ext'\n\nclass Restructure extends Processor {\n    constructor(config) {\n        super(config)\n    }\n\n    async getRenames(config, settings, term) {\n        //logger.log(`***** config = ${config}`)\n        //logger.log(`***** settings = ${settings}`)\n        //logger.log(`***** term = ${term}`)\n        const renamesRDF = GrapoiHelpers.listToArray(config, settings, term)\n        const dataset = this.config\n        var renames = []\n        for (let i = 0; i < renamesRDF.length; i++) {\n            let rename = renamesRDF[i]\n            let poi = rdf.grapoi({ dataset: dataset, term: rename })\n            let pre = poi.out(ns.trn.pre).value\n            let post = poi.out(ns.trn.post).value\n            renames.push({ \"pre\": pre, \"post\": post })\n        }\n        return renames\n    }\n\n    async process(message) {\n        logger.setLogLevel('info')\n        //  logger.debug('Restructure this.settings = ' + this.settings.value)\n        // Extract mappings array from config\n        var renames\n        if (this.config.simples) {\n            renames = this.config.rename\n        } else {\n            renames = await this.getRenames(this.config, this.settings, ns.trn.rename)\n        }\n\n        //  logger.log('Renames :')\n        // logger.reveal(renames)\n\n        // Initialize JsonRestructurer with mappings\n        this.restructurer = new JsonRestructurer({\n            mappings: renames\n        })\n        try {\n            logger.debug('Restructure processor executing...')\n\n            // Get input data from message\n            // const input = message.payload?.item || message.payload\n            const input = structuredClone(message)\n\n            // Perform restructuring\n            const restructured = this.restructurer.restructure(input)\n\n            const type = typeof restructured\n            //   logger.debug(`typeof restructured = ${type}`) // is object... TODO need different handling for returned arrays?\n            // logger.debug(`restructured = ${restructured}`)\n            //    logger.reveal(restructured)\n\n            for (const key of Object.keys(restructured)) {\n                message[key] = restructured[key]\n            }\n\n\n            logger.debug('Restructure successful')\n            return this.emit('message', message)\n\n        } catch (err) {\n            logger.error(\"Restructure processor error: \" + err.message)\n            logger.reveal(message)\n            throw err\n        }\n    }\n}\n\nexport default Restructure",
      "import logger from '../../utils/Logger.js'\nimport rdf from 'rdf-ext'\nimport ns from '../../utils/ns.js'\nimport GrapoiHelpers from '../../utils/GrapoiHelpers.js'\nimport Processor from '../base/Processor.js'\n\nclass ValueConcat extends Processor {\n\n    constructor(config) {\n        super(config)\n        logger.log('CREATING VALUECONCAT')\n    }\n\n}\nexport default ValueConcat",
      "import * as cheerio from 'cheerio'\n\nimport logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass LinkFinder extends Processor {\n\n    async process(message) {\n\n        await this.extractLinks(message)\n\n        if (data === '~~done~~') {\n            logger.log('LF DONE*****************')\n            return this.emitLocal('message', '~~done~~', message)\n            return\n        }\n    }\n\n\n    relocate(filename, extension) {\n        const split = filename.split('.').slice(0, -1)\n        return split.join('.') + extension\n    }\n\n    async extractLinks(htmlContent, message) {\n\n        const $ = cheerio.load(htmlContent)\n        let label = ''\n\n        $('a, h1, h2, h3, h4, h5, h6').each((_, element) => {\n            const tagName = element.tagName.toLowerCase()\n            if (tagName.startsWith('h')) {\n                const level = tagName.substring(1)\n                const headerText = $(element).text()\n                label = `\\n\\n${'#'.repeat(parseInt(level))} ${headerText}\\n`\n            } else if (tagName === 'a') {\n                const linkText = $(element).text()\n                //  logger.debug('linkText = ' + linkText)\n                let href = $(element).attr('href')\n                // logger.debug('href = ' + href)\n                if (!href || href.startsWith('#')) return\n                // Create an absolute URL if the href is relative\n                if (href && !href.includes('://')) {\n                    //  logger.debug('message.sourceURL = ' + message.sourceURL)\n                    const baseURL = message.sourceURL\n                    //  logger.debug('this.baseUrl = ' + baseURL)\n                    href = new URL(href, baseURL).toString()\n                }\n                label = `\\n[${linkText}](${href})`\n\n            }\n            message.label = label\n            return this.emit('message', message)\n        })\n    }\n}\n\nexport default LinkFinder",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n// import { parse } from 'marked'\nimport { marked } from 'marked'\n\n// marked extensions\nimport markedFootnote from 'marked-footnote'\nimport markedCodeFormat from 'marked-code-format'\n// import customHeadingId from \"marked-custom-heading-id\";\n\nclass MarkdownToHTML extends Processor {\n\n\n    async process(message) {\n        logger.debug(`\\n\\nMarkdownToHTML.process`)\n        logger.reveal(message)\n        var input\n        if (message.contentBlocks) { // using templating\n            input = message.contentBlocks.content\n        } else { // default\n            input = message.content\n        }\n\n\n        // new Marked()\n        message.content = await\n            marked\n                //                .use(customHeadingId())\n                .use(markedFootnote())\n                .use(\n                    markedCodeFormat({\n                        /* Prettier options */\n                    })\n                )\n                .parse(input.toString())\n\n        return this.emit('message', message)\n    }\n}\n\nexport default MarkdownToHTML",
      "import logger from '../../utils/Logger.js'\nimport ns from '../../utils/ns.js'\n\nimport MetadataExtractor from './MetadataExtractor.js'\nimport LinkFinder from './LinkFinder.js'\nimport MarkdownToHTML from './MarkdownToHTML.js'\n\nclass MarkupProcessorsFactory {\n    static createProcessor(type, config) {\n        if (type.equals(ns.trn.MetadataExtractor)) {\n            return new MetadataExtractor(config)\n        }\n        if (type.equals(ns.trn.MarkdownToHTML)) {\n            return new MarkdownToHTML(config)\n        }\n        if (type.equals(ns.trn.LinkFinder)) {\n            return new LinkFinder(config)\n        }\n        return false\n    }\n}\n\nexport default MarkupProcessorsFactory",
      "import * as cheerio from 'cheerio'\n\nimport logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass MetadataExtractor extends Processor {\n\n    async process(message) {\n        const filename = data.filename\n        const content = data.content\n\n        logger.debug(\"MetadataExtractor input file : \" + filename)\n        const targetFilename = this.relocate(filename)\n        logger.debug(\"MetadataExtractor outputfile : \" + targetFilename)\n\n        const jsonData = this.convertEmailToJSON(content)\n\n        const jsonString = JSON.stringify(jsonData)\n\n        const output = { filename: targetFilename, content: jsonString }\n\n        return this.emit('message', output, message)\n    }\n\n    relocate(filename) {\n        //   var newFileName = filename.replace(/\\. \\w+$/, '.json')\n        const split = filename.split('.').slice(0, -1)\n        var newFileName = split.join('.') + '.json'\n        return newFileName\n    }\n\n    convertEmailToJSON(htmlContent) {\n        const $ = cheerio.load(htmlContent)\n        var subjectLine = $('H1').text().trim()\n        var fromName = $('B').first().text().trim()\n        var nextMessageLink = $('LINK[REL=\"Next\"]').attr('HREF')\n        var previousMessageLink = $('LINK[REL=\"Previous\"]').attr('HREF')\n        var messageText = $('PRE').text().trim()\n        messageText = this.pruneContent(messageText)\n        const jsonResult = {\n            subjectLine: subjectLine,\n            fromName: fromName,\n            nextMessageLink: nextMessageLink,\n            previousMessageLink: previousMessageLink,\n            messageText: messageText\n\n        }\n\n        /*\n                const jsonResult = {\n                    subject: $('H1').text().trim(),\n                    from: $('B').first().text().trim(),\n                    'next-message': $('LINK[REL=\"Next\"]').attr('HREF'),\n                    'previous-message': $('LINK[REL=\"Previous\"]').attr('HREF'),\n                    'message-text': $('PRE').text().trim()\n                };\n                */\n\n        /*\n        + ' ' + $('A').first().attr('href').match(/mailto:(.+\\?)/)[1].replace('?Subject=', ' '),\n            cc: '', // The sample does not contain a CC field to extract\n        // Removing parameters from email address in 'from' field\n        jsonResult.from = jsonResult.from.split('?')[0];\n\n        //    'in-reply-to': $('LINK[REL=\"made\"]').attr('HREF').match(/In-Reply-To=(.*)/)[1],\n        */\n        /*\n        :\\n\\n>\n        */\n\n        return jsonResult\n    }\n\n    pruneContent(content) {\n        // \"keep this\\nremove this\\n\\n>: keep this\";\n        const regex1 = /(^|\\n).*?:\\n>/s\n        content = content.replace(regex1, '$1')\n\n        const regex2 = /\\n>.*?\\n/g\n\n        //   const inputString = \"keep before\\n>remove this\\nkeep after\";\n        //   const cleanedString = inputString.replace(regex2, '\\n');\n        //   console.log(cleanedString);\n        content = content.replace(regex2, '\\n')\n        //  content = (content + '\\n').replace(regex2, '\\n').trim();\n        return content\n    }\n}\n\n\n\nexport default MetadataExtractor",
      "import logger from \"../../utils/Logger.js\"; // path will likely change\nimport Processor from \"../base/Processor.js\"; // maybe more specific\n\n/**\n * FileReader class that extends xxxxxProcessor.\n * DESCRIPTION\n * #### __*Input*__\n * **message.INPUT**\n * #### __*Output*__\n * **message.OUTPUT**\n */\nclass McpClient extends Processor {\n  /**\n   * Constructs a new ProcessorExample instance.\n   * @param {Object} config - The configuration object.\n   */\n  constructor(config) {\n    super(config)\n  }\n\n  /**\n   * Does something with the message and emits a 'message' event with the processed message.\n   * @param {Object} message - The message object.\n   */\n  async process(message) {\n    logger.setLogLevel(\"debug\")\n\n    // processing goes here\n    return this.emit(\"message\", message)\n  }\n}\n\nexport default McpClient\n",
      "import logger from \"../../utils/Logger.js\";\nimport ns from \"../../utils/ns.js\";\n\nimport ProcessorTemplate from \"./McpClient.js\";\n\n// ref needed in transmissions/src/processors/base/AbstractProcessorFactory.js\n\nclass ProcessorsFactoryTemplate {\n  static createProcessor(type, config) {\n    if (type.equals(ns.trn.ProcessorTemplate)) {\n      return new ProcessorTemplate(config);\n    }\n\n    return false;\n  }\n}\nexport default ProcessorsFactoryTemplate;\n",
      "import logger from \"../../utils/Logger.js\"; // path will likely change\nimport Processor from \"../base/Processor.js\"; // maybe more specific\n\n/**\n * FileReader class that extends xxxxxProcessor.\n * DESCRIPTION\n * #### __*Input*__\n * **message.INPUT**\n * #### __*Output*__\n * **message.OUTPUT**\n */\nclass McpServer extends Processor {\n  /**\n   * Constructs a new ProcessorExample instance.\n   * @param {Object} config - The configuration object.\n   */\n  constructor(config) {\n    super(config)\n  }\n\n  /**\n   * Does something with the message and emits a 'message' event with the processed message.\n   * @param {Object} message - The message object.\n   */\n  async process(message) {\n    logger.setLogLevel(\"debug\")\n\n    // processing goes here\n    return this.emit(\"message\", message)\n  }\n}\n\nexport default McpServer\n",
      "import path from 'path';\n\nconst LANGUAGE_PATTERNS = {\n    js: {\n        single: '//',\n        multi: { start: '/*', end: '*/' }\n    },\n    jsx: {\n        single: '//',\n        multi: { start: '/*', end: '*/' }\n    },\n    ts: {\n        single: '//',\n        multi: { start: '/*', end: '*/' }\n    },\n    tsx: {\n        single: '//',\n        multi: { start: '/*', end: '*/' }\n    },\n    py: {\n        single: '#',\n        multi: { start: '\"\"\"', end: '\"\"\"' }\n    },\n    java: {\n        single: '//',\n        multi: { start: '/*', end: '*/' }\n    },\n    cpp: {\n        single: '//',\n        multi: { start: '/*', end: '*/' }\n    },\n    c: {\n        single: '//',\n        multi: { start: '/*', end: '*/' }\n    },\n    h: {\n        single: '//',\n        multi: { start: '/*', end: '*/' }\n    }\n};\n\nexport function commentStripper(content, filepath) {\n    const ext = path.extname(filepath).toLowerCase().slice(1);\n    const patterns = LANGUAGE_PATTERNS[ext];\n\n    if (!patterns) {\n        return content;\n    }\n\n    let lines = content.split('\\n');\n    let inMultiLineComment = false;\n    let result = [];\n\n    for (let i = 0; i < lines.length; i++) {\n        let line = lines[i].trim();\n\n        if (inMultiLineComment) {\n            if (line.includes(patterns.multi.end)) {\n                inMultiLineComment = false;\n                line = line.split(patterns.multi.end)[1];\n            } else {\n                continue;\n            }\n        }\n\n        if (patterns.multi && line.includes(patterns.multi.start)) {\n            const parts = line.split(patterns.multi.start);\n            if (!parts[1].includes(patterns.multi.end)) {\n                inMultiLineComment = true;\n                line = parts[0];\n            } else {\n                line = parts[0] + parts[1].split(patterns.multi.end)[1];\n            }\n        }\n\n        if (patterns.single && line.startsWith(patterns.single)) {\n            continue;\n        }\n\n        if (patterns.single) {\n            const commentIndex = line.indexOf(patterns.single);\n            if (commentIndex >= 0) {\n                line = line.substring(0, commentIndex).trim();\n            }\n        }\n\n        if (line.trim()) {\n            result.push(line);\n        }\n    }\n\n    return result.join('\\n');\n}",
      "import Processor from '../base/Processor.js';\nimport logger from '../../utils/Logger.js';\nimport ns from '../../utils/ns.js';\nimport path from 'path';\n\nclass FileContainer extends Processor {\n    constructor(config) {\n        super(config);\n        this.container = {\n            files: {},\n            summary: {\n                totalFiles: 0,\n                fileTypes: {},\n                timestamp: new Date().toISOString()\n            }\n        };\n    }\n\n    async process(message) {\n        if (message.done) {\n            message.content = JSON.stringify(this.container, null, 2);\n            //   message.filepath = this.getPropertyFromMyConfig(ns.trn.destination);\n            message.filepath = this.getProperty(ns.trn.destination);\n            return this.emit('message', message);\n        }\n\n        if (!message.filepath || !message.content) {\n            logger.warn('FileContainer: Missing filepath or content');\n            // this.emit('message', message);\n            return\n        }\n\n        // Store relative path from target directory\n        const targetDir = message.targetPath || message.rootDir;\n        const relativePath = path.relative(targetDir, message.filepath);\n\n        // Add file to container\n        this.container.files[relativePath] = {\n            content: message.content,\n            type: path.extname(message.filepath),\n            timestamp: new Date().toISOString()\n        };\n\n        // Update summary\n        this.container.summary.totalFiles++;\n        const fileType = path.extname(message.filepath) || 'unknown';\n        this.container.summary.fileTypes[fileType] = (this.container.summary.fileTypes[fileType] || 0) + 1;\n\n        return this.emit('message', message);\n    }\n}\n\nexport default FileContainer;",
      "import logger from '../../utils/Logger.js';\nimport ns from '../../utils/ns.js';\nimport FileContainer from './FileContainer.js';\n\nclass PackerProcessorsFactory {\n    static createProcessor(type, config) {\n        if (type.equals(ns.trn.FileContainer)) {\n            logger.debug('PackerProcessorsFactory: Creating FileContainer processor');\n            return new FileContainer(config);\n        }\n        return false;\n    }\n}\n\nexport default PackerProcessorsFactory;",
      "import path from 'path';\n\nconst LANGUAGE_PATTERNS = {\n    js: {\n        single: '//',\n        multi: { start: '/*', end: '*/' }\n    },\n    jsx: {\n        single: '//',\n        multi: { start: '/*', end: '*/' }\n    },\n    ts: {\n        single: '//',\n        multi: { start: '/*', end: '*/' }\n    },\n    tsx: {\n        single: '//',\n        multi: { start: '/*', end: '*/' }\n    },\n    py: {\n        single: '#',\n        multi: { start: '\"\"\"', end: '\"\"\"' }\n    },\n    java: {\n        single: '//',\n        multi: { start: '/*', end: '*/' }\n    },\n    cpp: {\n        single: '//',\n        multi: { start: '/*', end: '*/' }\n    },\n    c: {\n        single: '//',\n        multi: { start: '/*', end: '*/' }\n    },\n    h: {\n        single: '//',\n        multi: { start: '/*', end: '*/' }\n    }\n};\n\nexport function commentStripper(content, filepath) {\n    const ext = path.extname(filepath).toLowerCase().slice(1);\n    const patterns = LANGUAGE_PATTERNS[ext];\n\n    if (!patterns) {\n        return content;\n    }\n\n    let lines = content.split('\\n');\n    let inMultiLineComment = false;\n    let result = [];\n\n    for (let i = 0; i < lines.length; i++) {\n        let line = lines[i].trim();\n\n        if (inMultiLineComment) {\n            if (line.includes(patterns.multi.end)) {\n                inMultiLineComment = false;\n                line = line.split(patterns.multi.end)[1];\n            } else {\n                continue;\n            }\n        }\n\n        if (patterns.multi && line.includes(patterns.multi.start)) {\n            const parts = line.split(patterns.multi.start);\n            if (!parts[1].includes(patterns.multi.end)) {\n                inMultiLineComment = true;\n                line = parts[0];\n            } else {\n                line = parts[0] + parts[1].split(patterns.multi.end)[1];\n            }\n        }\n\n        if (patterns.single && line.startsWith(patterns.single)) {\n            continue;\n        }\n\n        if (patterns.single) {\n            const commentIndex = line.indexOf(patterns.single);\n            if (commentIndex >= 0) {\n                line = line.substring(0, commentIndex).trim();\n            }\n        }\n\n        if (line.trim()) {\n            result.push(line);\n        }\n    }\n\n    return result.join('\\n');\n}",
      "import Processor from '../base/Processor.js';\nimport logger from '../../utils/Logger.js';\nimport ns from '../../utils/ns.js';\nimport path from 'path';\n\nclass FileContainer extends Processor {\n    constructor(config) {\n        super(config);\n        this.container = {\n            files: {},\n            summary: {\n                totalFiles: 0,\n                fileTypes: {},\n                timestamp: new Date().toISOString()\n            }\n        };\n    }\n\n    async process(message) {\n        if (message.done) {\n            message.content = JSON.stringify(this.container, null, 2);\n            message.filepath = this.getPropertyFromMyConfig(ns.trn.destination);\n            return this.emit('message', message);\n        }\n\n        if (!message.filepath || !message.content) {\n            logger.warn('FileContainer: Missing filepath or content');\n            return;\n        }\n\n        // Get relative path from target dir\n        const targetDir = message.targetPath || message.rootDir;\n        const relativePath = path.relative(targetDir, message.filepath);\n\n        // Store file content and metadata\n        this.container.files[relativePath] = {\n            content: message.content,\n            type: path.extname(message.filepath),\n            timestamp: new Date().toISOString()\n        };\n\n        // Update summary stats\n        this.container.summary.totalFiles++;\n        const fileType = path.extname(message.filepath) || 'unknown';\n        this.container.summary.fileTypes[fileType] = (this.container.summary.fileTypes[fileType] || 0) + 1;\n\n        return this.emit('message', message);\n    }\n}\n\nexport default FileContainer;",
      "import logger from '../../utils/Logger.js';\nimport ns from '../../utils/ns.js';\nimport FileContainer from './FileContainer.js';\n\nclass PackerProcessorsFactory {\n    static createProcessor(type, config) {\n        if (type.equals(ns.trn.FileContainer)) {\n            logger.debug('PackerProcessorsFactory: Creating FileContainer processor');\n            return new FileContainer(config);\n        }\n        return false;\n    }\n}\n\nexport default PackerProcessorsFactory;",
      "import fs from 'fs/promises';\nimport path from 'path';\nimport Processor from '../base/Processor.js';\nimport logger from '../../utils/Logger.js';\n\nclass AtomFeedPrep extends Processor {\n    constructor(config) {\n        super(config);\n    }\n\n    async process(message) {\n        //  logger.setLogLevel('debug')\n        const entries = message.slugs || [];\n        const siteUrl = message.site?.url || 'https://danny.ayers.name';\n\n        if (message.targetPath) {\n            message.templateFilename = path.join(message.targetPath, message.atomFeed.templateFilename)\n        } else {\n            message.templateFilename = path.join(message.rootDir, message.atomFeed.templateFilename)\n        }\n\n        const feed = {\n            title: message.site?.title || \"Danny Ayers' Blog\",\n            subtitle: message.site?.subtitle || '',\n            updated: new Date().toISOString(),\n            id: siteUrl,\n            link: siteUrl,\n            author: {\n                name: \"Danny Ayers\",\n                email: \"danny.ayers@gmail.com\"\n            },\n            entries: []\n        };\n\n        // Get same number of entries as front page\n        const entryCount = Math.min(5, entries.length);\n        const rangeStart = entries.length - entryCount;\n        const rangeEnd = entries.length - 1;\n\n        for (let i = rangeEnd; i >= rangeStart; i--) {\n            const slug = entries[i];\n            if (slug) {\n                let filePath;\n                if (message.targetPath) {\n                    filePath = path.join(message.targetPath, message.entryContentMeta.targetDir, slug + '.html');\n                } else {\n                    filePath = path.join(message.rootDir, message.entryContentMeta.targetDir, slug + '.html');\n                }\n\n                const entry = {\n                    title: `Entry ${slug}`, // TODO: Extract real title\n                    id: `${siteUrl}/entries/${slug}.html`,\n                    link: `${siteUrl}/entries/${slug}.html`,\n                    updated: message.contentBlocks?.updated || new Date().toISOString(),\n                    content: await this.getEntryContent(filePath)\n                };\n\n                feed.entries.push(entry);\n            }\n        }\n\n        message.contentBlocks = feed;\n        message.filepath = path.join(message.targetPath || message.rootDir, 'public/home/atom.xml');\n\n        return this.emit('message', message);\n    }\n\n    async getEntryContent(filePath) {\n        try {\n            return await fs.readFile(filePath, 'utf8');\n        } catch (error) {\n            logger.error(`Error reading entry file ${filePath}: ${error}`);\n            return '';\n        }\n    }\n}\n\nexport default AtomFeedPrep;",
      "import path from 'path'\nimport ns from '../../utils/ns.js'\nimport rdf from 'rdf-ext'\nimport grapoi from 'grapoi'\n\nimport footpath from '../../utils/footpath.js'\nimport logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass EntryContentToPagePrep extends Processor {\n\n  constructor(config) {\n    super(config)\n  }\n\n  async process(message) {\n    if (message.done) {\n      return this.emit('message', message)\n      return\n    }\n    logger.setLogLevel('debug')\n\n    // logger.reveal(message)\n\n    /*\n        if (message.targetPath) {\n          message.templateFilename = path.join(message.targetPath, message.entryContentToPage.templateFilename)\n        } else {\n          message.templateFilename = path.join(message.rootDir, message.entryContentToPage.templateFilename)\n        }\n\n        logger.log(\"################ message.templateFilename = \" + message.templateFilename)\n\n        message.template = false // ???????????\n    */\n    message.contentBlocks.content = message.content\n    //logger.reveal(message)\n\n    /*\n    if (path.isAbsolute(message.targetDir)) {\n      message.filepath = path.join(message.targetDir, message.slug + '.html')\n    } else {\n      if (message.targetPath) {\n        message.filepath = path.join(message.targetPath, message.targetDir, message.slug + '.html')\n      } else {\n        message.filepath = path.join(message.rootDir, message.targetDir, message.slug + '.html')\n      }\n    }\n      */\n    message.filepath = path.join(message.contentGroup.PostPages.targetDir, message.slug + '.html')\n    logger.debug('EntryContentToPagePrep, message.filepath = ' + message.filepath)\n\n    this.emit('message', message)\n  }\n\n}\n\nexport default EntryContentToPagePrep",
      "// src/processors/postcraft/FrontPagePrep.js\n\nimport path from 'path'\nimport { readFile } from 'node:fs/promises'\n\nimport logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\n\nclass FrontPagePrep extends Processor {\n  constructor(config) {\n    super(config)\n  }\n\n\n  async process(message) {\n    logger.setLogLevel('debug')\n    //   logger.reveal(message)\n    /*\n    if (message.targetPath) {\n      message.templateFilename = path.join(message.targetPath, message.indexPage.templateFilename)\n    } else {\n      message.templateFilename = path.join(message.rootDir, message.indexPage.templateFilename)\n    }\n\n    logger.debug('FrontPagePrep, Template = ' + message.templateFilename)\n*/\n\n    const rawEntryPaths = this.resolveRawEntryPaths(message)\n    message.content = ''\n\n    // TODO tidy up //\n    const entryCount = Math.min(5, rawEntryPaths.length) // Limit to 5 entries or less\n    logger.debug('FrontPagePrep, entryCount = ' + entryCount)\n\n    const rangeStart = rawEntryPaths.length - entryCount\n    const rangeEnd = rawEntryPaths.length - 1\n    //     for (let i = 0; i < entryCount; i++) {\n    for (let i = rangeEnd; i >= rangeStart; i--) {\n      logger.debug('FrontPagePrep, i = ' + entryCount)\n      const rawEntryPath = rawEntryPaths[i]\n      if (rawEntryPath) {\n        message.content += await readFile(rawEntryPath, 'utf8')\n      } else {\n        logger.warn(`Skipping undefined entry path at index ${i}`)\n      }\n    }\n\n    message.contentBlocks.content = message.content\n\n    if (message.targetPath) {\n      message.filepath = path.join(message.targetPath, message.indexPage.filepath)\n    } else {\n      message.filepath = path.join(message.rootDir, message.indexPage.filepath)\n    }\n    return this.emit('message', message)\n\n  }\n\n  //\n  resolveRawEntryPaths(message) {\n    const paths = []\n    const slugs = message.slugs || []\n    const entryCount = slugs.length\n\n    for (let i = 0; i < entryCount; i++) {\n      const slug = slugs[i]\n      if (slug) {\n        //   const path = message.rootDir + '/' + message.entryContentMeta.targetDir + '/' + slug + '.html'\n        let filePath\n        /*\n        if (message.targetPath) {\n          filePath = path.join(message.targetPath, message.entryContentMeta.targetDir, slug + '.html')\n        } else {\n          filePath = path.join(message.rootDir, message.entryContentMeta.targetDir, slug + '.html')\n        }\n          */\n        filePath = path.join(message.targetPath, slug + '.html')\n        paths.push(filePath)\n      }\n    }\n\n    return paths\n  }\n}\n\nexport default FrontPagePrep",
      "//// UNUSED\n\nimport ns from '../../utils/ns.js'\nimport rdf from 'rdf-ext'\nimport grapoi from 'grapoi'\n\nimport footpath from '../../utils/footpath.js'\nimport logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\n/**\n * A class that represents the PostcraftDispatcher processor.\n* #### __*Input*__\n* **data** : any\n* **message** : needs dataset\n* #### __*Output*__\n* **data** : templateFilename\n* **message** : adds sourceDir, targetDir, templateFilename\n* @extends Processor\n*/\nclass PostcraftDispatcher extends Processor {\n\n  /**\n   * Creates an instance of PostcraftDispatcher.\n   * @param {Object} config - The configuration object.\n   */\n  constructor(config) {\n    super(config)\n  }\n\n  /**\n   * Executes the PostcraftDispatcher processor.\n   * @param {Object} data - The data object.\n   * @param {Object} message - The message object.\n   */\n  async process(message) {\n    //  logger.setLogLevel('debug')\n    const postcraftConfig = message.dataset\n    message.template = data.toString()\n    logger.debug('PostcraftDispatcherPostcraftDispatcherPostcraftDispatcher ' + data)\n    process.exit(0)\n    const poi = grapoi({ dataset: postcraftConfig })\n\n    for (const q of poi.out(ns.rdf.type).quads()) {\n      if (q.object.equals(ns.trn.ContentGroup)) {\n        await this.processContentGroup(message, q.subject)\n      }\n    }\n  }\n\n  /**\n   * Processes a content group.\n   * @param {Object} message - The message object.\n   * @param {string} contentGroupID - The ID of the content group.\n   */\n  async processContentGroup(message, contentGroupID) {\n    const postcraftConfig = message.dataset\n    const groupPoi = rdf.grapoi({ dataset: postcraftConfig, term: contentGroupID })\n    const sourceDir = groupPoi.out(ns.trn.sourceDirectory).term.value\n    const targetDir = groupPoi.out(ns.trn.targetDirectory).term.value\n    const templateFilename = groupPoi.out(ns.trn.template).term.value\n\n    // logger.log('sourceDir = ' + sourceDir)\n    // logger.log('targetDir = ' + targetDir)\n    // logger.log('templateFilename  = ' + templateFilename)\n\n    message.sourceDir = sourceDir\n    message.targetDir = targetDir\n    message.templateFilename = templateFilename\n    message.loadContext = 'template'\n\n    return this.emit('message', sourceDir, message)\n  }\n}\n\nexport default PostcraftDispatcher",
      "import path from 'path'\nimport logger from '../../utils/Logger.js'\n\nimport Processor from '../base/Processor.js'\n\nclass PostcraftPrep extends Processor {\n\n  constructor(config) {\n    super(config)\n  }\n\n  async process(message) {\n    logger.setLogLevel(\"debug\")\n\n    if (message.done) {\n      return this.emit('message', message)\n    }\n    message.slug = this.extractSlug(message)\n    message.targetFilename = this.extractTargetFilename(message)\n    message.contentBlocks = {}\n    message.contentBlocks.relURL = this.extractRelURL(message)\n\n    // TODO generalise - use path.join\n    message.contentBlocks.link = 'entries/' + message.contentBlocks.relURL\n\n    message.contentBlocks.title = this.extractTitle(message)\n\n    const { created, updated } = this.extractDates(message)\n    message.contentBlocks.created = created\n    message.contentBlocks.updated = updated\n\n    return this.emit('message', message)\n  }\n\n  // TODO lots of tidying up\n  extractSlug(message) { // TODO move this into a utils file - is also in DirWalker\n\n    var slug = message.filename\n    // logger.reveal(message)\n    if (slug.includes('.')) {\n      slug = slug.substr(0, slug.lastIndexOf(\".\"))\n    }\n    return slug\n  }\n\n  extractTargetFilename(message) {\n\n\n    /*\n    if (message.targetPath) {\n      return path.join(message.targetPath, message.entryContentMeta.targetDir, this.extractSlug(message) + '.html')\n    } else {\n      return path.join(message.rootDir, message.entryContentMeta.targetDir, this.extractSlug(message) + '.html')\n    }\n*/\n    logger.reveal(message)\n\n    /*\n    if (message.targetPath) {\n      return path.join(message.targetPath, message.targetDir, this.extractSlug(message) + '.html')\n    } else {\n      return path.join(message.rootDir, message.targetDir, this.extractSlug(message) + '.html')\n    }\n      */\n    return path.join(message.contentGroup.PostPages.targetDir, this.extractSlug(message) + '.html')\n  }\n\n  extractRelURL(message) { // TODO refactor\n    return this.extractSlug(message) + '.html'\n  }\n\n  extractDates(message) {\n    const today = (new Date()).toISOString().split('T')[0]\n    const dates = { created: today, updated: today }\n\n    //  eg. 2024-04-19_hello-postcraft.md\n    const nonExt = message.filename.split('.').slice(0, -1).join()\n    const shreds = nonExt.split('_')\n    if (Date.parse(shreds[0])) { // filename version is not NaN\n      dates.created = shreds[0]\n    }\n    return dates\n  }\n\n  // first heading in the markdown\n  // or formatted from filename\n  // or raw filename\n  extractTitle(message) {\n    let title = 'Title'\n    let match = message.content.toString().match(/^#(.*)$/m)\n    let contentTitle = match ? match[1].trim() : null\n    if (contentTitle) {\n      title = contentTitle.replaceAll('#', '') // TODO make nicer\n      return title\n    }\n\n    // derive from filename\n    // eg. 2024-04-19_hello-postcraft.md\n    try {\n      const nonExt = message.filename.split('.').slice(0, -1).join()\n      const shreds = nonExt.split('_')\n\n      // let title = shreds[1] // fallback, get it from filename\n      title = shreds[1].split('-') // split the string into words\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1)) // capitalize the first letter of each word\n        .join(' ') // join the words back together with spaces\n    } catch (err) {\n      title = message.filename\n    }\n    return title\n  }\n}\n\nexport default PostcraftPrep",
      "import logger from '../../utils/Logger.js'\nimport ns from '../../utils/ns.js'\n\n\nimport PostcraftDispatcher from './PostcraftDispatcher.js'\nimport PostcraftPrep from './PostcraftPrep.js'\nimport EntryContentToPagePrep from './EntryContentToPagePrep.js'\nimport FrontPagePrep from './FrontPagePrep.js'\nimport AtomFeedPrep from './AtomFeedPrep.js'\n\nclass PostcraftProcessorsFactory {\n    static createProcessor(type, config) {\n        if (type.equals(ns.trn.PostcraftDispatcher)) {\n            return new PostcraftDispatcher(config)\n        }\n        if (type.equals(ns.trn.PostcraftPrep)) {\n            return new PostcraftPrep(config)\n        }\n        if (type.equals(ns.trn.EntryContentToPagePrep)) {\n            return new EntryContentToPagePrep(config)\n        }\n        if (type.equals(ns.trn.FrontPagePrep)) {\n            return new FrontPagePrep(config)\n        }\n        if (type.equals(ns.trn.AtomFeedPrep)) {\n            return new AtomFeedPrep(config)\n        }\n        return false\n    }\n}\n\nexport default PostcraftProcessorsFactory",
      "// src/processors/http/HttpGet.js\n/**\n * @class HttpGet\n * @extends Processor\n * @classdesc\n * **A Transmissions Processor**\n *\n * Retrieves content from HTTP URLs using GET requests.\n *\n * ### Processor Signature\n *\n * #### ***Input***\n * ***`url`** - The HTTP URL to fetch content from\n * ***`message`** - A message object that will be enriched with response data\n *\n * #### ***Output***\n * ***`message`** - Original message with added sourceURL property\n * ***`content`** - The retrieved content from the URL\n *\n * #### ***Behavior***\n * * Fetches content from specified HTTP URL\n * * Adds source URL to message object\n * * Handles special '~~done~~' URL marker\n * * Emits retrieved content along with enriched message\n * * Logs detailed debug information during operation\n */\n\nimport axios from 'axios'\nimport grapoi from 'grapoi'\nimport ns from '../../utils/ns.js'\n\nimport footpath from '../../utils/footpath.js'\nimport logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass HttpGet extends Processor {\n    constructor(config) {\n        super(config)\n    }\n\n    /**\n     * Processes an HTTP GET request for the given URL\n     * @param {string} url - Target URL to fetch\n     * @param {Object} message - Message object to enrich with response data\n     * @emits message - Emits retrieved content and enriched message\n     */\n    async process(url, message) {\n        //   logger.setLogLevel('debug')\n        logger.debug('HttpGet, url = ' + url)\n        if (url === '~~done~~') {\n            logger.log('HG DONE*****************')\n            return this.emit('message', url, message)\n            return\n        }\n        try {\n            logger.log('HG GETTING*****************')\n            const response = await axios.get(url)\n            const content = response.data\n\n            message.sourceURL = url\n            return this.emit('message', content, message)\n        } catch (error) {\n            logger.error(\"HttpGet.execute error\\n\" + error)\n        }\n    }\n}\n\nexport default HttpGet",
      "import logger from '../../utils/Logger.js'\nimport ns from '../../utils/ns.js'\n\n\nimport HttpGet from './HttpGet.js'\n\n\n\nclass ProtocolsProcessorsFactory {\n    static createProcessor(type, config) {\n        if (type.equals(ns.trn.HttpGet)) {\n            return new HttpGet(config)\n        }\n\n        return false\n    }\n}\n\nexport default ProtocolsProcessorsFactory",
      "import rdf from 'rdf-ext'\nimport grapoi from 'grapoi'\nimport path from 'path'\nimport ns from '../../utils/ns.js'\nimport logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass ConfigMap extends Processor {\n  constructor(config) {\n    super(config)\n  }\n\n  async process(message) {\n    // logger.setLogLevel('debug')\n    if (!message.dataset) {\n      logger.warn('No dataset provided')\n      return this.emit('message', message)\n    }\n\n    const basePath = message.targetPath || message.rootDir\n    logger.debug(`ConfigMap using base path: ${basePath}`)\n\n    const dataset = message.dataset\n    const poi = grapoi({ dataset })\n\n    // Find ContentGroup instances\n    for (const quad of poi.out(ns.rdf.type, ns.trn.ContentGroup).quads()) {\n      const groupID = quad.subject\n\n      let groupName = ns.getShortname(groupID.value)\n      //   let type = ns.getShortname(processorType.value)\n      logger.debug(`*** groupName = ${groupName} `)\n      // *** groupID.value = http://hyperdata.it/transmissions/AtomFeed\n\n      const groupPoi = grapoi({ dataset, term: groupID })\n\n      if (!message.contentGroup) message.contentGroup = {}\n      // Extract paths\n      if (groupPoi.out(ns.trn.sourceDirectory).term) {\n        let sourceDir = this.resolvePath(\n          basePath,\n          groupPoi.out(ns.trn.sourceDirectory).term.value)\n\n        if (!message.contentGroup[groupName]) message.contentGroup[groupName] = {}\n        message.contentGroup[groupName].sourceDir = sourceDir\n      }\n\n      if (groupPoi.out(ns.trn.targetDirectory).term) {\n        let targetDir = this.resolvePath(\n          basePath,\n          groupPoi.out(ns.trn.targetDirectory).term.value\n        )\n        if (!message.contentGroup[groupName]) message.contentGroup[groupName] = {}\n        message.contentGroup[groupName].targetDir = targetDir\n      }\n\n      if (groupPoi.out(ns.trn.template).term) {\n        let templateFile = this.resolvePath(\n          basePath,\n          groupPoi.out(ns.trn.template).term.value\n        )\n        if (!message.contentGroup[groupName]) message.contentGroup[groupName] = {}\n        message.contentGroup[groupName].templateFile = templateFile\n      }\n\n      /*\nlogger.debug(`Resolved :\n  groupName: ${groupName}\n  sourceDir: ${sourceDir}\n  targetDir: ${targetDir}\n  templateFile: ${templateFile}`)\n\n\nmessage.contentGroup[groupName] =\n{ \"sourceDir\": sourceDir, \"targetDir\": targetDir, \"templateFile\": templateFile }\n*/\n      //  logger.reveal(message)\n    }\n    // process.exit()\n\n    return this.emit('message', message)\n  }\n\n  resolvePath(basePath, relativePath) {\n    if (!basePath || !relativePath) {\n      throw new Error('Base path and relative path required')\n    }\n\n    const resolved = path.isAbsolute(relativePath)\n      ? relativePath\n      : path.join(basePath, relativePath)\n\n    return path.normalize(resolved)\n  }\n}\n\nexport default ConfigMap",
      "import rdf from 'rdf-ext'\nimport grapoi from 'grapoi'\nimport path from 'path'\nimport ns from '../../utils/ns.js'\nimport logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass ConfigMap extends Processor {\n  constructor(config) {\n    super(config)\n  }\n\n  async process(message) {\n    // logger.setLogLevel('debug')\n\n    /*\n     if (!message.dataset) {\n       logger.warn('No dataset provided')\n       return this.emit('message', message)\n     }\n */\n    logger.debug(`ConfigMap.process`)\n    this.showMyConfig()\n\n    const basePath = message.targetPath || message.rootDir\n    logger.debug(`ConfigMap using base path: ${basePath}`)\n\n    const dataset = message.dataset\n    const poi = grapoi({ dataset })\n\n    // Find ConfigSet instances\n    for (const quad of poi.out(ns.rdf.type, ns.trn.ConfigSet).quads()) {\n      const groupID = quad.subject\n\n      let groupName = ns.getShortname(groupID.value)\n      //   let type = ns.getShortname(processorType.value)\n      logger.debug(`*** groupName = ${groupName} `)\n      // *** groupID.value = http://hyperdata.it/transmissions/AtomFeed\n\n      const groupPoi = grapoi({ dataset, term: groupID })\n\n      if (!message.contentGroup) message.contentGroup = {}\n      // Extract paths\n      if (groupPoi.out(ns.trn.sourceDirectory).term) {\n        let sourceDir = this.resolvePath(\n          basePath,\n          groupPoi.out(ns.trn.sourceDirectory).term.value)\n\n        if (!message.contentGroup[groupName]) message.contentGroup[groupName] = {}\n        message.contentGroup[groupName].sourceDir = sourceDir\n      }\n\n      if (groupPoi.out(ns.trn.targetDirectory).term) {\n        let targetDir = this.resolvePath(\n          basePath,\n          groupPoi.out(ns.trn.targetDirectory).term.value\n        )\n        if (!message.contentGroup[groupName]) message.contentGroup[groupName] = {}\n        message.contentGroup[groupName].targetDir = targetDir\n      }\n\n      if (groupPoi.out(ns.trn.template).term) {\n        let templateFile = this.resolvePath(\n          basePath,\n          groupPoi.out(ns.trn.template).term.value\n        )\n        if (!message.contentGroup[groupName]) message.contentGroup[groupName] = {}\n        message.contentGroup[groupName].templateFile = templateFile\n      }\n\n      /*\nlogger.debug(`Resolved :\n  groupName: ${groupName}\n  sourceDir: ${sourceDir}\n  targetDir: ${targetDir}\n  templateFile: ${templateFile}`)\n\n\nmessage.contentGroup[groupName] =\n{ \"sourceDir\": sourceDir, \"targetDir\": targetDir, \"templateFile\": templateFile }\n*/\n      //  logger.reveal(message)\n    }\n    // process.exit()\n\n    return this.emit('message', message)\n  }\n\n  resolvePath(basePath, relativePath) {\n    if (!basePath || !relativePath) {\n      throw new Error('Base path and relative path required')\n    }\n\n    const resolved = path.isAbsolute(relativePath)\n      ? relativePath\n      : path.join(basePath, relativePath)\n\n    return path.normalize(resolved)\n  }\n}\n\nexport default ConfigMap",
      "// src/processors/rdf/DatasetReader.js\n/**\n * @class DatasetReader\n * @extends Processor\n * @classdesc\n * **a Transmissions Processor**\n * \n * Reads a Turtle file and adds it to the message as an RDF dataset.\n * \n * #### __*Input*__\n * * **`message.rootDir`** - Root directory containing `manifest.ttl`\n * \n * #### __*Output*__\n * * **`message.rootDir`** - Unchanged\n * * **`message.dataset`** - RDF dataset created from `manifest.ttl`\n * \n * #### __*Behavior*__\n * * Reads the manifest.ttl file from the rootDir\n * * Creates an RDF dataset from the Turtle file\n * * Adds the dataset to the message object\n * \n * #### __Tests__\n * * TODO: Add test information\n */\n\nimport path from 'path'\nimport rdf from 'rdf-ext'\nimport { fromFile } from 'rdf-utils-fs'\nimport Processor from '../base/Processor.js'\nimport logger from '../../utils/Logger.js'\n\nclass DatasetReader extends Processor {\n    constructor(config) {\n        super(config)\n    }\n\n    /**\n     * @returns {string[]} Array of input keys\n     * @todo Implement properly\n     */\n    getInputKeys() { // what were these for!?\n        return ['sdfsdf']\n    }\n\n    /**\n     * @returns {string[]} Array of output keys\n     * @todo Implement properly\n     */\n    getOutputKeys() {\n        return ['sdfsdfsdfdataset']\n    }\n\n    /**\n     * Executes the DatasetReader processor\n     * @param {Object} message - The message object\n     */\n    async process(message) {\n        this.preProcess(message) ////// TODO manifest loading has been moved to ApplicationManager\n\n        /// TODO make this more useful!!!\n        var datasetName = 'dataset'\n        var datasetFilename = path.join(message.rootDir, '/manifest.ttl') // TODO move to system config\n        if (message.datasetFilename) {\n            datasetFilename = message.datasetFilename\n        }\n        if (message.datasetName) {\n            datasetName = message.datasetName\n        }\n        /////\n\n        const stream = fromFile(datasetFilename)\n\n        message[datasetName] = await rdf.dataset().import(stream)\n        logger.debug(`DatasetReader, datasetName = ${datasetName}`)\n        //   logger.debug(`DatasetReader, message[datasetName] = ${message[datasetName]}`)\n        return this.emit('message', message)\n    }\n}\n\nexport default DatasetReader",
      "import path from 'path';\nimport rdf from 'rdf-ext';\nimport { fromFile } from 'rdf-utils-fs';\nimport ns from '../../utils/ns.js';\nimport logger from '../../utils/Logger.js';\nimport Processor from '../base/Processor.js';\n\nclass DatasetReader extends Processor {\n    constructor(config) {\n        super(config);\n    }\n\n    async process(message) {\n        try {\n            const datasetFile = this.getPropertyFromMyConfig(ns.trn.datasetFile);\n            const datasetPath = path.join(message.rootDir, datasetFile);\n\n            logger.debug(`Reading dataset from ${datasetPath}`);\n            const stream = fromFile(datasetPath);\n            message.dataset = await rdf.dataset().import(stream);\n\n            if (message.dataset.size === 0) {\n                logger.warn('Empty dataset loaded');\n            } else {\n                logger.debug(`Loaded dataset with ${message.dataset.size} quads`);\n            }\n\n            return this.emit('message', message);\n        } catch (err) {\n            logger.error('Failed to read dataset:', err);\n            throw err;\n        }\n    }\n}\n\nexport default DatasetReader;",
      "import rdf from 'rdf-ext'\nimport grapoi from 'grapoi'\nimport ns from '../../utils/ns.js'\nimport logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass RDFConfig extends Processor {\n  constructor(config) {\n    super(config)\n    this.configMap = new Map()\n  }\n\n  async process(message) {\n    if (!message.dataset) {\n      throw new Error('No RDF dataset provided')\n    }\n\n    const dataset = message.dataset\n    const poi = grapoi({ dataset })\n\n    // Find all ConfigGroup instances\n    for (const configGroup of poi.out(ns.rdf.type, ns.trn.ConfigGroup).terms) {\n      const groupPoi = grapoi({ dataset, term: configGroup })\n\n      // Extract property mappings\n      const mappings = {}\n      for (const quad of groupPoi.quads()) {\n        if (!quad.predicate.equals(ns.rdf.type)) {\n          mappings[quad.predicate.value] = this.resolveValue(quad.object)\n        }\n      }\n\n      this.configMap.set(configGroup.value, mappings)\n      message.configMap = this.configMap\n    }\n\n    // Apply configuration patterns\n    if (message.configPatterns) {\n      for (const pattern of message.configPatterns) {\n        const config = this.configMap.get(pattern)\n        if (config) {\n          Object.assign(message, config)\n        }\n      }\n    }\n\n    return this.emit('message', message)\n  }\n\n  resolveValue(term) {\n    // Handle different RDF term types\n    if (term.termType === 'NamedNode') {\n      return term.value\n    } else if (term.termType === 'Literal') {\n      const value = term.value\n      // Convert numeric literals\n      return isNaN(value) ? value : Number(value)\n    }\n    return term.value\n  }\n\n  getConfig(groupId) {\n    return this.configMap.get(groupId)\n  }\n}\n\nexport default RDFConfig",
      "import ns from '../../utils/ns.js'\nimport DatasetReader from './DatasetReader.js'\nimport ConfigMap from './ConfigMap.js'\nimport RDFConfig from './RDFConfig.js'\n\nclass RDFProcessorsFactory {\n    static createProcessor(type, config) {\n        if (type.equals(ns.trn.DatasetReader)) {\n            return new DatasetReader(config)\n        }\n        if (type.equals(ns.trn.ConfigMap)) {\n            return new ConfigMap(config)\n        }\n        if (type.equals(ns.trn.RDFConfig)) {\n            return new RDFConfig(config)\n        }\n        return false\n    }\n}\n\nexport default RDFProcessorsFactory",
      "import logger from '../../utils/Logger.js'\nimport ns from '../../utils/ns.js'\n\nimport SPARQLSelect from './SPARQLSelect.js'\nimport SPARQLUpdate from './SPARQLUpdate.js'\n\n/**\n * @class SPARQLProcessorsFactory\n * @classdesc\n * **Factory for SPARQL Processors**\n *\n * Creates instances of SPARQL query and update processors.\n *\n */\nclass SPARQLProcessorsFactory {\n\n    static createProcessor(type, config) {\n\n        if (type.equals(ns.trn.SPARQLSelect)) {\n            return new SPARQLSelect(config)\n        }\n        if (type.equals(ns.trn.SPARQLUpdate)) {\n            return new SPARQLUpdate(config)\n        }\n\n        return false\n    }\n}\nexport default SPARQLProcessorsFactory",
      "import axios from 'axios';\nimport nunjucks from 'nunjucks';\nimport logger from '../../utils/Logger.js';\nimport Processor from '../base/Processor.js';\nimport ns from '../../utils/ns.js';\nimport SessionEnvironment from './SessionEnvironment.js';\n\nclass SPARQLSelect extends Processor {\n    constructor(config) {\n        super(config);\n        this.env = new SessionEnvironment(this);\n    }\n\n    async process(message) {\n        if (!this.env.endpoints) {\n            await this.env.loadEndpoints(message.rootDir);\n        }\n\n        const endpoint = this.env.getQueryEndpoint();\n        const template = await this.env.getTemplate(\n            message.rootDir,\n            this.getProperty(ns.trn.templateFilename)\n        );\n\n        const queryData = {\n            startDate: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n            ...message\n        };\n\n        const query = nunjucks.renderString(template, queryData);\n\n        try {\n            const response = await axios.post(endpoint.url, query, {\n                headers: {\n                    'Content-Type': 'application/sparql-query',\n                    'Accept': 'application/json',\n                    'Authorization': this.env.getBasicAuthHeader(endpoint)\n                }\n            });\n\n            message.queryResults = response.data;\n            return this.emit('message', message);\n        } catch (error) {\n            logger.error('SPARQL query error:', error);\n            throw error;\n        }\n    }\n}\n\nexport default SPARQLSelect;",
      "import axios from 'axios';\nimport nunjucks from 'nunjucks';\nimport crypto from 'crypto';\nimport logger from '../../utils/Logger.js';\nimport Processor from '../base/Processor.js';\nimport ns from '../../utils/ns.js';\nimport SessionEnvironment from './SessionEnvironment.js';\n\nclass SPARQLUpdate extends Processor {\n    constructor(config) {\n        super(config);\n        this.env = new SessionEnvironment(this);\n    }\n\n    async process(message) {\n        if (!this.env.endpoints) {\n            await this.env.loadEndpoints(message.rootDir);\n        }\n\n        const endpoint = this.env.getUpdateEndpoint();\n        const template = await this.env.getTemplate(\n            message.rootDir,\n            this.getProperty(ns.trn.templateFilename)\n        );\n\n        const now = new Date().toISOString();\n        const updateData = {\n            id: crypto.randomUUID(),\n            title: message.meta?.title || 'Untitled Post',\n            content: message.content,\n            published: now,\n            modified: now,\n            author: { // default to me!!\n                name: 'Danny',\n                email: 'danny.ayers@gmail.com',\n                url: 'https://danny.ayers.name'\n            },\n            ...message\n        };\n\n        const update = nunjucks.renderString(template, updateData);\n\n        try {\n            const response = await axios.post(endpoint.url, update, {\n                headers: {\n                    'Content-Type': 'application/sparql-update',\n                    'Authorization': this.env.getBasicAuthHeader(endpoint)\n                }\n            });\n\n            message.updateStatus = response.status === 200 ? 'success' : 'error';\n            message.updateResponse = response.data;\n\n            return this.emit('message', message);\n        } catch (error) {\n            logger.error('SPARQL update error:', error);\n            throw error;\n        }\n    }\n}\n\nexport default SPARQLUpdate;",
      "import axios from 'axios';\nimport nunjucks from 'nunjucks';\nimport fs from 'fs/promises';\nimport path from 'path';\nimport logger from '../../utils/Logger.js';\nimport ns from '../../utils/ns.js';\n\nclass SessionEnvironment {\n    constructor(processor) {\n        this.processor = processor\n        this.endpoints = null;\n        this.templateCache = new Map();\n    }\n\n    async loadEndpoints(dir) {\n        logger.setLogLevel('debug')\n\n        const settingsPath = this.processor.getProperty(ns.trn.endpointSettings)\n        logger.debug(`SessionEnvironment.loadEndpoints dir = ${dir}`)\n        logger.debug(`SessionEnvironment.loadEndpoints settingsPath = ${settingsPath}`)\n        const filePath = path.join(dir, settingsPath);\n        const data = await fs.readFile(filePath, 'utf8');\n        this.endpoints = JSON.parse(data);\n    }\n\n    getQueryEndpoint() {\n        return this.endpoints.find(e => e.type === 'query');\n    }\n\n    getUpdateEndpoint() {\n        return this.endpoints.find(e => e.type === 'update');\n    }\n\n    async getTemplate(dir, templateFilename) {\n        const cacheKey = path.join(dir, templateFilename);\n\n        if (this.templateCache.has(cacheKey)) {\n            return this.templateCache.get(cacheKey);\n        }\n\n        const template = await fs.readFile(cacheKey, 'utf8');\n        this.templateCache.set(cacheKey, template);\n        return template;\n    }\n\n    clearTemplateCache() {\n        this.templateCache.clear();\n    }\n\n    // getProperty(property) {\n    //   return property;\n    //}\n\n    getBasicAuthHeader(endpoint) {\n        return `Basic ${Buffer.from(\n            `${endpoint.credentials.user}:${endpoint.credentials.password}`\n        ).toString('base64')}`;\n    }\n}\n\nexport default SessionEnvironment;",
      "import path from 'path'\nimport logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass MarkdownFormatter extends Processor {\n    constructor(config) {\n        super(config)\n    }\n\n    async process(message) {\n\n        if (message.done) return\n\n        // TODO move to config\n        const dir = '/home/danny/github-danny/hyperdata/docs/postcraft/content-raw/chat-archives/md'\n\n        const filename = `${message.content.created_at.substring(0, 10)}_${message.content.uuid.substring(0, 3)}.md`\n\n        message.filepath = path.join(dir, message.meta.conv_uuid.substring(0, 4), filename)\n        message.content = this.extractMarkdown(message)\n\n        return this.emit('message', message)\n    }\n\n    // https://claude.ai/chat/be3ae4a9-51cd-42f6-a903-3193af00fed8\n\n    extractMarkdown(message) {\n        // TODO move to config\n        const urlBase = 'https://claude.ai/chat/'\n\n        const lines = []\n        lines.push(`# [${message.meta.conv_name}](${urlBase}${message.meta.conv_uuid})\\n`)\n        //   lines.push(`${message.meta.conv_uuid}\\n`)\n        lines.push(`${message.content.uuid}\\n`)\n        // lines.push('')\n        lines.push(message.content.text)\n        lines.push('\\n---\\n')\n\n        for (const [key, value] of Object.entries(message)) {\n            if (key !== 'content' && value !== null) {\n                if (value) {\n                    const v = typeof value === 'object' ? JSON.stringify(value, null, 2) : value.toString()\n                    lines.push(`* **${key}** : ${v}`)\n                } else {\n                    lines.push(`* **${key}** : [undefined]`)\n                }\n            }\n        }\n\n        return lines.join('\\n')\n    }\n\n}\n\nexport default MarkdownFormatter\n",
      "import logger from '../../utils/Logger.js'\nimport ns from '../../utils/ns.js'\n\n\nimport MarkdownFormatter from './MarkdownFormatter.js'\nimport TurtleFormatter from './TurtleFormatter.js'\n\n// ref needed in transmissions/src/engine/AbstractProcessorFactory.js\n\n\nclass StagingProcessorsFactory {\n    static createProcessor(type, config) {\n\n        if (type.equals(ns.trn.MarkdownFormatter)) {\n            return new MarkdownFormatter(config)\n        }\n        if (type.equals(ns.trn.TurtleFormatter)) {\n            return new TurtleFormatter(config)\n        }\n        return false\n    }\n}\nexport default StagingProcessorsFactory",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass TurtleFormatter extends Processor {\n    constructor(config) {\n        super(config)\n        this.baseURI = config.baseURI || 'http://example.org/'\n    }\n\n    async process(message) {\n        try {\n            const item = message.currentItem\n            if (!item) {\n                return\n            }\n\n            // Convert item to Turtle\n            const turtle = this.formatTurtle(item)\n            message.content = turtle\n            message.targetFile = `${item.id}.ttl`\n\n            this.emit('message', message)\n        } catch (err) {\n            logger.error(\"TurtleFormatter.execute error: \" + err.message)\n            throw err\n        }\n    }\n\n    formatTurtle(item) {\n        const lines = []\n        lines.push('@prefix : <http://example.org/ns#> .')\n        lines.push('@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .')\n        lines.push('')\n\n        const subject = `<${this.baseURI}${item.id}>`\n        lines.push(`${subject} a :Item ;`)\n\n        const entries = Object.entries(item)\n        entries.forEach(([key, value], index) => {\n            if (value !== null) {\n                const isLast = index === entries.length - 1\n                const literal = typeof value === 'string' ?\n                    `\"${value.replace(/\"/g, '\\\\\"')}\"` :\n                    `\"${JSON.stringify(value)}\"`\n                lines.push(`    :${key} ${literal}${isLast ? ' .' : ' ;'}`)\n            }\n        })\n\n        return lines.join('\\n')\n    }\n}\n\nexport default TurtleFormatter\n",
      "import 'dotenv/config'\n\n// import { readFile } from 'node:fs/promises' // whatever else\n\nimport logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js' // maybe more specific\n\n\n/**\n * FileReader class that extends xxxxxProcessor.\n * DESCRIPTION\n * #### __*Input*__\n * **message.INPUT**\n * #### __*Output*__\n * **message.OUTPUT**\n *\n * ### References\n * * https://dotenvx.com/\n * * https://github.com/motdotla/dotenv\n*/\nclass EnvLoader extends Processor {\n\n    /**\n     * Constructs a new ProcessorExample instance.\n     * @param {Object} config - The configuration object.\n     */\n    constructor(config) {\n        super(config)\n    }\n\n    /**\n     * Does something with the message and emits a 'message' event with the processed message.\n     * @param {Object} message - The message object.\n     */\n    async process(message) {\n        //   logger.setLogLevel('debug')\n        // console.log(process.env)\n\n        this.config.whiteboard.env = process.env\n\n        return this.emit(\"message\", message)\n    }\n}\n\nexport default EnvLoader",
      "import logger from '../../utils/Logger.js'\nimport ns from '../../utils/ns.js'\n\n\nimport EnvLoader from './EnvLoader.js'\n\n\n\nclass SystemsProcessorsFactory {\n    static createProcessor(type, config) {\n        if (type.equals(ns.trn.EnvLoader)) {\n            return new EnvLoader(config)\n        }\n        return false\n    }\n}\nexport default SystemsProcessorsFactory",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass AppendProcess extends Processor {\n\n    // In AppendProcess.js\n    async process(message) {\n        logger.debug(\"AppendProcess data : \" + message.content)\n        message.content = message.content + \" world\"\n        return this.emit('message', message)\n    }\n}\n\nexport default AppendProcess",
      "import path from 'path'\nimport { fileURLToPath } from 'url'\n\nimport { writeFile } from 'node:fs/promises'\nimport footpath from '../../utils/footpath.js'\nimport grapoi from 'grapoi'\nimport ns from '../../utils/ns.js'\nimport logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass FileSink extends Processor {\n\n    constructor(config) {\n        super(config)\n        const dataset = this.config\n        const poi = grapoi({ dataset })\n        this.destinationFile = poi.out(ns.trn.destinationFile).value\n    }\n\n    // In FileSink.js\n    async process(message) {\n        const toRootDir = '../../../'\n        const dataDir = path.join(toRootDir, message.dataDir)\n        const df = footpath.resolve(import.meta.url, dataDir, this.destinationFile)\n        logger.debug(\"FileSink to = \" + df)\n        await writeFile(df, message.content)\n        return this.emit('message', message)\n    }\n}\n\nexport default FileSink\n",
      "import path from 'path'\nimport { fileURLToPath } from 'url'\n\nimport { readFile } from 'node:fs/promises'\n\nimport footpath from '../../utils/footpath.js'\nimport rdf from 'rdf-ext'\n\nimport grapoi from 'grapoi'\nimport ns from '../../utils/ns.js'\n\nimport logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass FileSource extends Processor {\n\n    constructor(config) {\n        super(config)\n        const dataset = this.config\n        const poi = grapoi({ dataset })\n        this.sourceFile = poi.out(ns.trn.sourceFile).value\n    }\n\n    // In FileSource.js\n    async process(message) {\n        try {\n            const toRootDir = '../../../'\n            const dataDir = toRootDir + message.dataDir\n            const sf = footpath.resolve(import.meta.url, dataDir, this.sourceFile)\n            logger.debug('FileSource file : ' + sf)\n            const contents = await readFile(sf, { encoding: 'utf8' })\n            logger.debug('FileSource data : ' + contents)\n            return this.emit('message', { content: contents, ...message })\n        } catch (err) {\n            logger.error(\"FileSource.execute error : \" + err.message)\n        }\n    }\n}\n\nexport default FileSource\n\n\n\n\n",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass StringSink extends Processor {\n\n    process(message) {\n        logger.log(\"\\n\\nStringSink outputs : \\\"\" + message + \"\\\"\\n\\n\")\n    }\n}\n\nexport default StringSink \n",
      "import Processor from '../base/Processor.js'\n\nclass StringSource extends Processor {\n\n    constructor(config) {\n        super(config)\n    }\n\n    async process(message) {\n        console.log(\"message = \" + message)\n        console.log(\"data = \" + data)\n        return this.emit('message', message)\n    }\n}\n\nexport default StringSource\n\n\n\n\n",
      "import logger from '../../utils/Logger.js'\nimport ns from '../../utils/ns.js'\n\nimport StringSource from './StringSource.js'\nimport StringSink from './StringSink.js'\nimport AppendProcess from './AppendProcess.js'\nimport FileSource from './FileSource.js'\nimport FileSink from './FileSink.js'\n\n\n\nclass TestProcessorsFactory {\n    static createProcessor(type, config) {\n\n        // for e2e tests\n        // String\n        if (type.equals(ns.trn.StringSource)) {\n            return new StringSource(config)\n        }\n        if (type.equals(ns.trn.StringSink)) {\n            return new StringSink(config)\n        }\n        if (type.equals(ns.trn.AppendProcess)) {\n            return new AppendProcess(config)\n        }\n\n        // simple file\n        if (type.equals(ns.trn.FileSource)) {\n            return new FileSource(config)\n        }\n        if (type.equals(ns.trn.FileSink)) {\n            return new FileSink(config)\n        }\n\n        return false\n    }\n}\n\nexport default TestProcessorsFactory",
      "\nimport { readFile } from 'node:fs/promises'\nimport grapoi from 'grapoi'\nimport ns from '../../utils/ns.js'\nimport footpath from '../../utils/footpath.js'\nimport logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass LineReader extends Processor {\n\n    constructor(config) {\n        super(config)\n    }\n\n    async process(message) {\n\n        const text = data.toString()\n\n\n        const lines = text.split('\\n')\n        for await (let line of lines) {\n            if (line.trim() && !line.startsWith('#')) {\n                logger.debug('Line = [[[' + line + ']]]')\n                return this.emit('message', line, message)\n            }\n        }\n\n        return this.emit('message', '~~done~~', message)\n    }\n}\n\nexport default LineReader",
      "import fs from 'fs/promises';\nimport path from 'path';\nimport Processor from '../base/Processor.js';\nimport logger from '../../utils/Logger.js';\nimport ns from '../../utils/ns.js';\n\nclass StringFilter extends Processor {\n    constructor(config) {\n        super(config);\n        this.gitignorePatterns = [];\n        this.initialized = false;\n        this.initialize();\n    }\n\n    async initialize() {\n        if (this.initialized) return;\n\n        try {\n            // Get include/exclude patterns from config\n            if (this.settings) {\n                this.includePatterns = this.getPropertyFromMyConfig(ns.trn.include)?.split(',') || [];\n                this.excludePatterns = this.getPropertyFromMyConfig(ns.trn.exclude)?.split(',') || [];\n            } else {\n                this.includePatterns = this.config.include?.split(',') || [];\n                this.excludePatterns = this.config.exclude?.split(',') || [];\n            }\n\n            // Try to load gitignore if path provided\n            const gitignorePath = this.config.gitignorePath;\n            if (gitignorePath) {\n                try {\n                    const gitignoreContent = await fs.readFile(gitignorePath, 'utf8');\n                    this.gitignorePatterns = gitignoreContent\n                        .split('\\n')\n                        .map(line => line.trim())\n                        .filter(line => line && !line.startsWith('#'));\n                } catch (err) {\n                    logger.warn(`Could not load gitignore from ${gitignorePath}: ${err.message}`);\n                }\n            }\n        } catch (err) {\n            logger.error('Error initializing StringFilter:', err);\n        }\n\n        this.initialized = true;\n    }\n\n    async process(message) {\n        await this.initialize();\n\n        if (!message.filepath) {\n            logger.warn('StringFilter: No filepath provided');\n            return;\n        }\n\n        const relativePath = message.filepath;\n        logger.debug(`StringFilter, relative path = ${relativePath}`);\n\n        // Check gitignore patterns\n        if (this.gitignorePatterns.some(pattern => this.matchPattern(relativePath, pattern))) {\n            return;\n        }\n\n        // Check exclude patterns\n        if (this.excludePatterns.some(pattern => this.matchPattern(relativePath, pattern))) {\n            return;\n        }\n\n        // Check include patterns\n        if (this.includePatterns.length > 0 &&\n            !this.includePatterns.some(pattern => this.matchPattern(relativePath, pattern))) {\n            return;\n        }\n\n        return this.emit('message', message);\n    }\n\n    matchPattern(filePath, pattern) {\n        // Convert glob pattern to regex\n        const regexPattern = pattern\n            .replace(/\\./g, '\\\\.')\n            .replace(/\\*/g, '.*')\n            .replace(/\\?/g, '.');\n        const regex = new RegExp(`^${regexPattern}$`);\n\n        // Get filename for matching\n        const filename = path.basename(filePath);\n        return regex.test(filename) || regex.test(filePath);\n    }\n}\n\nexport default StringFilter;",
      "import fs from 'fs/promises';\nimport path from 'path';\nimport Processor from '../base/Processor.js';\nimport logger from '../../utils/Logger.js';\nimport ns from '../../utils/ns.js';\n\nclass StringFilter extends Processor {\n    constructor(config) {\n        super(config);\n        this.initialized = false;\n        this.includePatterns = [];\n        this.excludePatterns = [];\n    }\n\n    async process(message) {\n        logger.log(`StringFilter.process, done=${message.done}`)\n        if (message.done) return this.emit('message', message);\n\n        await this.initialize();\n\n        // TODO path handling needs updating\n        if (!message.filepath) {\n            logger.warn('StringFilter: No filepath provided, terminating pipe');\n            return;\n        }\n\n        const relativePath = message.filepath;\n        logger.debug(`StringFilter checking path = ${relativePath}`);\n\n        if (this.isAccepted(relativePath)) {\n            return this.emit('message', message);\n        }\n    }\n\n    async initialize() {\n        if (this.initialized) return;\n\n        try {\n            if (this.settings) {\n                const includeStr = this.getProperty(ns.trn.includePatterns);\n                const excludeStr = this.getProperty(ns.trn.excludePatterns);\n\n                this.includePatterns = includeStr ? includeStr.split(',').map(p => p.trim()) : [];\n                this.excludePatterns = excludeStr ? excludeStr.split(',').map(p => p.trim()) : [];\n            }\n\n            logger.debug(`StringFilter initialized with:\n                Include patterns: ${this.includePatterns}\n                Exclude patterns: ${this.excludePatterns}`);\n\n        } catch (err) {\n            logger.error('Error initializing StringFilter:', err);\n            throw err;\n        }\n\n        this.initialized = true;\n    }\n\n\n\n    isAccepted(filePath) {\n        // If no patterns defined, accept all\n        if (this.includePatterns.length === 0 && this.excludePatterns.length === 0) {\n            return true;\n        }\n\n        // Check exclude patterns first\n        if (this.matchesAnyPattern(filePath, this.excludePatterns)) {\n            return false;\n        }\n\n        // If include patterns exist, file must match at least one\n        if (this.includePatterns.length > 0) {\n            return this.matchesAnyPattern(filePath, this.includePatterns);\n        }\n\n        return true;\n    }\n\n    matchesAnyPattern(filePath, patterns) {\n        return patterns.some(pattern => this.matchPattern(filePath, pattern));\n    }\n\n    matchPattern(filePath, pattern) {\n        const regexPattern = pattern\n            .replace(/\\./g, '\\\\.')\n            .replace(/\\*/g, '.*')\n            .replace(/\\?/g, '.');\n        const regex = new RegExp(`^${regexPattern}$`);\n\n        const filename = path.basename(filePath);\n        return regex.test(filename) || regex.test(filePath);\n    }\n}\n\nexport default StringFilter;",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\n// OLD : PRE-REFACTOR\nclass StringMerger extends Processor {\n    constructor(config) {\n        super(config)\n        this.merged = ''\n    }\n\n    async process(message) {\n        logger.log('SMDATA*********************************\\n' + data)\n\n        if (data === '~~done~~') {\n            logger.log('SM  DONE**********************************\\n' + this.merged)\n            return this.emit('message', this.merged, message)\n            return\n        }\n        this.merged = this.merged + data\n\n    }\n}\n\nexport default StringMerger",
      "// src/processors/text/StringReplace.js\n/**\n * @class StringReplace\n * @extends Processor\n * @classdesc\n * **a Transmissions Processor**\n *\n * Replaces all occurrences of a specified substring in the content with a replacement string.\n *\n * ### Signature\n *\n * #### __*Input*__\n * * **`message.content`** - The original string content\n * * **`message.match`** - The substring to be replaced\n * * **`message.replace`** - The replacement string\n *\n * #### __*Output*__\n * * **`message.content`** - The modified string with replacements\n *\n * #### __*Behavior*__\n * * Replaces every exact occurrence of `message.match` in `message.content` with `message.replace`\n * * If `message.match` is not found, the content remains unchanged\n *\n * #### __Tests__\n * * TODO: Add test information\n */\n\nimport ns from '../../utils/ns.js'\nimport logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass StringReplace extends Processor {\n    constructor(config) {\n        super(config)\n    }\n\n    /**\n     * Executes the string replacement process\n     * @param {Object} message - The message object containing content, match, and replace strings\n     */\n    async process(message) {\n        // logger.setLogLevel('debug')\n        const inputField = this.getProperty(ns.trn.inputField)\n        const outputField = this.getProperty(ns.trn.outputField)\n\n        var match = message.match ? message.match : this.getProperty(ns.trn.match)\n        var replace = message.replace ? message.replace : this.getProperty(ns.trn.replace)\n\n        var input = message.input ? message.input : message[inputField]\n        if (!input) {\n            input = message.content\n        }\n\n        logger.debug('StringReplace.process input = ' + input)\n\n        // global s & r\n        const output = input.split(match).join(replace)\n\n        logger.debug('StringReplace output: ' + output)\n        try {\n            message[outputField] = output\n        } catch {\n            message.content = output\n        }\n        return this.emit('message', message)\n    }\n}\n\nexport default StringReplace",
      "// src/processors/text/Templater.js\n/**\n * @class Templater\n * @extends Processor\n * @classdesc\n * **a Transmissions Processor**\n *\n * Provides templating functionality using Nunjucks.\n *\n * #### __*Input*__\n * * **`message.templateFilename`** - Path to the template file (optional)\n * * **`message.template`** - Template string (used if templateFilename is not provided)\n * * **`message.contentBlocks`** - Object with properties for template rendering (e.g., title, body)\n *\n * #### __*Output*__\n * * **`message.content`** - The rendered template content\n *\n * #### __*Behavior*__\n * * Uses Nunjucks to render templates\n * * Can render from a template file or a template string\n * * Applies content from message.contentBlocks to the template\n *\n * #### __Tests__\n * *\n *\n  * #### __TODO__\n * * Add test information here\n * * Cache templates - cache in utils?\n */\n\nimport Processor from '../base/Processor.js'\nimport nunjucks from 'nunjucks'\nimport path from 'path'\nimport logger from '../../utils/Logger.js'\nimport ns from '../../utils/ns.js'\n\nclass Templater extends Processor {\n    constructor(config) {\n        super(config)\n    }\n\n    /**\n     * Executes the templating process\n     * @param {Object} message - The message object containing template and content information\n     */\n    async process(message) {\n        logger.setLogLevel('debug')\n        //   logger.log(this.getPropertyFromMyConfig(ns.trn.templateFilename))\n        //    this.addPropertyToMyConfig(ns.trn.templateFilename, 'poo')\n        //   this.showMyConfig()\n        var templateFilename = this.getProperty(ns.trn.templateFilename)\n\n        logger.debug(`\\nTemplater.process, templateFilename = ${templateFilename}`)\n        // process.exit()\n\n        if (templateFilename) {\n            //       logger.debug(`\\nTemplater.process, templateFilename = ${templateFilename}`)\n\n            // Extract path and filename from templateFilename\n            var targetPath = templateFilename.substr(0, templateFilename.lastIndexOf(\"/\"))\n            const filename = templateFilename.substr(templateFilename.lastIndexOf(\"/\") + 1)\n\n            if (!path.isAbsolute(targetPath)) {\n                targetPath = path.join(this.getProperty(ns.trn.targetPath, message.rootDir), targetPath)\n            }\n\n            logger.debug('\\nTemplater, targetPath = ' + targetPath)\n            logger.debug('Templater, filename = ' + filename)\n\n            // Configure Nunjucks with the template path\n            nunjucks.configure(targetPath, { autoescape: false })\n\n            //   logger.debug(`content PRE = ${message.content}`)\n            // Render the template file\n            message.content = nunjucks.render(filename, message.contentBlocks)\n\n            logger.debug(`content POST = ${message.content}`)\n\n\n        } else {   // Configure Nunjucks for string templates\n            // TODO priorities\n\n            nunjucks.configure({ autoescape: false })\n\n            //    logger.reveal(message)\n            // Render the template string\n            message.content = nunjucks.renderString(message.template, message.contentBlocks)\n        }\n\n        return this.emit('message', message)\n    }\n}\nexport default Templater",
      "import ns from '../../utils/ns.js'\n\nimport LineReader from './LineReader.js'\nimport StringFilter from './StringFilter.js'\nimport StringMerger from './StringMerger.js'\nimport StringReplace from './StringReplace.js'\nimport Templater from './Templater.js'\n\nclass TextProcessorsFactory {\n    static createProcessor(type, config) {\n\n        if (type.equals(ns.trn.Templater)) {\n            return new Templater(config)\n        }\n        if (type.equals(ns.trn.LineReader)) {\n            return new LineReader(config)\n        }\n\n        if (type.equals(ns.trn.StringFilter)) {\n            return new StringFilter(config)\n        }\n\n        if (type.equals(ns.trn.StringMerger)) {\n            return new StringMerger(config)\n        }\n\n        if (type.equals(ns.trn.StringReplace)) {\n            return new StringReplace(config)\n        }\n\n        //     if (type.equals(ns.trn.CommentStripper)) {\n        //       return new CommentStripper(config)\n        // }\n\n        return false\n    }\n}\n\nexport default TextProcessorsFactory",
      "import { exec } from 'child_process';\nimport logger from '../../utils/Logger.js';\nimport Processor from '../base/Processor.js';\nimport ns from '../../utils/ns.js';\n\nclass RunCommand extends Processor {\n    constructor(config) {\n        super(config);\n        this.allowedCommands = config.allowedCommands || [];\n        this.blockedPatterns = config.blockedPatterns || [];\n        this.timeout = config.timeout || 5000;\n        this.initializeSecurity();\n    }\n\n    async initializeSecurity() {\n        if (this.settings) {\n            const allowed = await this.getPropertyFromMyConfig(ns.trn.allowedCommands);\n            this.allowedCommands = allowed ? allowed.split(',') : [];\n\n            const blocked = await this.getPropertyFromMyConfig(ns.trn.blockedPatterns);\n            this.blockedPatterns = blocked ? blocked.split(',') : [];\n        }\n    }\n\n    validateCommand(command) {\n        if (!command) {\n            throw new Error('No command specified');\n        }\n\n        const commandName = command.split(' ')[0];\n        const isAllowed = this.allowedCommands.length === 0 ||\n            this.allowedCommands.includes(commandName);\n\n        if (!isAllowed) {\n            throw new Error(`Command '${commandName}' not in allowed list`);\n        }\n\n        const hasBlocked = this.blockedPatterns.some(pattern =>\n            command.includes(pattern)\n        );\n        if (hasBlocked) {\n            throw new Error('Command contains blocked pattern');\n        }\n    }\n\n    async process(message) {\n        let command = message.command;\n        if (!command) {\n            command = this.getPropertyFromMyConfig(ns.trn.command);\n        }\n\n        try {\n            this.validateCommand(command);\n            const result = await this.executeCommand(command);\n            message.content = result.stdout;\n            message.commandResult = result;\n            logger.debug(`Command executed successfully: ${command}`);\n        } catch (error) {\n            logger.error(`Command error: ${error.message}`);\n            message.commandError = error.message;\n            message.content = error.message;\n            throw error;\n        }\n\n        return this.emit('message', message);\n    }\n\n    executeCommand(command) {\n        return new Promise((resolve, reject) => {\n            const child = exec(command, {\n                timeout: this.timeout\n            }, (error, stdout, stderr) => {\n                if (error) {\n                    if (error.signal === 'SIGTERM') {\n                        reject(new Error('Command timeout'));\n                    } else {\n                        reject(error);\n                    }\n                    return;\n                }\n                resolve({\n                    stdout: stdout.toString(),\n                    stderr: stderr.toString(),\n                    code: 0\n                });\n            });\n        });\n    }\n}\n\nexport default RunCommand;",
      "// import logger from '../../utils/Logger.js'\nimport ns from '../../utils/ns.js'\n\n\nimport RunCommand from './RunCommand.js'\n\n\nclass UnsafeProcessorsFactory {\n    static createProcessor(type, config) {\n\n        if (type.equals(ns.trn.RunCommand)) {\n            return new RunCommand(config)\n        }\n\n        return false\n    }\n}\nexport default UnsafeProcessorsFactory",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass CaptureAll extends Processor {\n    constructor(config) {\n        // Ensure whiteboard is initialized as an array\n        if (!config.whiteboard || !Array.isArray(config.whiteboard)) {\n            config.whiteboard = [];\n        }\n        super(config)\n\n        if (CaptureAll.singleInstance) {\n            return CaptureAll.singleInstance\n        }\n        CaptureAll.singleInstance = this\n    }\n\n    async process(message) {\n        logger.log(`CaptureAll at [${message.tags}] ${this.getTag()}, done=${message.done}`)\n        this.config.whiteboard.push(message)\n        return this.emit('message', message)\n    }\n}\n\nexport default CaptureAll",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\nimport GrapoiHelpers from '../../utils/GrapoiHelpers.js'\nimport ns from '../../utils/ns.js'\nimport rdf from 'rdf-ext'\n\nclass SetMessage extends Processor {\n\n    constructor(config) {\n        super(config)\n        logger.log('SetMessage constructor')\n    }\n\n    async process(message) {\n        logger.setLogLevel('debug')\n        const setters = await this.getSetters(this.config, this.settings, ns.trn.setValue)\n        for (let i = 0; i < setters.length; i++) {\n            message[setters[i].key] = setters[i].value\n        }\n        return this.emit('message', message)\n    }\n\n    async getSetters(config, settings, term) { // TODO refactor - is same in RestructureJSON\n        logger.debug(`***** config = ${config}`)\n        logger.debug(`***** settings.value = ${settings.value}`)\n        logger.debug(`***** term = ${term}`)\n        const settersRDF = GrapoiHelpers.listToArray(config, settings, term)\n        const dataset = this.config\n        var setters = []\n        for (let i = 0; i < settersRDF.length; i++) {\n            let setter = settersRDF[i]\n            let poi = rdf.grapoi({ dataset: dataset, term: setter })\n            let key = poi.out(ns.trn.key).value\n            let value = poi.out(ns.trn.value).value\n            setters.push({ \"key\": key, \"value\": value })\n        }\n        return setters\n    }\n}\n\nexport default SetMessage\n",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass ShowConfig extends Processor {\n\n    constructor(config) {\n        super(config)\n        this.verbose = false\n    }\n\n    async process(message) {\n\n        //    logger.log(\"\\n\\nStringSink outputs : \\\"\" + data + \"\\\"\\n\\n\")\n\n        if (this.verbose) logger.log(\"\\n***  Show Config ***\")\n\n\n        logger.log(\"***************************\")\n        logger.log(\"***  Config\")\n        logger.reveal(this.config) // TODO the rest\n        logger.log(\"***************************\")\n        //     logger.log(\"***  Trace\")\n        //   console.trace() // move to Logger, only when debugging\n        // logger.log(\"***************************\")\n\n        return this.emit('message', message)\n    }\n}\n\nexport default ShowConfig\n",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass ShowMessage extends Processor {\n\n    constructor(config) {\n        super(config)\n        this.verbose = false\n    }\n\n    async process(message) {\n\n        //    logger.log(\"\\n\\nStringSink outputs : \\\"\" + data + \"\\\"\\n\\n\")\n\n        if (this.verbose) logger.log(\"\\n***  Show Message ***\")\n\n        logger.log(\"***************************\")\n        logger.log(\"***  Message\")\n        logger.reveal(message)\n        logger.log(\"***************************\")\n        //     logger.log(\"***  Trace\")\n        //   console.trace() // move to Logger, only when debugging\n        // logger.log(\"***************************\")\n\n        return this.emit('message', message)\n    }\n}\n\nexport default ShowMessage\n",
      "import logger from '../../utils/Logger.js'\nimport ns from '../../utils/ns.js'\nimport Processor from '../base/Processor.js'\n\nclass ShowSettings extends Processor {\n\n    constructor(config) {\n        super(config)\n        //   this.verbose = false\n    }\n\n    async process(message) {\n        logger.setLogLevel('debug')\n        logger.debug(`ShowSettings.process`)\n\n        const property = ns.trn.name\n\n        logger.debug(`ShowSettings.process, property = ${property}`)\n\n        const value = this.getProperty(property)\n\n        logger.debug(`ShowSettings.process, value  = ${value}`)\n\n        return this.emit('message', message)\n    }\n}\n\nexport default ShowSettings\n",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass ShowTransmission extends Processor {\n\n    async process(message) {\n        logger.log(this.transmission.toString())\n        return this.emit('message', message)\n    }\n}\n\nexport default ShowTransmission\n",
      "import rdf from 'rdf-ext'\nimport { fromFile, toFile } from 'rdf-utils-fs'\nimport Processor from '../base/Processor.js'\n\n/**\n * Takes the input and stashes it in the message as told by processors.ttl\n * \n * #### __*Input*__\n * **data** : any\n * **message** : any\n * #### __*Output*__\n * **data** : as Input\n * **message** : adds key:value determined by processors.ttl\n * @extends Processor\n */\nclass Stash extends Processor {\n\n    /**\n     * Create a DatasetReader.\n     * @param {Object} config - The configuration object.\n     */\n    constructor(config) {\n        super(config)\n    }\n\n    /**\n     * Execute the DatasetReader processor.\n     * @param {string} data -.\n     * @param {Object} message - .\n     */\n    async process(message) {\n        const manifestFilename = rootDir + '/manifest.ttl'\n        const stream = fromFile(manifestFilename)\n\n        // should append RDF to incoming\n        message.rootDir = rootDir\n        message.dataset = await rdf.dataset().import(stream)\n        return this.emit('message', message)\n    }\n}\nexport default Stash",
      "import logger from '../../utils/Logger.js'\nimport ns from '../../utils/ns.js'\n\nimport ShowMessage from './ShowMessage.js'\nimport ShowTransmission from './ShowTransmission.js'\nimport CaptureAll from './CaptureAll.js'\nimport ShowConfig from './ShowConfig.js'\nimport WhiteboardToMessage from './WhiteboardToMessage.js'\nimport SetMessage from './SetMessage.js'\nimport ShowSettings from './ShowSettings.js'\nShowSettings\n\nclass UtilProcessorsFactory {\n    static createProcessor(type, config) {\n\n        if (type.equals(ns.trn.ShowMessage)) {\n            return new ShowMessage(config)\n        }\n        if (type.equals(ns.trn.ShowTransmission)) {\n            return new ShowTransmission(config)\n        }\n        if (type.equals(ns.trn.CaptureAll)) {\n            return new CaptureAll(config)\n        }\n        if (type.equals(ns.trn.ShowConfig)) {\n            return new ShowConfig(config)\n        }\n        if (type.equals(ns.trn.WhiteboardToMessage)) {\n            return new WhiteboardToMessage(config)\n        }\n        if (type.equals(ns.trn.SetMessage)) {\n            return new SetMessage(config)\n        }\n        if (type.equals(ns.trn.ShowSettings)) {\n            return new ShowSettings(config)\n        }\n        return false\n    }\n}\nexport default UtilProcessorsFactory",
      "import logger from '../../utils/Logger.js'\nimport Processor from '../base/Processor.js'\n\nclass WhiteboardToMessage extends Processor {\n\n    constructor(config) {\n        super(config);\n    }\n    async process(message) {\n\n        logger.log('WhiteboardToMessage at [' + message.tags + '] ' + this.getTag())\n\n        const originalArray = this.config.whiteboard\n\n        message.whiteboard = Object.keys(originalArray).reduce((acc, key) => {\n            const value = originalArray[key];\n            if (value !== undefined && value !== null) {\n                Object.keys(value).forEach((prop) => {\n                    if (!acc[prop]) {\n                        acc[prop] = [];\n                    }\n                    acc[prop].push(value[prop]);\n                });\n            }\n            return acc;\n        }, {});\n\n        return this.emit('message', message)\n    }\n}\n\nexport default WhiteboardToMessage\n",
      "import logger from \"../../utils/Logger.js\"; // path will likely change\nimport Processor from \"../base/Processor.js\"; // maybe more specific\n\n/**\n * FileReader class that extends xxxxxProcessor.\n * DESCRIPTION\n * #### __*Input*__\n * **message.INPUT**\n * #### __*Output*__\n * **message.OUTPUT**\n */\nclass XmppClient extends Processor {\n  /**\n   * Constructs a new ProcessorExample instance.\n   * @param {Object} config - The configuration object.\n   */\n  constructor(config) {\n    super(config);\n  }\n\n  /**\n   * Does something with the message and emits a 'message' event with the processed message.\n   * @param {Object} message - The message object.\n   */\n  async process(message) {\n    logger.setLogLevel(\"debug\");\n\n    // processing goes here\n    return this.emit(\"message\", message);\n  }\n}\n\nexport default XmppClient\n",
      "import logger from \"../../utils/Logger.js\";\nimport ns from \"../../utils/ns.js\";\n\nimport ProcessorTemplate from \"./XmppClient.js\";\n\n// ref needed in transmissions/src/processors/base/AbstractProcessorFactory.js\n\nclass XmppProcessorsFactory {\n  static createProcessor(type, config) {\n    if (type.equals(ns.trn.XmppClient)) {\n      return new XmppClient(config)\n    }\n    return false\n  }\n}\nexport default XmppProcessorsFactory\n",
      "node src/apps-simple/env-loader/env-loader.js\n\nfrom:\n\n:envy a trm:Pipeline ;\n\n# trm:pipe (:SC :s10 :s20 :SM) .\n\ntrm:pipe (:p10 :p20 :SC) .\n:p10 a :EnvLoader .\n:p20 a :WhiteboardToMessage .\n",
      "import logger from '../../utils/Logger.js'\nimport EnvLoader from '../../processors/system/EnvLoader.js'\nimport WhiteboardToMessage from '../../processors/util/WhiteboardToMessage.js'\n\nlogger.log('EnvLoader simple')\n\nconst config = { whiteboard: [] }\n\nconst p10 = new EnvLoader(config)\np10.id = 'http://purls.org/stuff/#p10'\n\nconst p20 = new WhiteboardToMessage(config)\np10.id = 'http://purls.org/stuff/#p20'\n\nvar message = {\n    \"dataDir\": \"src/applications/env-loader-test/data\",\n    \"rootDir\": \"[no key]\",\n    \"tags\": \"SM\"\n}\n\nconst x = 3\n\nmessage = await p10.process(message)\n\nlogger.log('p10 output ' + p10.getTag() + message)\n\nmessage = await p20.process(message)\n\nlogger.log('p20 output ')\n\nlogger.reveal(message)",
      "import logger from '../../utils/Logger.js'\n// import EnvLoader from '../../processors/system/EnvLoader.js'\n// import WhiteboardToMessage from '../../processors/util/WhiteboardToMessage.js'\nimport NOP from '../../processors/flow/NOP.js'\nlogger.log('NOP simple')\n\nconst config = {\n    \"runmode\": \"functions\",\n    whiteboard: []\n}\n\nconst p10 = new NOP(config)\np10.id = 'http://purls.org/stuff/#p10'\n\n\nvar message = {\n    \"test\": \"test string\",\n    \"dataDir\": \"src/applications/env-loader-test/data\",\n    \"rootDir\": \"[no key]\",\n    \"tags\": \"SM\"\n}\n\n\n\n\nmessage = await p10.process(message)\n\nlogger.log('p10 output ' + message)\n\n// message = await p20.process(message)\n// logger.log('p20 output ' + message)",
      "// nop.js\n// node src/simples/nop/nop.js\n\nimport NOP from '../../processors/flow/NOP.js'\n\nconst config = {\n    \"runmode\": \"functions\",\n    whiteboard: []\n}\n\nconst nop = new NOP(config)\n\nvar message = { 'value': '42' }\n\nmessage = await nop.process(message)\n\nconsole.log('value = ' + message.value)\n",
      "// simple-runner.js\nimport NOP from '../../processors/flow/NOP.js'\nimport Fork from '../../processors/flow/Fork.js'\n\n/*\nasync function runProcessor(processor, message) {\n    const outputs = await processor.process(message)\n    return outputs\n}\n*/\n\nasync function main() {\n    const config = {}\n    const nop = new NOP(config)\n    const fork = new Fork(config)\n\n    var message = { 'value': '42' }\n\n    // Run NOP\n    // message = await nop.execut(message)\n    var outputs = await nop.process(message)\n    console.log('NOP outputs:', outputs)\n\n    // Run Fork\n    message.nForks = 3\n    outputs = await fork.process(message)\n    console.log('Fork outputs:', outputs)\n}\n\nmain().catch(console.error)",
      "// set-message.js\n// node src/simples/set-message/set-message.js \n\nimport logger from '../../utils/Logger.js'\nimport SetMessage from '../../processors/util/SetMessage.js'\n\nconst config = {\n    \"runmode\": \"functions\",\n    whiteboard: []\n}\n\nconst setm = new SetMessage(config)\n\nvar message = { 'value': '42' }\n\nmessage = await setm.process(message)\n\nlogger.log('value = ' + message.value)\n\nlogger.reveal(message)\n",
      "import rdf from 'rdf-ext'\nimport grapoi from 'grapoi'\nimport { fromFile, toFile } from 'rdf-utils-fs'\nimport ns from './ns.js'\nimport logger from './Logger.js'\n\n// probably already exist - ask Bergi\n\nclass GrapoiHelpers {\n\n    // file utils\n    static async readDataset(filename) {\n        const stream = fromFile(filename)\n        const dataset = await rdf.dataset().import(stream)\n        return dataset\n    }\n\n    static async writeDataset(dataset, filename) {\n        await toFile(dataset.toStream(), filename)\n    }\n\n    // follows chain in rdf:List\n    static listToArray(dataset, term, property) {\n        const poi = rdf.grapoi({ dataset: dataset, term: term })\n        const first = poi.out(property).term\n\n        let p = rdf.grapoi({ dataset, term: first })\n        let object = p.out(ns.rdf.first).term\n        //  logger.log('object = ' + object.value)\n        const result = [object]\n\n        while (true) {\n            let restHead = p.out(ns.rdf.rest).term\n            let p2 = rdf.grapoi({ dataset, term: restHead })\n            let object = p2.out(ns.rdf.first).term\n         //   logger.log('restHead = ' + restHead.value)\n            if (restHead.equals(ns.rdf.nil)) break\n            result.push(object)\n            p = rdf.grapoi({ dataset, term: restHead })\n        }\n        return result\n    }\n\n\n\n    // unused & untested\n    // [subjects] predicate ->  [objects]\n    static listObjects(dataset, subjectList, predicate) {\n        const objects = []\n        for (const subject of subjectList) {\n            logger.log(\"subject = \" + subject.value)\n            let p = rdf.grapoi({ dataset, term: subject })\n            let object = p.out(predicate).term\n            logger.log(\"object = \" + object.value)\n            objects.push(object)\n        }\n        return objects\n    }\n}\nexport default GrapoiHelpers",
      "import log from 'loglevel';\nimport fs from 'fs';\nimport chalk from 'chalk';\n\nconst logger = {};\n\n//  logger.log(`\\n\\nconfig dataset: ${[...config].map(q => `${q.subject.value} ${q.predicate.value} ${q.object.value}`).join('\\n')}`)\n\n\n// Map log levels to chalk styles\nconst LOG_STYLES = {\n    \"trace\": chalk.greenBright,\n    \"debug\": chalk.white,\n    \"info\": chalk.yellow,\n    \"warn\": chalk.red.italic,\n    \"error\": chalk.red.bold\n};\nconst LOG_LEVELS = [\"trace\", \"debug\", \"info\", \"warn\", \"error\"];\n\nlogger.logfile = 'latest.log';\nlogger.currentLogLevel = \"warn\";\n\nlog.setLevel(logger.currentLogLevel);\n\nlogger.getLevel = () => log.getLevel();\nlogger.enableAll = () => log.enableAll();\nlogger.disableAll = () => log.disableAll();\nlogger.setDefaultLevel = (level) => log.setDefaultLevel(level);\nlogger.getLogger = (name) => {\n    const namedLogger = log.getLogger(name);\n    return wrapLogger(namedLogger, name);\n};\n\nlogger.methodFactory = log.methodFactory;\n\nlogger.noConflict = () => log.noConflict();\n\nfunction wrapLogger(baseLogger, name = 'root') {\n    const wrapped = {};\n\n    wrapped.log = function (msg, level = \"info\") {  // Changed default to info\n        const timestamp = chalk.dim(`[${logger.timestampISO()}]`);\n        const levelStyle = LOG_STYLES[level] || LOG_STYLES[\"info\"];  // Fallback to info style\n        const levelTag = levelStyle(`[${level.toUpperCase()}]`);\n        const nameTag = chalk.green(`[${name}]`);\n        const message = levelStyle(msg);\n\n        //   const consoleMessage = `${timestamp} ${levelTag} ${nameTag} - ${message}`;\n        const consoleMessage = `${message}`;\n        const fileMessage = `[${logger.timestampISO()}] [${level.toUpperCase()}] [${name}] - ${msg}`;\n\n        baseLogger[level](consoleMessage);\n        logger.appendLogToFile(fileMessage);\n    };\n\n    LOG_LEVELS.forEach(level => {\n        wrapped[level] = (msg) => wrapped.log(msg, level);\n    });\n\n    wrapped.getLevel = () => baseLogger.getLevel();\n    wrapped.setLevel = (level, persist) => baseLogger.setLevel(level, persist);\n    wrapped.setDefaultLevel = (level) => baseLogger.setDefaultLevel(level);\n    wrapped.enableAll = () => baseLogger.enableAll();\n    wrapped.disableAll = () => baseLogger.disableAll();\n    wrapped.methodFactory = baseLogger.methodFactory;\n    wrapped.setMethodFactory = function (factory) {\n        baseLogger.methodFactory = factory;\n        baseLogger.rebuild();\n    };\n\n    return wrapped;\n}\n\nlogger.appendLogToFile = function (message) {\n    if (logger.logfile) {\n        fs.appendFileSync(logger.logfile, message + '\\n', 'utf8');\n    }\n}\n\nlogger.setLogLevel = function (logLevel = \"warn\", persist = true) {\n    logger.currentLogLevel = logLevel;\n    log.setLevel(logLevel, persist);\n}\n\nlogger.timestampISO = function () {\n    return new Date().toISOString();\n}\n\nlogger.log = function (msg, level = \"info\") {\n    const levelStyle = LOG_STYLES[level] || LOG_STYLES[\"info\"];\n    const message = levelStyle(msg);\n    const consoleMessage = `${message}`;\n    const fileMessage = `[${logger.timestampISO()}] [${level.toUpperCase()}] [root] - ${msg}`;\n    try {\n        //   console.log(`level = ${level}`)\n        // console.log(`consoleMessage = ${consoleMessage}`)\n\n        log[level](consoleMessage);\n        logger.appendLogToFile(fileMessage);\n    } catch (err) {\n        console.log(`wtf? ${err.message}`)\n    }\n\n}\n\nlogger.reveal = function (instance) {\n    if (!instance) {\n        logger.log('no instance defined', 'warn');\n        return;\n    }\n\n    const serialized = {};\n    logger.log('***    hidden keys :  ', 'debug');\n    const loglevel = logger.getLevel()\n    logger.setLogLevel('trace')\n\n    for (const key in instance) {\n        if (key === 'dataset') {\n            logger.log('[[dataset found, skipping]]', 'debug');\n            continue;\n        }\n\n        if (key.startsWith('_')) {\n            logger.log(`       ${key}`, 'debug');\n            continue;\n        }\n\n        if (instance.hasOwnProperty(key)) {\n            let value = instance[key];\n            if (value) {\n                if (Buffer.isBuffer(value)) {\n                    value = value.toString();\n                }\n                if (value.length > 100) {\n                    try {\n                        value = value.substring(0, 100) + '...';\n                    } catch (e) {\n                        value = value.slice(0, 99);\n                    }\n                }\n                serialized[key] = value;\n            } else {\n                serialized[key] = '[no key]';\n            }\n        }\n    }\n\n    const props = JSON.stringify(serialized, null, 2);\n    //  logger.log(`Instance of ${chalk.bold(instance.constructor.name)} with properties - \\n${props}`, 'trace');\n    logger.log(`Instance of ${chalk.yellow(chalk.bold(instance.constructor.name))} with properties - \\n${chalk.yellow(props)})`);\n    logger.setLogLevel(loglevel)\n}\n\nLOG_LEVELS.forEach(level => {\n    logger[level] = (msg) => logger.log(msg, level);\n});\n\nlogger.poi = function exploreGrapoi(grapoi, predicates, objects, subjects) {\n    console.log(chalk.bold('Properties of the Grapoi object:'));\n    for (const prop in grapoi) {\n        console.log(chalk.cyan(`\\t${prop}: ${grapoi[prop]}`));\n    }\n\n    console.log(chalk.bold('\\nPath:'));\n    const path = grapoi.out(predicates, objects).in(predicates, subjects);\n    for (const quad of path.quads()) {\n        console.log(chalk.cyan(`\\t${quad.predicate.value}: ${quad.object.value}`));\n    }\n}\n\nfunction handleExit(options, exitCode) {\n    if (options.cleanup) {\n        // Perform cleanup\n    }\n    if (exitCode || exitCode === 0) console.log(exitCode);\n    if (options.exit) process.exit();\n}\n\nprocess.on('exit', handleExit.bind(null, { cleanup: true }));\nprocess.on('SIGINT', handleExit.bind(null, { exit: true }));\nprocess.on('SIGUSR1', handleExit.bind(null, { exit: true }));\nprocess.on('SIGUSR2', handleExit.bind(null, { exit: true }));\nprocess.on('uncaughtException', handleExit.bind(null, { exit: true }));\n\n// TESTING\n// logger.setLogLevel('info')\n// logger.log('a log() message on info - show yellow, concise')\n// logger.debug('a debug() message on info -  dont show')\n// logger.setLogLevel('debug')\n// logger.log('a log() message on debug - show yellow, with prefix')\n// logger.debug('a debug() message on debug - show red, with prefix')\n\nexport default logger;",
      "/* TODO implement\n\nfilename/URI, meta, content\n*/",
      "import path from 'path'\nimport { fileURLToPath } from 'url'\n\nimport logger from './Logger.js'\n\n/*\nresolves paths so both runtime and tests work\n\nmust be a better way of doing this, but I can't be bothered looking today\n*/\n\nlet footpath = {}\n\nfootpath.resolve = function footpath(here, relative, start) {\n\n    const loggy = false\n    if (loggy) {\n        logger.debug(\"\\n*** start footpath.resolve ***\")\n        logger.debug(\"process.cwd() = \" + process.cwd())\n        logger.debug(\"here = \" + here)\n        logger.debug(\"relative = \" + relative)\n        logger.debug(\"start = \" + start)\n    }\n\n    const __filename = fileURLToPath(here)\n    const __dirname = path.dirname(__filename)\n    const rootDir = path.resolve(__dirname, relative)\n    const filePath = path.join(rootDir, start)\n\n    if (loggy) {\n        logger.debug(\"__filename = \" + __filename)\n        logger.debug(\"__dirname = \" + __dirname)\n        logger.debug(\"rootDir = \" + rootDir)\n        logger.debug(\"filePath = \" + filePath)\n        logger.debug(\"*** end footpath.resolve ***\\n\")\n    }\n\n    return filePath\n}\n\nfootpath.urlLastPart = function footpath(url = 'http://example.org/not-a-url') {\n    // logger.debug('url = ' + url)\n    //   try {\n    const urlObj = new URL(url);\n    const hash = urlObj.hash;\n    const path = urlObj.pathname;\n    const lastPart = hash ? hash.replace(/^#/, '') : path.split('/').pop();\n    // } catch {\n    //  return 'not-a-url'\n    //}\n    return lastPart;\n}\n\nexport default footpath",
      "import rdf from 'rdf-ext'\n\nconst ns = {\n    rdf: rdf.namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#'),\n    rdfs: rdf.namespace('http://www.w3.org/2000/01/rdf-schema#'),\n    dc: rdf.namespace('http://purl.org/dc/terms/'),\n    schema: rdf.namespace('http://schema.org/'),\n    xsd: rdf.namespace('http://www.w3.org/2001/XMLSchema#'),\n    trn: rdf.namespace('http://purl.org/stuff/transmissions/'),\n    //  t: rdf.namespace('http://hyperdata.it/transmissions/'),\n    //  fs: rdf.namespace('http://purl.org/stuff/filesystem/'),\n    //pc: rdf.namespace('http://purl.org/stuff/postcraft/')\n}\n\n//ns.getPrefix = function (nsObj) {\n//  return Object.keys(nsObj)[0];\n//}\n\nns.shortName = ns.getShortname = function (url) { // I keep mixing up the name\n\n    if (!url) return\n    url = url.toString()\n    const lastSlashIndex = url.lastIndexOf('/');\n    const lastHashIndex = url.lastIndexOf('#');\n    const path = url.slice(lastSlashIndex + 1);\n    return path.split('#')[0].split('?')[0];\n}\nexport default ns",
      "/*\n* Turtle to JSON-LD converter\n*/\n\nimport { Readable } from 'readable-stream'\nimport rdf from '@rdfjs/data-model'\nimport SerializerJsonld from '@rdfjs/serializer-jsonld'\nimport Serializer from '@rdfjs/serializer-turtle'\nimport N3Parser from '@rdfjs/parser-n3'\nimport { fromFile } from 'rdf-utils-fs'\nimport { toFile } from 'rdf-utils-fs'\n\nconst testTurtle = `\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix trm: <http://purl.org/stuff/transmission/> .\n@prefix : <https://hyperdata.it/transmissions/> . # for custom terms & instances\n\n:simplepipe a trm:TransmissionTransmission ;\n    trm:pipe (:s1 :s2 :s3) .\n\n:s1 a trm:StringSource .\n:s2 a trm:AppendProcess .\n:s3 a trm:StringSink .\n`\nexport class Turtle2JSONLD {\n    static async convert(turtle) {\n        // create N3 parser instance\n        let parser = new N3Parser({ factory: rdf })\n        //   const stream = Turtle2JSONLD.stringToStream(turtle)\n        //  let quadStream = parser.import(stream)\n\n        const input = Readable.from(turtle)\n\n        const output = parser.import(input)\n\n        const serializerJsonld = new SerializerJsonld()\n        const jsonStream = serializerJsonld.import(output)\n\n        //      let outputJson = ''\n\n        //            outputJson = outputJson + JSON.stringify(jsonld, null, 2)\n        //    })\n        const outputJson = await Turtle2JSONLD.streamToString(jsonStream)\n        return outputJson\n    }\n\n    static stringToStream(str) {\n        const stream = new Readable();\n        stream.push(str); // Add the string to the stream\n        stream.push(null); // Indicates that the stream has ended\n        return stream;\n    }\n\n    static streamToString(stream) {\n        const chunks = [];\n        return new Promise((resolve, reject) => {\n            stream.on('data', (chunk) => {\n                chunks.push(Buffer.from(chunk))\n                console.log('chunk:', chunk)\n            }\n            );\n            stream.on('error', (err) => reject(err));\n            stream.on('end', () => {\n                const result = Buffer.concat(chunks).toString('utf8')\n                resolve(result)\n                console.log('****************** result:', result)\n            });\n        })\n    }\n}\n\n// Convert a string to a stream\n\nconst testJson = await Turtle2JSONLD.convert(testTurtle)\nconsole.log('àààààààààààààààààààààà')\nconsole.log(testJson)\n\n",
      "\nimport fs from 'fs';\nimport path from 'path';\n\nconst testFiles = fs.readdirSync(__dirname).filter(file => file.startsWith('test_'));\n\ntestFiles.forEach(testFile => {\n    console.log(`Running ${testFile}`);\n    require(path.join(__dirname, testFile));\n});\n",
      "{\n  \"files\": {\n    \"../api/about.md\": {\n      \"content\": \"# transmissions/src/api/\\n\\nInterfaces for running transmissions.\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.314Z\"\n    },\n    \"../api/cli/about.md\": {\n      \"content\": \"# About : CLI\\n\\n`src/api/cli/*`\\n\\nThe CLI entry point `./trans` calls `src/api/cli/run.js` which uses [yargs](https://yargs.js.org/) - _tee hee_, they say it best :\\n\\n> Yargs be a node.js library fer hearties tryin' ter parse optstrings.\\n\\n`src/api/cli/run.js` then calls `src/api/common/CommandUtils.js`. That does a little bit of path-splitting and simple logic, calling on `src/core/ApplicationManager.js` to get things going.\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.323Z\"\n    },\n    \"../api/cli/run.js\": {\n      \"content\": \"import yargs from 'yargs'\\nimport { hideBin } from 'yargs/helpers'\\nimport CommandUtils from '../common/CommandUtils.js'\\nimport WebRunner from '../http/WebRunner.js'\\nimport chalk from 'chalk'\\n\\nconst defaultApplicationsDir = 'src/applications'\\nconst commandUtils = new CommandUtils(defaultApplicationsDir)\\n\\nimport { readFileSync } from 'fs';\\nimport { dirname, join } from 'path';\\nimport { fileURLToPath } from 'url';\\n\\nconst __dirname = dirname(fileURLToPath(import.meta.url));\\nconst packageJson = JSON.parse(readFileSync(join(__dirname, '../../../package.json')));\\nconst buildInfo = process.env.BUILD_INFO || 'dev';\\nconst version = `${packageJson.version} (${buildInfo})`;\\nconst banner = `\\n  _____\\n |_   _| __ __ _ _ __  ___\\n   | || '__/ _\\\\` | '_ \\\\\\\\/ __|\\n   | || | | (_| | | | \\\\\\\\__ \\\\\\\\\\n   |_||_|  \\\\\\\\__,_|_| |_|___/\\n             ${version.padStart(10).padEnd(20)}\\n         ${new Date().toISOString().split('T')[0]}\\n`;\\n\\nasync function main() {\\n    console.log(chalk.cyan(banner))\\n    const yargsInstance = yargs(hideBin(process.argv))\\n        .usage(chalk.cyan('Usage: ./trans [application][.subtask] [options] [target]\\\\n  Run without arguments to list available applications.'))\\n        .option('verbose', {\\n            alias: 'v',\\n            describe: chalk.yellow('Enable verbose output'),\\n            type: 'boolean'\\n        })\\n        .option('silent', {\\n            alias: 's',\\n            describe: chalk.yellow('Suppress all output'),\\n            type: 'boolean'\\n        })\\n        .option('message', {\\n            alias: 'm',\\n            describe: chalk.yellow('Input message as JSON'),\\n            type: 'string',\\n            coerce: JSON.parse\\n        })\\n        .option('web', {\\n            alias: 'w',\\n            describe: chalk.yellow('Start web interface'),\\n            type: 'boolean',\\n        })\\n        .option('port', {\\n            alias: 'p',\\n            describe: chalk.yellow('Port for web interface'),\\n            type: 'number',\\n            default: 3000\\n        })\\n        .command('$0 [application] [target]', chalk.green('runs the specified application\\\\n\\\\nExample: ./trans process.convert -m \\\\'{\\\"text\\\": \\\"hello\\\"}\\\\'\\\\n'), (yargs) => {\\n            return yargs\\n                .positional('application', {\\n                    describe: chalk.yellow('the application to run')\\n                })\\n                .positional('target', {\\n                    describe: chalk.yellow('the target of the application')\\n                })\\n        }, async (argv) => {\\n            if (argv.web) {\\n                const webRunner = new WebRunner(applicationsDir, argv.port)\\n                webRunner.start()\\n                return\\n            }\\n\\n            if (!argv.application) {\\n                console.log(chalk.cyan('Available applications:'))\\n                const apps = await commandUtils.listApplications()\\n                console.log(chalk.green(apps.join('\\\\n')))\\n                yargsInstance.showHelp()\\n                return\\n            }\\n            //  console.log(`In run.js :\\\\napplication : ${argv.application}\\\\ntarget : ${argv.target}\\\\nmessage : ${argv.message}`)\\n            await commandUtils.begin(argv.application, argv.target, argv.message, argv.verbose)\\n        })\\n        .help('h')\\n        .alias('h', 'help')\\n\\n    await yargsInstance.argv\\n}\\n\\nmain().catch(console.error)\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.337Z\"\n    },\n    \"../api/common/CommandUtils.js\": {\n      \"content\": \"// src/api/CommandUtils.js\\n\\nimport path from 'path'\\nimport fs from 'fs/promises'\\nimport logger from '../../utils/Logger.js'\\n\\nimport ApplicationManager from '../../core/ApplicationManager.js'\\n\\nclass CommandUtils {\\n\\n    #appManager\\n\\n    constructor() {\\n        this.#appManager = new ApplicationManager();\\n    }\\n\\n    async begin(application, target, message = {}, verbose, silent) {\\n\\n        var debugLevel = verbose ? \\\"debug\\\" : \\\"info\\\"\\n        logger.setLogLevel(debugLevel)\\n\\n        logger.debug('\\\\nCommandUtils.begin()')\\n        logger.debug('CommandUtils.begin, process.cwd() = ' + process.cwd())\\n        logger.debug('CommandUtils.begin, debugLevel = ' + debugLevel)\\n        logger.debug('CommandUtils.begin, application = ' + application)\\n        logger.debug('CommandUtils.begin, target = ' + target)\\n        logger.debug(`CommandUtils.begin, message = ${message}`)\\n\\n        // dir containing manifest\\n        if (target && !target.startsWith('/')) {\\n            target = path.join(process.cwd(), target)\\n        }\\n\\n        var { appName, appPath, subtask } = CommandUtils.splitName(application)\\n        // short name or path (TODO or URL)\\n\\n        logger.debug(`\\\\n\\n    after split :\\n    appName = ${appName}\\n    appPath = ${appPath}\\n    subtask = ${subtask}\\n    target = ${target}`)\\n\\n\\n\\n        await this.#appManager.initialize(appName, appPath, subtask, target)\\n\\n        return await this.#appManager.start(message)\\n    }\\n\\n    static splitName(fullPath) {\\n        logger.debug(`\\\\nCommandUtils.splitName, fullPath  = ${fullPath}`)\\n        const parts = fullPath.split(path.sep)\\n        logger.debug(`\\\\nCommandUtils.splitName, parts  = ${parts}`)\\n        var lastPart = parts[parts.length - 1]\\n\\n        var task = false\\n        if (lastPart.includes('.')) {\\n            const split = lastPart.split('.')\\n            task = split[1]\\n            lastPart = split[0]\\n        }\\n        var appPath = parts.slice(0, parts.length - 1).join(path.sep)\\n        appPath = path.join(appPath, lastPart)\\n        //  logger.debug(`\\\\nCommandUtils.splitName, parts.slice(0, parts.length - 1) = ${parts.slice(0, parts.length - 1)}`)\\n\\n        // const appPath = parts.join(path.sep)\\n        logger.debug(`CommandUtils.splitName, appName:${lastPart}, appPath:${appPath}, task:${task},`)\\n\\n        return { appName: lastPart, appPath: appPath, task: task }\\n    }\\n\\n    async listApplications() {\\n        return await this.#appManager.listApplications()\\n    }\\n\\n    // TODO appears to be unused\\n    static async parseOrLoadContext(contextArg) { // TODO rename context -> message\\n        logger.debug(`CommandUtils.parseOrLoadContext(), contextArg = ${contextArg}`)\\n        let message = {}\\n        try {\\n            message.payload = JSON.parse(contextArg)\\n        } catch (err) {\\n            logger.debug('*** Loading JSON from file...')\\n            const filePath = path.resolve(contextArg)\\n            const fileContent = await fs.readFile(filePath, 'utf8')\\n            message.payload = JSON.parse(fileContent)\\n        }\\n        return message\\n    }\\n}\\n\\nexport default CommandUtils\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.356Z\"\n    },\n    \"../api/http/WebRunner.js\": {\n      \"content\": \"// src/web/WebRunner.js\\nimport express from 'express'\\n\\nimport ApplicationManager from '../../core/ApplicationManager.js'\\nimport logger from '../../utils/Logger.js'\\n\\nclass WebRunner {\\n    constructor(appsDir, port = 7247) { // was  3000\\n        this.appManager = new ApplicationManager(appsDir)\\n        //  this.runner = new TransmissionRunner()\\n        this.app = express()\\n        this.port = port\\n\\n        this.setupRoutes()\\n    }\\n\\n    setupRoutes() {\\n        this.app.use(express.json())\\n\\n        this.app.get('/applications', async (req, res) => {\\n            const apps = await this.appManager.listApplications()\\n            res.json(apps)\\n        })\\n\\n        this.app.post('/run/:application', async (req, res) => {\\n            const { application } = req.params\\n            const { target, message } = req.body\\n\\n            try {\\n\\n                //  const config = await this.appManager.getApplicationConfig(application)\\n                await this.appManager.initialize()\\n\\n                const result = await this.appManager.run({\\n                    ...config,\\n                    message,\\n                    target\\n                })\\n\\n                res.json(result)\\n            } catch (error) {\\n                logger.error('Error running application:', error)\\n                res.status(500).json({\\n                    success: false,\\n                    error: error.message\\n                })\\n            }\\n        })\\n    }\\n\\n    start() {\\n        this.app.listen(this.port, () => {\\n            logger.log(`Web interface running on port ${this.port}`)\\n        })\\n    }\\n}\\n\\nexport default WebRunner\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.379Z\"\n    },\n    \"../applications/claude-json-converter/about.md\": {\n      \"content\": \"```sh\\ncd ~/github-danny/transmissions/\\n./trans claude-json-converter\\n\\n# -P src/applications/claude-json-converter/data/input/conversations.json\\n```\\n\\nAfter `FileReader` (and `Blanker`):\\n\\n```\\n{\\n    // system message bits,\\n\\n    \\\"content\\\": [\\n        {\\n            \\\"uuid\\\": \\\"\\\",\\n            \\\"name\\\": \\\"\\\",\\n            \\\"created_at\\\": \\\"\\\",\\n            \\\"updated_at\\\": \\\"\\\",\\n            \\\"account\\\": {\\n                \\\"uuid\\\": \\\"\\\"\\n            },\\n            \\\"chat_messages\\\": [\\n                {\\n                    \\\"uuid\\\": \\\"\\\",\\n                    \\\"text\\\": \\\"\\\",\\n                    \\\"content\\\": [\\n                        {\\n                            \\\"type\\\": \\\"\\\",\\n                            \\\"text\\\": \\\"\\\"\\n                        }\\n                    ],\\n                    \\\"sender\\\": \\\"\\\",\\n                    \\\"created_at\\\": \\\"\\\",\\n                    \\\"updated_at\\\": \\\"\\\",\\n                    \\\"attachments\\\": [],\\n                    \\\"files\\\": [\\n                        {\\n                            \\\"file_name\\\": \\\"\\\"\\n                        }\\n                    ]\\n                },\\n                {\\n                    ...\\n                }\\n            ]\\n        }\\n}\\n```\\n\\n`JSONWalker` fires off a message per-conversation.\\n\\nThese need `Restructure` to split off the common metadata as `message.content`, and move `chat_messages` to `message.content`, ready for -\\n\\n`JSONWalker` fires off a message per-conversation.\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.387Z\"\n    },\n    \"../applications/example-application/about.md\": {\n      \"content\": \"`src/applications/example-application/about.md`\\n\\n# Example Application `about.md`\\n\\n## Runner\\n\\n```sh\\ncd ~/github-danny/transmissions # my local path\\n./trans example-application\\n```\\n\\n## Description\\n\\n---\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.394Z\"\n    },\n    \"../applications/globbo/about.md\": {\n      \"content\": \"# Globbo\\n\\n```\\n./run globbo -c '{\\\"rootDir\\\": \\\"./\\\", \\\"sourceDir\\\":\\\"docs\\\"}'\\n```\\n\\nthere are more notes under\\n\\n/home/danny/github-danny/transmissions/docs/postcraft-site/articles/new-application-walkthrough.md\\n\\n/home/danny/github-danny/transmissions/docs/postcraft-site/articles/new-service-walkthrough.md\\n\\n## Description\\n\\n- Goal : a tool to recursively read local filesystem directories, checking for files with the `.md` extension to identify collections of such\\n- Goal : documentation of the app creation process\\n- Implementation : a #Transmissions application\\n- SoftGoal : reusability\\n- _non-goal_ - efficiency\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.411Z\"\n    },\n    \"../applications/html-to-md/about.md\": {\n      \"content\": \"# HTML to Markdown\\n\\n*a minimal application (that I need) which can also serve as an example in documentation*\\n\\n```\\n./run html-to-md -c '{\\\"rootDir\\\": \\\"./test-data/html-to-md\\\", \\\"filename\\\":\\\"webidl.html\\\"}'\\n```\\n\\n## Description\\n\\n---\\n\\nthere are more notes under\\n\\n/home/danny/github-danny/transmissions/docs/postcraft-site/articles/new-application-walkthrough.md\\n\\n/home/danny/github-danny/transmissions/docs/postcraft-site/articles/new-service-walkthrough.md\\n\\n## Description\\n\\n- Goal : a tool to recursively read local filesystem directories, checking for files with the `.md` extension to identify collections of such\\n- Goal : documentation of the app creation process\\n- Implementation : a #Transmissions application\\n- SoftGoal : reusability\\n- _non-goal_ - efficiency\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.424Z\"\n    },\n    \"../applications/link-lister/about.md\": {\n      \"content\": \"run.js had\\n\\nconst here = import.meta.url\\nconst message = { runScript: here }\\n\\ntransmission.process('', message)\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.440Z\"\n    },\n    \"../applications/link-lister/data/links.md\": {\n      \"content\": \"\\n[Main page](https://en.wikipedia.org/wiki/Main_Page)\\n[Contents](https://en.wikipedia.org/wiki/Wikipedia:Contents)\\n[Current events](https://en.wikipedia.org/wiki/Portal:Current_events)\\n[Random article](https://en.wikipedia.org/wiki/Special:Random)\\n[About Wikipedia](https://en.wikipedia.org/wiki/Wikipedia:About)\\n[Contact us](https://en.wikipedia.org/wiki/Wikipedia:Contact_us)\\n[Donate](https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&utm_medium=sidebar&utm_campaign=C13_en.wikipedia.org&uselang=en)\\n[Help](https://en.wikipedia.org/wiki/Help:Contents)\\n[Learn to edit](https://en.wikipedia.org/wiki/Help:Introduction)\\n[Community portal](https://en.wikipedia.org/wiki/Wikipedia:Community_portal)\\n[Recent changes](https://en.wikipedia.org/wiki/Special:RecentChanges)\\n[Upload file](https://en.wikipedia.org/wiki/Wikipedia:File_upload_wizard)\\n[\\n\\t\\n\\t\\n\\t\\t\\n\\t\\t\\n\\t\\n](https://en.wikipedia.org/wiki/Main_Page)\\n[\\n\\nSearch\\n\\t](https://en.wikipedia.org/wiki/Special:Search)\\n[Create account](https://en.wikipedia.org/w/index.php?title=Special:CreateAccount&returnto=FOAF)\\n[Log in](https://en.wikipedia.org/w/index.php?title=Special:UserLogin&returnto=FOAF)\\n[ Create account](https://en.wikipedia.org/w/index.php?title=Special:CreateAccount&returnto=FOAF)\\n[ Log in](https://en.wikipedia.org/w/index.php?title=Special:UserLogin&returnto=FOAF)\\n[learn more](https://en.wikipedia.org/wiki/Help:Introduction)\\n[Contributions](https://en.wikipedia.org/wiki/Special:MyContributions)\\n[Talk](https://en.wikipedia.org/wiki/Special:MyTalk)\\n\\n## Contents\\n\\n\\n# FOAF\\n\\n[Català](https://ca.wikipedia.org/wiki/FOAF)\\n[Deutsch](https://de.wikipedia.org/wiki/FOAF)\\n[Español](https://es.wikipedia.org/wiki/FOAF)\\n[فارسی](https://fa.wikipedia.org/wiki/%D8%A7%D9%81%E2%80%8C%D8%A7%D9%88%D8%A7%DB%8C%E2%80%8C%D8%A7%D9%81_(%D9%87%D8%B3%D8%AA%DB%8C%E2%80%8C%D8%B4%D9%86%D8%A7%D8%B3%DB%8C))\\n[Français](https://fr.wikipedia.org/wiki/FOAF)\\n[Italiano](https://it.wikipedia.org/wiki/FOAF)\\n[Latviešu](https://lv.wikipedia.org/wiki/FOAF)\\n[Nederlands](https://nl.wikipedia.org/wiki/FOAF)\\n[日本語](https://ja.wikipedia.org/wiki/Friend_of_a_Friend)\\n[Norsk bokmål](https://no.wikipedia.org/wiki/FOAF)\\n[Polski](https://pl.wikipedia.org/wiki/FOAF_(format))\\n[Português](https://pt.wikipedia.org/wiki/FOAF)\\n[Русский](https://ru.wikipedia.org/wiki/FOAF)\\n[Українська](https://uk.wikipedia.org/wiki/FOAF)\\n[Edit links](https://www.wikidata.org/wiki/Special:EntityPage/Q1389366#sitelinks-wikipedia)\\n[Article](https://en.wikipedia.org/wiki/FOAF)\\n[Talk](https://en.wikipedia.org/wiki/Talk:FOAF)\\n[Read](https://en.wikipedia.org/wiki/FOAF)\\n[Edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit)\\n[View history](https://en.wikipedia.org/w/index.php?title=FOAF&action=history)\\n[Read](https://en.wikipedia.org/wiki/FOAF)\\n[Edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit)\\n[View history](https://en.wikipedia.org/w/index.php?title=FOAF&action=history)\\n[What links here](https://en.wikipedia.org/wiki/Special:WhatLinksHere/FOAF)\\n[Related changes](https://en.wikipedia.org/wiki/Special:RecentChangesLinked/FOAF)\\n[Upload file](https://en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard)\\n[Special pages](https://en.wikipedia.org/wiki/Special:SpecialPages)\\n[Permanent link](https://en.wikipedia.org/w/index.php?title=FOAF&oldid=1165941964)\\n[Page information](https://en.wikipedia.org/w/index.php?title=FOAF&action=info)\\n[Cite this page](https://en.wikipedia.org/w/index.php?title=Special:CiteThisPage&page=FOAF&id=1165941964&wpFormIdentifier=titleform)\\n[Get shortened URL](https://en.wikipedia.org/w/index.php?title=Special:UrlShortener&url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FFOAF)\\n[Download QR code](https://en.wikipedia.org/w/index.php?title=Special:QrCode&url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FFOAF)\\n[Wikidata item](https://www.wikidata.org/wiki/Special:EntityPage/Q1389366)\\n[Download as PDF](https://en.wikipedia.org/w/index.php?title=Special:DownloadAsPdf&page=FOAF&action=show-download-screen)\\n[Printable version](https://en.wikipedia.org/w/index.php?title=FOAF&printable=yes)\\n[Wikimedia Commons](https://commons.wikimedia.org/wiki/Category:FOAF)\\n[friend of a friend](https://en.wikipedia.org/wiki/Friend_of_a_friend)\\n[Friend of a Friend (disambiguation)](https://en.wikipedia.org/wiki/Friend_of_a_Friend_(disambiguation))\\n[](https://en.wikipedia.org/wiki/File:FoafLogo.svg)\\n[RDF](https://en.wikipedia.org/wiki/Resource_Description_Framework)\\n[OWL](https://en.wikipedia.org/wiki/Web_Ontology_Language)\\n[Semantic Web](https://en.wikipedia.org/wiki/Semantic_Web)\\n[CC BY 1.0](https://en.wikipedia.org/wiki/Creative_Commons_license)\\n[xmlns.com/foaf/spec/](http://xmlns.com/foaf/spec/)\\n[friend of a friend](https://en.wikipedia.org/wiki/Friend_of_a_friend)\\n[machine-readable](https://en.wikipedia.org/wiki/Machine-readable_data)\\n[ontology](https://en.wikipedia.org/wiki/Ontology_(information_science))\\n[persons](https://en.wikipedia.org/wiki/Person)\\n[social networks](https://en.wikipedia.org/wiki/Social_networks)\\n[Resource Description Framework](https://en.wikipedia.org/wiki/Resource_Description_Framework)\\n[Web Ontology Language](https://en.wikipedia.org/wiki/Web_Ontology_Language)\\n[e-mail addresses](https://en.wikipedia.org/wiki/E-mail_address)\\n[telephone number](https://en.wikipedia.org/wiki/Telephone_number)\\n[Facebook](https://en.wikipedia.org/wiki/Facebook)\\n[Jabber ID](https://en.wikipedia.org/wiki/Extensible_Messaging_and_Presence_Protocol)\\n[URI](https://en.wikipedia.org/wiki/Uniform_Resource_Identifier)\\n[Social Semantic Web](https://en.wikipedia.org/wiki/Social_Semantic_Web)\\n[citation needed](https://en.wikipedia.org/wiki/Wikipedia:Citation_needed)\\n[RDF](https://en.wikipedia.org/wiki/Resource_Description_Framework)\\n[social web](https://en.wikipedia.org/wiki/Social_web)\\n[clarification needed](https://en.wikipedia.org/wiki/Wikipedia:Please_clarify)\\n[Tim Berners-Lee](https://en.wikipedia.org/wiki/Tim_Berners-Lee)\\n[semantic web](https://en.wikipedia.org/wiki/Semantic_web)\\n[Giant Global Graph](https://en.wikipedia.org/wiki/Giant_Global_Graph)\\n[Internet](https://en.wikipedia.org/wiki/Internet)\\n[World Wide Web](https://en.wikipedia.org/wiki/World_Wide_Web)\\n\\n## WebID[edit]\\n\\n[edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit&section=1)\\n[WebID](https://en.wikipedia.org/wiki/WebID)\\n\\n## Deployment[edit]\\n\\n[edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit&section=2)\\n[Live Journal](https://en.wikipedia.org/wiki/Live_Journal)\\n[DeadJournal](https://en.wikipedia.org/wiki/DeadJournal)\\n[My Opera](https://en.wikipedia.org/wiki/My_Opera)\\n[Identi.ca](https://en.wikipedia.org/wiki/Identi.ca)\\n[FriendFeed](https://en.wikipedia.org/wiki/FriendFeed)\\n[WordPress](https://en.wikipedia.org/wiki/WordPress)\\n[TypePad](https://en.wikipedia.org/wiki/TypePad)\\n[Yandex](https://en.wikipedia.org/wiki/Yandex)\\n[Safari](https://en.wikipedia.org/wiki/Safari_(web_browser))\\n[Firefox](https://en.wikipedia.org/wiki/Firefox_(web_browser))\\n[Semantic MediaWiki](https://en.wikipedia.org/wiki/Semantic_MediaWiki)\\n[semantic annotation](https://en.wikipedia.org/wiki/Semantic_annotation)\\n[linked data](https://en.wikipedia.org/wiki/Linked_data)\\n[MediaWiki](https://en.wikipedia.org/wiki/MediaWiki)\\n[content management systems](https://en.wikipedia.org/wiki/Content_management_systems)\\n\\n## Example[edit]\\n\\n[edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit&section=3)\\n[Turtle](https://en.wikipedia.org/wiki/Turtle_(syntax))\\n[web resources](https://en.wikipedia.org/wiki/Web_resource)\\n\\n## History[edit]\\n\\n[edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit&section=4)\\n\\n### Versions[edit]\\n\\n[edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit&section=5)\\n[http://xmlns.com/foaf/0.1/](http://xmlns.com/foaf/0.1/)\\n[http://xmlns.com/foaf/0.1/](http://xmlns.com/foaf/0.1/)\\n\\n## See also[edit]\\n\\n[edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit&section=6)\\n[Resource Description Framework](https://en.wikipedia.org/wiki/Resource_Description_Framework)\\n[Web Ontology Language](https://en.wikipedia.org/wiki/Web_Ontology_Language)\\n[Social web](https://en.wikipedia.org/wiki/Social_web)\\n[Semantic Web](https://en.wikipedia.org/wiki/Semantic_Web)\\n[Description of a Career](https://en.wiktionary.org/wiki/DOAC)\\n[Description of a Project](https://en.wikipedia.org/wiki/DOAP)\\n[Semantically-Interlinked Online Communities](https://en.wikipedia.org/wiki/Semantically-Interlinked_Online_Communities)\\n[hCard](https://en.wikipedia.org/wiki/HCard)\\n[vCard](https://en.wikipedia.org/wiki/VCard)\\n[XHTML Friends Network](https://en.wikipedia.org/wiki/XHTML_Friends_Network)\\n\\n## References[edit]\\n\\n[edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit&section=7)\\n[XML Watch: Finding friends with XML and RDF](https://web.archive.org/web/20091223003446/http://www.ibm.com/developerworks/xml/library/x-foaf.html)\\n[IBM DeveloperWorks](https://en.wikipedia.org/wiki/IBM_DeveloperWorks)\\n[XML Watch: Support online communities with FOAF](https://web.archive.org/web/20100307223814/http://www.ibm.com/developerworks/xml/library/x-foaf2.html)\\n[IBM DeveloperWorks](https://en.wikipedia.org/wiki/IBM_DeveloperWorks)\\n[\\\"Giant Global Graph\\\"](https://web.archive.org/web/20160713021037/http://dig.csail.mit.edu/breadcrumbs/node/215)\\n[the original](http://dig.csail.mit.edu/breadcrumbs/node/215)\\n[\\\"LiveJournal FOAF\\\"](https://web.archive.org/web/20100118151037/http://community.livejournal.com/ljfoaf)\\n[the original](http://community.livejournal.com/ljfoaf)\\n[\\\"Known FOAF data providers\\\"](https://web.archive.org/web/20100226072731/http://wiki.foaf-project.org/w/DataSources)\\n[the original](http://wiki.foaf-project.org/w/DataSources)\\n[\\\"press release on the social networking support\\\"](http://company.yandex.com/press_center/press_releases/2008/2008-08-15.xml)\\n[\\\"FOAF Support in Safari RSS\\\"](http://ejohn.org/blog/foaf-support-in-safari-rss/)\\n[\\\"Semantic Radar plugin for the Firefox browser\\\"](https://web.archive.org/web/20140108014347/https://addons.mozilla.org/en-US/firefox/addon/semantic-radar/)\\n[the original](https://addons.mozilla.org/en-US/firefox/addon/semantic-radar/)\\n[\\\"FOAF support module for Perl\\\"](https://metacpan.org/pod/XML::FOAF)\\n[\\\"FOAF+SSL authentication support for Perl\\\"](https://metacpan.org/pod/Web::ID)\\n[http://drupal.org/project/foaf](https://drupal.org/project/foaf)\\n[Drupal](https://en.wikipedia.org/wiki/Drupal)\\n[\\\"FOAF Vocabulary Specification 0.99\\\"](http://xmlns.com/foaf/spec/20140114.html)\\n[Archived](https://web.archive.org/web/20220303180551/http://xmlns.com/foaf/spec/20140114.html)\\n\\n## External links[edit]\\n\\n[edit](https://en.wikipedia.org/w/index.php?title=FOAF&action=edit&section=8)\\n[Official website](http://www.foaf-project.org)\\n[Archived](https://web.archive.org/web/20211023122305/http://www.foaf-project.org/)\\n[Wayback Machine](https://en.wikipedia.org/wiki/Wayback_Machine)\\n[FOAF dataset](http://ebiquity.umbc.edu/resource/html/id/82/)\\n[FOAF-search - a search engine for FOAF data](https://web.archive.org/web/20181130195340/https://www.foaf-search.net/)\\n[Wayback Machine](https://en.wikipedia.org/wiki/Wayback_Machine)\\n[v](https://en.wikipedia.org/wiki/Template:Semantic_Web)\\n[t](https://en.wikipedia.org/wiki/Template_talk:Semantic_Web)\\n[e](https://en.wikipedia.org/wiki/Special:EditPage/Template:Semantic_Web)\\n[Semantic Web](https://en.wikipedia.org/wiki/Semantic_Web)\\n[Databases](https://en.wikipedia.org/wiki/Database)\\n[Hypertext](https://en.wikipedia.org/wiki/Hypertext)\\n[Internet](https://en.wikipedia.org/wiki/Internet)\\n[Ontologies](https://en.wikipedia.org/wiki/Ontology_(computer_science))\\n[Semantics](https://en.wikipedia.org/wiki/Semantics_(computer_science))\\n[Semantic networks](https://en.wikipedia.org/wiki/Semantic_network)\\n[World Wide Web](https://en.wikipedia.org/wiki/World_Wide_Web)\\n[Dataspaces](https://en.wikipedia.org/wiki/Dataspaces)\\n[Hyperdata](https://en.wikipedia.org/wiki/Hyperdata)\\n[Linked data](https://en.wikipedia.org/wiki/Linked_data)\\n[Rule-based systems](https://en.wikipedia.org/wiki/Rule-based_system)\\n[Semantic analytics](https://en.wikipedia.org/wiki/Semantic_analytics)\\n[Semantic broker](https://en.wikipedia.org/wiki/Semantic_broker)\\n[Semantic computing](https://en.wikipedia.org/wiki/Semantic_computing)\\n[Semantic mapper](https://en.wikipedia.org/wiki/Semantic_mapper)\\n[Semantic matching](https://en.wikipedia.org/wiki/Semantic_matching)\\n[Semantic publishing](https://en.wikipedia.org/wiki/Semantic_publishing)\\n[Semantic reasoner](https://en.wikipedia.org/wiki/Semantic_reasoner)\\n[Semantic search](https://en.wikipedia.org/wiki/Semantic_search)\\n[Semantic service-oriented architecture](https://en.wikipedia.org/wiki/Semantic_service-oriented_architecture)\\n[Semantic wiki](https://en.wikipedia.org/wiki/Semantic_wiki)\\n[Solid](https://en.wikipedia.org/wiki/Solid_(web_decentralization_project))\\n[Collective intelligence](https://en.wikipedia.org/wiki/Collective_intelligence)\\n[Description logic](https://en.wikipedia.org/wiki/Description_logic)\\n[Folksonomy](https://en.wikipedia.org/wiki/Folksonomy)\\n[Geotagging](https://en.wikipedia.org/wiki/Geotagging)\\n[Information architecture](https://en.wikipedia.org/wiki/Information_architecture)\\n[Knowledge extraction](https://en.wikipedia.org/wiki/Knowledge_extraction)\\n[Knowledge management](https://en.wikipedia.org/wiki/Knowledge_management)\\n[Knowledge representation and reasoning](https://en.wikipedia.org/wiki/Knowledge_representation_and_reasoning)\\n[Library 2.0](https://en.wikipedia.org/wiki/Library_2.0)\\n[Digital library](https://en.wikipedia.org/wiki/Digital_library)\\n[Digital humanities](https://en.wikipedia.org/wiki/Digital_humanities)\\n[Metadata](https://en.wikipedia.org/wiki/Metadata)\\n[References](https://en.wikipedia.org/wiki/Reference_(computer_science))\\n[Topic map](https://en.wikipedia.org/wiki/Topic_map)\\n[Web 2.0](https://en.wikipedia.org/wiki/Web_2.0)\\n[Web engineering](https://en.wikipedia.org/wiki/Web_engineering)\\n[Web Science Trust](https://en.wikipedia.org/wiki/Web_Science_Trust)\\n[HTTP](https://en.wikipedia.org/wiki/HTTP)\\n[IRI](https://en.wikipedia.org/wiki/Internationalized_Resource_Identifier)\\n[URI](https://en.wikipedia.org/wiki/Uniform_Resource_Identifier)\\n[RDF](https://en.wikipedia.org/wiki/Resource_Description_Framework)\\n[triples](https://en.wikipedia.org/wiki/Semantic_triple)\\n[RDF/XML](https://en.wikipedia.org/wiki/RDF/XML)\\n[JSON-LD](https://en.wikipedia.org/wiki/JSON-LD)\\n[Turtle](https://en.wikipedia.org/wiki/Turtle_(syntax))\\n[TriG](https://en.wikipedia.org/wiki/TriG_(syntax))\\n[Notation3](https://en.wikipedia.org/wiki/Notation3)\\n[N-Triples](https://en.wikipedia.org/wiki/N-Triples)\\n[TriX](https://en.wikipedia.org/wiki/TriX_(serialization_format))\\n[RRID](https://en.wikipedia.org/wiki/Research_Resource_Identifier)\\n[SPARQL](https://en.wikipedia.org/wiki/SPARQL)\\n[XML](https://en.wikipedia.org/wiki/XML)\\n[Semantic HTML](https://en.wikipedia.org/wiki/Semantic_HTML)\\n[Common Logic](https://en.wikipedia.org/wiki/Common_Logic)\\n[OWL](https://en.wikipedia.org/wiki/Web_Ontology_Language)\\n[RDFS](https://en.wikipedia.org/wiki/RDF_Schema)\\n[Rule Interchange Format](https://en.wikipedia.org/wiki/Rule_Interchange_Format)\\n[Semantic Web Rule Language](https://en.wikipedia.org/wiki/Semantic_Web_Rule_Language)\\n[ALPS](https://en.wikipedia.org/w/index.php?title=Application-Level_Profile_Semantics_(ALPS)&action=edit&redlink=1)\\n[SHACL](https://en.wikipedia.org/wiki/SHACL)\\n[eRDF](https://en.wikipedia.org/wiki/Embedded_RDF)\\n[GRDDL](https://en.wikipedia.org/wiki/GRDDL)\\n[Microdata](https://en.wikipedia.org/wiki/Microdata_(HTML))\\n[Microformats](https://en.wikipedia.org/wiki/Microformat)\\n[RDFa](https://en.wikipedia.org/wiki/RDFa)\\n[SAWSDL](https://en.wikipedia.org/wiki/SAWSDL)\\n[Facebook Platform](https://en.wikipedia.org/wiki/Facebook_Platform)\\n[DOAP](https://en.wikipedia.org/wiki/DOAP)\\n[Dublin Core](https://en.wikipedia.org/wiki/Dublin_Core)\\n[Schema.org](https://en.wikipedia.org/wiki/Schema.org)\\n[SIOC](https://en.wikipedia.org/wiki/Semantically_Interlinked_Online_Communities)\\n[SKOS](https://en.wikipedia.org/wiki/Simple_Knowledge_Organization_System)\\n[hAtom](https://en.wikipedia.org/wiki/HAtom)\\n[hCalendar](https://en.wikipedia.org/wiki/HCalendar)\\n[hCard](https://en.wikipedia.org/wiki/HCard)\\n[hProduct](https://en.wikipedia.org/wiki/HProduct)\\n[hRecipe](https://en.wikipedia.org/wiki/HRecipe)\\n[hReview](https://en.wikipedia.org/wiki/HReview)\\n[v](https://en.wikipedia.org/wiki/Template:Social_networking)\\n[t](https://en.wikipedia.org/wiki/Template_talk:Social_networking)\\n[e](https://en.wikipedia.org/wiki/Special:EditPage/Template:Social_networking)\\n[Social networks](https://en.wikipedia.org/wiki/Social_network)\\n[social media](https://en.wikipedia.org/wiki/Social_media)\\n[Personal](https://en.wikipedia.org/wiki/Personal_network)\\n[Professional](https://en.wikipedia.org/wiki/Professional_network_service)\\n[Sexual](https://en.wikipedia.org/wiki/Sexual_network)\\n[Value](https://en.wikipedia.org/wiki/Value_network)\\n[Clique](https://en.wikipedia.org/wiki/Clique)\\n[Adolescent](https://en.wikipedia.org/wiki/Adolescent_clique)\\n[Corporate social media](https://en.wikipedia.org/wiki/Corporate_social_media)\\n[Distributed social network](https://en.wikipedia.org/wiki/Distributed_social_network)\\n[list](https://en.wikipedia.org/wiki/Comparison_of_software_and_protocols_for_distributed_social_networking)\\n[Enterprise social networking](https://en.wikipedia.org/wiki/Enterprise_social_networking)\\n[Enterprise social software](https://en.wikipedia.org/wiki/Enterprise_social_software)\\n[Mobile social network](https://en.wikipedia.org/wiki/Mobile_social_network)\\n[Personal knowledge networking](https://en.wikipedia.org/wiki/Personal_knowledge_networking)\\n[Services](https://en.wikipedia.org/wiki/Social_networking_service)\\n[List of social networking services](https://en.wikipedia.org/wiki/List_of_social_networking_services)\\n[List of virtual communities with more than 1 million users](https://en.wikipedia.org/wiki/List_of_virtual_communities_with_more_than_1_million_users)\\n[Ambient awareness](https://en.wikipedia.org/wiki/Ambient_awareness)\\n[Assortative mixing](https://en.wikipedia.org/wiki/Assortative_mixing)\\n[Attention inequality](https://en.wikipedia.org/wiki/Attention_inequality)\\n[Interpersonal bridge](https://en.wikipedia.org/wiki/Bridge_(interpersonal))\\n[Organizational network analysis](https://en.wikipedia.org/wiki/Organizational_network_analysis)\\n[Small-world experiment](https://en.wikipedia.org/wiki/Small-world_experiment)\\n[Social aspects of television](https://en.wikipedia.org/wiki/Social_aspects_of_television)\\n[Social capital](https://en.wikipedia.org/wiki/Social_capital)\\n[Social data revolution](https://en.wikipedia.org/wiki/Social_data_revolution)\\n[Social exchange theory](https://en.wikipedia.org/wiki/Social_exchange_theory)\\n[Social identity theory](https://en.wikipedia.org/wiki/Social_identity_theory)\\n[Social media and psychology](https://en.wikipedia.org/wiki/Social_media_and_psychology)\\n[Social media intelligence](https://en.wikipedia.org/wiki/Social_media_intelligence)\\n[Social media mining](https://en.wikipedia.org/wiki/Social_media_mining)\\n[Social media optimization](https://en.wikipedia.org/wiki/Social_media_optimization)\\n[Social network analysis](https://en.wikipedia.org/wiki/Social_network_analysis)\\n[Social web](https://en.wikipedia.org/wiki/Social_web)\\n[Structural endogamy](https://en.wikipedia.org/wiki/Structural_endogamy)\\n[Virtual collective consciousness](https://en.wikipedia.org/wiki/Virtual_collective_consciousness)\\n[Account verification](https://en.wikipedia.org/wiki/Account_verification)\\n[Aggregation](https://en.wikipedia.org/wiki/Social_network_aggregation)\\n[Change detection](https://en.wikipedia.org/wiki/Social_network_change_detection)\\n[Blockmodeling](https://en.wikipedia.org/wiki/Blockmodeling)\\n[Collaboration graph](https://en.wikipedia.org/wiki/Collaboration_graph)\\n[Collaborative consumption](https://en.wikipedia.org/wiki/Collaborative_consumption)\\n[Giant Global Graph](https://en.wikipedia.org/wiki/Giant_Global_Graph)\\n[Lateral communication](https://en.wikipedia.org/wiki/Lateral_communication)\\n[Reputation system](https://en.wikipedia.org/wiki/Reputation_system)\\n[Social bot](https://en.wikipedia.org/wiki/Social_bot)\\n[Social graph](https://en.wikipedia.org/wiki/Social_graph)\\n[Social media analytics](https://en.wikipedia.org/wiki/Social_media_analytics)\\n[Social network analysis software](https://en.wikipedia.org/wiki/Social_network_analysis_software)\\n[Social networking potential](https://en.wikipedia.org/wiki/Social_networking_potential)\\n[Social television](https://en.wikipedia.org/wiki/Social_television)\\n[Structural cohesion](https://en.wikipedia.org/wiki/Structural_cohesion)\\n[Affinity fraud](https://en.wikipedia.org/wiki/Affinity_fraud)\\n[Attention economy](https://en.wikipedia.org/wiki/Attention_economy)\\n[Collaborative finance](https://en.wikipedia.org/wiki/Collaborative_finance)\\n[Creator economy](https://en.wikipedia.org/wiki/Creator_economy)\\n[Influencer marketing](https://en.wikipedia.org/wiki/Influencer_marketing)\\n[Narrowcasting](https://en.wikipedia.org/wiki/Narrowcasting)\\n[Sharing economy](https://en.wikipedia.org/wiki/Sharing_economy)\\n[Social commerce](https://en.wikipedia.org/wiki/Social_commerce)\\n[Social sorting](https://en.wikipedia.org/wiki/Social_sorting)\\n[Viral marketing](https://en.wikipedia.org/wiki/Viral_marketing)\\n[Algorithmic radicalization](https://en.wikipedia.org/wiki/Algorithmic_radicalization)\\n[Community recognition](https://en.wikipedia.org/wiki/Community_recognition)\\n[Complex contagion](https://en.wikipedia.org/wiki/Complex_contagion)\\n[Computer addiction](https://en.wikipedia.org/wiki/Computer_addiction)\\n[Consequential strangers](https://en.wikipedia.org/wiki/Consequential_strangers)\\n[Friend of a friend](https://en.wikipedia.org/wiki/Friend_of_a_friend)\\n[Friending and following](https://en.wikipedia.org/wiki/Friending_and_following)\\n[Friendship paradox](https://en.wikipedia.org/wiki/Friendship_paradox)\\n[Influence-for-hire](https://en.wikipedia.org/wiki/Influence-for-hire)\\n[Internet addiction](https://en.wikipedia.org/wiki/Internet_addiction)\\n[Information overload](https://en.wikipedia.org/wiki/Information_overload)\\n[Overchoice](https://en.wikipedia.org/wiki/Overchoice)\\n[Six degrees of separation](https://en.wikipedia.org/wiki/Six_degrees_of_separation)\\n[Social media addiction](https://en.wikipedia.org/wiki/Social_media_addiction)\\n[Social media and suicide](https://en.wikipedia.org/wiki/Social_media_and_suicide)\\n[Social invisibility](https://en.wikipedia.org/wiki/Social_invisibility)\\n[Social network game](https://en.wikipedia.org/wiki/Social_network_game)\\n[Suicide and the Internet](https://en.wikipedia.org/wiki/Suicide_and_the_Internet)\\n[Tribe](https://en.wikipedia.org/wiki/Tribe_(internet))\\n[Viral phenomenon](https://en.wikipedia.org/wiki/Viral_phenomenon)\\n[Friendship recession](https://en.wikipedia.org/wiki/Friendship_recession)\\n[Peer pressure](https://en.wikipedia.org/wiki/Peer_pressure)\\n[Researchers](https://en.wikipedia.org/wiki/List_of_social_network_researchers)\\n[User profile](https://en.wikipedia.org/wiki/User_profile)\\n[Online identity](https://en.wikipedia.org/wiki/Online_identity)\\n[Persona](https://en.wikipedia.org/wiki/Persona_(user_experience))\\n[Social profiling](https://en.wikipedia.org/wiki/Social_profiling)\\n[Viral messages](https://en.wikipedia.org/wiki/Viral_messages)\\n[Virtual community](https://en.wikipedia.org/wiki/Virtual_community)\\n[https://en.wikipedia.org/w/index.php?title=FOAF&oldid=1165941964](https://en.wikipedia.org/w/index.php?title=FOAF&oldid=1165941964)\\n[Categories](https://en.wikipedia.org/wiki/Help:Category)\\n[Ontology (information science)](https://en.wikipedia.org/wiki/Category:Ontology_(information_science))\\n[Semantic Web](https://en.wikipedia.org/wiki/Category:Semantic_Web)\\n[2000 software](https://en.wikipedia.org/wiki/Category:2000_software)\\n[Articles with short description](https://en.wikipedia.org/wiki/Category:Articles_with_short_description)\\n[Short description matches Wikidata](https://en.wikipedia.org/wiki/Category:Short_description_matches_Wikidata)\\n[All articles with unsourced statements](https://en.wikipedia.org/wiki/Category:All_articles_with_unsourced_statements)\\n[Articles with unsourced statements from April 2017](https://en.wikipedia.org/wiki/Category:Articles_with_unsourced_statements_from_April_2017)\\n[Wikipedia articles needing clarification from April 2017](https://en.wikipedia.org/wiki/Category:Wikipedia_articles_needing_clarification_from_April_2017)\\n[Webarchive template wayback links](https://en.wikipedia.org/wiki/Category:Webarchive_template_wayback_links)\\n[Creative Commons Attribution-ShareAlike License 4.0](https://en.wikipedia.org/wiki/Wikipedia:Text_of_the_Creative_Commons_Attribution-ShareAlike_4.0_International_License)\\n[](https://en.wikipedia.org/wiki/Wikipedia:Text_of_the_Creative_Commons_Attribution-ShareAlike_4.0_International_License)\\n[Terms of Use](https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Terms_of_Use)\\n[Privacy Policy](https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Privacy_policy)\\n[Wikimedia Foundation, Inc.](https://www.wikimediafoundation.org/)\\n[Privacy policy](https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Privacy_policy)\\n[About Wikipedia](https://en.wikipedia.org/wiki/Wikipedia:About)\\n[Disclaimers](https://en.wikipedia.org/wiki/Wikipedia:General_disclaimer)\\n[Contact Wikipedia](https://en.wikipedia.org/wiki/Wikipedia:Contact_us)\\n[Code of Conduct](https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Universal_Code_of_Conduct)\\n[Developers](https://developer.wikimedia.org)\\n[Statistics](https://stats.wikimedia.org/#/en.wikipedia.org)\\n[Cookie statement](https://foundation.wikimedia.org/wiki/Special:MyLanguage/Policy:Cookie_statement)\\n[Mobile view](https://en.m.wikipedia.org/w/index.php?title=FOAF&mobileaction=toggle_view_mobile)\\n[](https://wikimediafoundation.org/)\\n[](https://www.mediawiki.org/)\\n\\n# FOAF Vocabulary Specification 0.99\\n\\n\\n## Namespace Document 14 January 2014 - Paddington Edition\\n\\n[http://xmlns.com/foaf/spec/20140114.html](http://xmlns.com/foaf/spec/20140114.html)\\n[rdf](http://xmlns.com/foaf/spec/20140114.rdf)\\n[http://xmlns.com/foaf/spec/](http://xmlns.com/foaf/spec/)\\n[rdf](http://xmlns.com/foaf/spec/index.rdf)\\n[http://xmlns.com/foaf/spec/20100809.html](http://xmlns.com/foaf/spec/20100809.html)\\n[rdf](http://xmlns.com/foaf/spec/20100809.rdf)\\n[Dan Brickley](mailto:danbri@danbri.org)\\n[Libby Miller](mailto:libby@nicecupoftea.org)\\n[foaf-dev@lists.foaf-project.org](http://lists.foaf-project.org/)\\n[RDF\\n    and Semantic Web developer community](http://www.w3.org/2001/sw/interest/)\\n[](http://creativecommons.org/licenses/by/1.0/)\\n[Creative Commons Attribution License](http://creativecommons.org/licenses/by/1.0/)\\n[RDF](http://www.w3.org/RDF/)\\n\\n## Abstract\\n\\n\\n## Status of This Document\\n\\n[FOAF project](http://www.foaf-project.org/)\\n[RDFS/OWL](http://xmlns.com/foaf/spec/index.rdf)\\n[per-term](http://xmlns.com/foaf/doc/)\\n[multilingual translations](http://svn.foaf-project.org/foaftown/foaf18n/)\\n[direct link](http://xmlns.com/foaf/spec/index.rdf)\\n[content negotiation](http://en.wikipedia.org/wiki/Content_negotiation)\\n[namespace URI](http://xmlns.com/foaf/0.1/)\\n[foaf-dev@lists.foaf-project.org](mailto:foaf-dev@lists.foaf-project.org)\\n[public archives](http://lists.foaf-project.org)\\n[FOAF mailing list](mailto:foaf-dev@lists.foaf-project.org)\\n[FOAF website](http://www.foaf-project.org/)\\n\\n### Changes in version 0.99\\n\\n\\n## Table of Contents\\n\\n\\n## FOAF at a glance\\n\\n[Dublin Core](http://www.dublincore.org/)\\n[SKOS](http://www.w3.org/2004/02/skos/)\\n[DOAP](http://trac.usefulinc.com/doap)\\n[SIOC](http://sioc-project.org/)\\n[Org vocabulary](http://www.epimorphics.com/public/vocabulary/org.html)\\n[Bio vocabulary](http://vocab.org/bio/0.1/.html)\\n[Portable Contacts](http://portablecontacts.net/)\\n[W3C Social Web group](http://www.w3.org/2005/Incubator/socialweb/)\\n\\n### FOAF Core\\n\\n\\n### Social Web\\n\\n\\n### A-Z of FOAF terms (current and archaic)\\n\\n\\n## Example\\n\\n\\n## 1 Introduction: FOAF Basics\\n\\n\\n### The Semantic Web\\n\\n[W3 future directions](http://www.w3.org/Talks/WWW94Tim/)\\n[Giant Global Graph](http://dig.csail.mit.edu/breadcrumbs/node/215)\\n[foaf](http://www.w3.org/People/Berners-Lee/card)\\n\\n### FOAF and the Semantic Web\\n\\n[Semantic Web](http://www.w3.org/2001/sw/)\\n[SPARQL](http://www.w3.org/TR/rdf-sparql-query/)\\n[SKOS](http://www.w3.org/2004/02/skos/)\\n[GRDDL](http://www.w3.org/2001/sw/grddl-wg/)\\n[RDFa](http://www.w3.org/TR/xhtml-rdfa-primer/)\\n[Linked \\n  Data](http://www.w3.org/DesignIssues/LinkedData.html)\\n\\n### The Basic Idea\\n\\n[FOAF namespace\\n  document](http://xmlns.com/foaf/0.1/)\\n\\n## What's FOAF for?\\n\\n[XML\\n  Watch: Finding friends with XML and RDF](http://www-106.ibm.com/developerworks/xml/library/x-foaf.html)\\n[with image metadata](http://rdfweb.org/2002/01/photo/)\\n[co-depiction](http://rdfweb.org/2002/01/photo/)\\n[FOAF-a-matic](http://www.ldodds.com/foaf/foaf-a-matic.html)\\n[FOAF project home page](http://www.foaf-project.org)\\n\\n## Background\\n\\n[alt.folklore.urban archive](http://www.urbanlegends.com/)\\n[snopes.com](http://www.snopes.com/)\\n\\n## FOAF and Standards\\n\\n[ISO\\n  Standardisation](http://www.iso.ch/iso/en/ISOOnline.openerpage)\\n[W3C](http://www.w3.org/)\\n[Process](http://www.w3.org/Consortium/Process/)\\n[Open Source](http://www.opensource.org/)\\n[Free Software](http://www.gnu.org/philosophy/free-sw.html)\\n[Jabber\\n  JEPs](http://www.jabber.org/jeps/jep-0001.html)\\n[Resource Description Framework](http://www.w3.org/RDF/)\\n\\n## The FOAF Vocabulary Description\\n\\n[RDF](http://www.w3.org/RDF/)\\n[Semantic Web](http://www.w3.org/2001/sw/)\\n[Semantic Web](http://www.w3.org/2001/sw/)\\n\\n### Evolution and Extension of FOAF\\n\\n[Dublin Core](http://dublincore.org/)\\n\\n## FOAF Auto-Discovery: Publishing and Linking FOAF files\\n\\n[foaf-a-matic](http://www.ldodds.com/foaf/foaf-a-matic.html)\\n[FOAF\\n  autodiscovery](http://web.archive.org/web/20040416181630/rdfweb.org/mt/foaflog/archives/000041.html)\\n\\n## FOAF cross-reference: Listing FOAF Classes and\\n  Properties\\n\\n[RDF/XML](http://xmlns.com/foaf/spec/index.rdf)\\n\\n### Classes and Properties (full detail)\\n\\n\\n## Classes\\n\\n\\n### Class: foaf:Agent\\n\\n\\n### Class: foaf:Document\\n\\n\\n### Class: foaf:Group\\n\\n[issue tracker](http://wiki.foaf-project.org/w/IssueTracker)\\n[OWL](http://www.w3.org/2001/sw/WebOnt)\\n\\n### Class: foaf:Image\\n\\n\\n### Class: foaf:Organization\\n\\n\\n### Class: foaf:Person\\n\\n\\n### Class: foaf:OnlineAccount\\n\\n\\n### Class: foaf:PersonalProfileDocument\\n\\n[GRDDL](http://www.w3.org/2004/01/rdxh/spec)\\n\\n### Class: foaf:Project\\n\\n\\n### Class: foaf:LabelProperty\\n\\n\\n### Class: foaf:OnlineChatAccount\\n\\n[Jabber](http://www.jabber.org/)\\n[AIM](http://www.aim.com/)\\n[MSN](http://chat.msn.com/)\\n[ICQ](http://web.icq.com/icqchat/)\\n[Yahoo!](http://chat.yahoo.com/)\\n[MSN](http://chat.msn.com/)\\n[Freenode](http://www.freenode.net/)\\n\\n### Class: foaf:OnlineEcommerceAccount\\n\\n[Amazon](http://www.amazon.com/)\\n[eBay](http://www.ebay.com/)\\n[PayPal](http://www.paypal.com/)\\n[thinkgeek](http://www.thinkgeek.com/)\\n\\n### Class: foaf:OnlineGamingAccount\\n\\n[EverQuest](http://everquest.station.sony.com/)\\n[Xbox live](http://www.xbox.com/live/)\\n[Neverwinter Nights](http://nwn.bioware.com/)\\n\\n## Properties\\n\\n\\n### Property: foaf:homepage\\n\\n\\n### Property: foaf:isPrimaryTopicOf\\n\\n\\n### Property: foaf:knows\\n\\n[Relationship module](http://www.perceive.net/schemas/20021119/relationship/)\\n[scutters](http://wiki.foaf-project.org/w/ScutterSpec)\\n\\n### Property: foaf:made\\n\\n\\n### Property: foaf:maker\\n\\n[UsingDublinCoreCreator](http://wiki.foaf-project.org/w/UsingDublinCoreCreator)\\n\\n### Property: foaf:mbox\\n\\n[RFC 2368](http://ftp.ics.uci.edu/pub/ietf/uri/rfc2368.txt)\\n\\n### Property: foaf:member\\n\\n\\n### Property: foaf:page\\n\\n\\n### Property: foaf:primaryTopic\\n\\n[Wikipedia](http://www.wikipedia.org/)\\n[NNDB](http://www.nndb.com/)\\n\\n### Property: foaf:weblog\\n\\n\\n### Property: foaf:account\\n\\n\\n### Property: foaf:accountName\\n\\n\\n### Property: foaf:accountServiceHomepage\\n\\n\\n### Property: foaf:aimChatID\\n\\n[AIM](http://www.aim.com/)\\n[iChat](http://www.apple.com/macosx/what-is-macosx/ichat.html)\\n[Apple](http://www.apple.com/)\\n\\n### Property: foaf:based_near\\n\\n[geo-positioning vocabulary](http://www.w3.org/2003/01/geo/wgs84_pos#)\\n[GeoInfo](http://esw.w3.org/topic/GeoInfo)\\n[GeoOnion vocab](http://esw.w3.org/topic/GeoOnion)\\n[UsingContactNearestAirport](http://wiki.foaf-project.org/w/UsingContactNearestAirport)\\n\\n### Property: foaf:currentProject\\n\\n\\n### Property: foaf:depiction\\n\\n[Co-Depiction](http://rdfweb.org/2002/01/photo/)\\n['Annotating Images With SVG'](http://www.jibbering.com/svg/AnnotateImage.html)\\n\\n### Property: foaf:depicts\\n\\n\\n### Property: foaf:familyName\\n\\n[issue tracker](http://wiki.foaf-project.org/w/NameVocabIssue)\\n\\n### Property: foaf:firstName\\n\\n[issue tracker](http://wiki.foaf-project.org/w/NameVocabIssue)\\n\\n### Property: foaf:focus\\n\\n[SKOS](http://www.w3.org/2004/02/skos/)\\n[In SKOS](http://www.w3.org/TR/2005/WD-swbp-skos-core-guide-20050510/#secmodellingrdf)\\n[2005 discussion](http://www.w3.org/TR/2005/WD-swbp-skos-core-guide-20051102/#secopen)\\n[TDB URI scheme](http://larry.masinter.net/duri.html)\\n[original goals](http://www.foaf-project.org/original-intro)\\n\\n### Property: foaf:gender\\n\\n[foaf-dev](http://lists.foaf-project.org/mailman/listinfo/foaf-dev)\\n\\n### Property: foaf:givenName\\n\\n[issue tracker](http://wiki.foaf-project.org/w/NameVocabIssue)\\n\\n### Property: foaf:icqChatID\\n\\n[icq chat](http://web.icq.com/icqchat/)\\n[What is ICQ?](http://www.icq.com/products/whatisicq.html)\\n[About Us](http://company.icq.com/info/)\\n\\n### Property: foaf:img\\n\\n\\n### Property: foaf:interest\\n\\n[RDF](http://www.w3.org/RDF/)\\n[CPAN](http://www.cpan.org/)\\n\\n### Property: foaf:jabberID\\n\\n[Jabber](http://www.jabber.org/)\\n[Jabber](http://www.jabber.org/)\\n\\n### Property: foaf:lastName\\n\\n[issue tracker](http://wiki.foaf-project.org/w/NameVocabIssue)\\n\\n### Property: foaf:logo\\n\\n\\n### Property: foaf:mbox_sha1sum\\n\\n[Edd Dumbill's \\ndocumentation](http://usefulinc.com/foaf/)\\n[FOAF-based whitelists](http://www.w3.org/2001/12/rubyrdf/util/foafwhite/intro.html)\\n[in Sam Ruby's \\nweblog entry](http://www.intertwingly.net/blog/1545.html)\\n\\n### Property: foaf:msnChatID\\n\\n[Windows Live Messenger](http://en.wikipedia.org/wiki/Windows_Live_Messenger)\\n[Microsoft mesenger](http://download.live.com/messenger)\\n[Windows Live ID](http://en.wikipedia.org/wiki/Windows_Live_ID)\\n\\n### Property: foaf:myersBriggs\\n\\n[this article](http://www.teamtechnology.co.uk/tt/t-articl/mb-simpl.htm)\\n[Cory Caplinger's summary table](http://webspace.webring.com/people/cl/lifexplore/mbintro.htm)\\n[FOAF Myers Briggs addition](http://web.archive.org/web/20080802184922/http://rdfweb.org/mt/foaflog/archives/000004.html)\\n\\n### Property: foaf:name\\n\\n[issue tracker](http://wiki.foaf-project.org/w/IssueTracker)\\n\\n### Property: foaf:nick\\n\\n\\n### Property: foaf:openid\\n\\n[indirect identifier](http://www.w3.org/TR/webarch/#indirect-identification)\\n[OpenID](http://openid.net/specs/openid-authentication-1_1.html)\\n[delegation model](http://openid.net/specs/openid-authentication-1_1.html#delegating_authentication)\\n[technique](http://xmlns.com/foaf/spec/#sec-autodesc)\\n\\n### Property: foaf:pastProject\\n\\n\\n### Property: foaf:phone\\n\\n\\n### Property: foaf:plan\\n\\n[History of the \\nFinger Protocol](http://www.rajivshah.com/Case_Studies/Finger/Finger.htm)\\n\\n### Property: foaf:publications\\n\\n\\n### Property: foaf:schoolHomepage\\n\\n\\n### Property: foaf:skypeID\\n\\n\\n### Property: foaf:thumbnail\\n\\n\\n### Property: foaf:tipjar\\n\\n[discussions](http://rdfweb.org/mt/foaflog/archives/2004/02/12/20.07.32/)\\n[PayPal](http://www.paypal.com/)\\n\\n### Property: foaf:title\\n\\n[FOAF Issue Tracker](http://wiki.foaf-project.org/w/IssueTracker)\\n\\n### Property: foaf:topic\\n\\n\\n### Property: foaf:topic_interest\\n\\n\\n### Property: foaf:workInfoHomepage\\n\\n\\n### Property: foaf:workplaceHomepage\\n\\n\\n### Property: foaf:yahooChatID\\n\\n[Yahoo! Chat](http://chat.yahoo.com/)\\n[Yahoo! Groups](http://www.yahoogroups.com/)\\n\\n### Property: foaf:age\\n\\n\\n### Property: foaf:birthday\\n\\n[BirthdayIssue](http://wiki.foaf-project.org/w/BirthdayIssue)\\n\\n### Property: foaf:membershipClass\\n\\n\\n### Property: foaf:sha1\\n\\n\\n### Property: foaf:status\\n\\n\\n### Property: foaf:dnaChecksum\\n\\n\\n### Property: foaf:family_name\\n\\n\\n### Property: foaf:fundedBy\\n\\n\\n### Property: foaf:geekcode\\n\\n[Wikipedia entry](http://en.wikipedia.org/wiki/Geek_Code)\\n\\n### Property: foaf:givenname\\n\\n[issue tracker](http://wiki.foaf-project.org/w/NameVocabIssue)\\n\\n### Property: foaf:holdsAccount\\n\\n\\n### Property: foaf:surname\\n\\n[issue \\ntracker](http://wiki.foaf-project.org/w/IssueTracker)\\n\\n### Property: foaf:theme\\n\\n\\n## External Vocabulary References\\n\\n\\n### Status Vocabulary\\n\\n[SemWeb Vocab Status Ontology](http://www.w3.org/2003/06/sw-vocab-status/note)\\n\\n### W3C Basic Geo (WGS84 lat/long) Vocabulary\\n\\n[W3CBasic Geo Vocabulary](http://www.w3.org/2003/01/geo/)\\n\\n### RDF Vocabulary Description - core concepts\\n\\n[W3C's site](http://www.w3.org/2001/sw/)\\n[more background on URIs](http://www.w3.org/TR/webarch/#identification)\\n[linked data](http://www.w3.org/DesignIssues/LinkedData)\\n[SKOS](http://www.w3.org/2004/02/skos/)\\n\\n### Dublin Core terms\\n\\n[Dublin Core terms](http://dublincore.org/documents/dcmi-terms/)\\n[dct:Agent](http://dublincore.org/documents/dcmi-terms/#classes-Agent)\\n[dct:creator](http://dublincore.org/documents/dcmi-terms/#terms-creator)\\n\\n### Wordnet terms\\n\\n[recent](http://www.w3.org/TR/wordnet-rdf/)\\n\\n### SIOC terms\\n\\n[SIOC](http://rdfs.org/sioc/ns#)\\n[SIOC](http://www.sioc-project.org/)\\n\\n### Acknowledgments\\n\\n[rdfweb-dev](http://rdfweb.org/pipermail/rdfweb-dev/)\\n[#foaf](http://rdfweb.org/irc/)\\n[FoafExplorer](http://xml.mfd-consult.dk/foaf/explorer/)\\n[Web View](http://eikeon.com/foaf/)\\n[foaf-a-matic](http://www.ldodds.com/foaf/foaf-a-matic.html)\\n[Ecademy](http://www.ecademy.com/)\\n[TypePad](http://www.typepad.com/)\\n[many](http://conferences.oreillynet.com/cs/et2003/view/e_sess/3633)\\n[explaining](http://hackdiary.com/)\\n[in Japanese](http://kanzaki.com/docs/sw/foaf.html)\\n[Spanish](http://f14web.com.ar/inkel/2003/01/27/foaf.html)\\n[Chris Schmidt](http://crschmidt.net/)\\n[spec generation](http://xmlns.com/foaf/0.1/specgen.py)\\n[cool hacks](http://crschmidt.net/semweb/)\\n[FOAF Logo](http://iandavis.com/2006/foaf-icons/)\\n[years ago](http://www.w3.org/History/1989/proposal.html)\\n\\n## Recent Changes\\n\\n\\n### Changes in version 0.99 (2014-01-14)\\n\\n[schema.org](http://schema.org/)\\n[Person](http://schema.org/Person)\\n[ImageObject](http://schema.org/ImageObject)\\n[CreativeWork](http://schema.org/CreativeWork)\\n\\n### 2010-08-09\\n\\n[Bio vocabulary](http://vocab.org/bio/0.1/.html)\\n\\n### Changes from version 0.97 and 0.96\\n\\n[0.97](http://xmlns.com/foaf/spec/20100101.html)\\n[0.96](http://xmlns.com/foaf/spec/20091215.html)\\n[Portable Contacts](http://portablecontacts.net/)\\n\\n### 2009-12-15\\n\\n\\n### 2007-11-02\\n\\n\\n### 2007-05-24\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.466Z\"\n    },\n    \"../applications/link-lister/data/starter-links.md\": {\n      \"content\": \"https://en.wikipedia.org/wiki/FOAF\\n\\n# https://en.wikipedia.org/wiki/WebID\\n\\n# https://en.wikipedia.org/wiki/Resource_Description_Framework\\n\\nhttp://xmlns.com/foaf/spec/\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.472Z\"\n    },\n    \"../applications/packer/about.md\": {\n      \"content\": \"# Packer Application\\n\\n_repopack/repomix equiv_\\n\\n```sh\\n./trans packer path/to/repo\\n\\n./trans packer ./\\n\\n./trans packer\\n```\\n\\nfrom Claude\\n\\n# Packer Application\\n\\n_repopack/repomix equiv_\\n\\n```sh\\n./trans packer path/to/repo\\n\\n./trans packer ./\\n\\n./trans packer\\n```\\n\\nWalks repository directory according to configured patterns, combines files into single AI-friendly document with:\\n\\n- Directory structure outline\\n- File content with metadata\\n- Comment stripping option\\n- Configurable include/exclude patterns\\n- Output format optimized for LLMs\\n\\n## Flow\\n\\n1. DirWalker scans repository with filters\\n2. FileReader loads content and metadata\\n3. FileContainer accumulates and formats data\\n4. FileWriter generates single combined output\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.481Z\"\n    },\n    \"../applications/packer/packer-flow.md\": {\n      \"content\": \"# Packer Pipeline Flow\\n\\n## Command Processing\\n1. `./trans packer ./src` initiates with:\\n   - application = \\\"packer\\\" \\n   - target = \\\"./src\\\"\\n   - Command utils resolves target to absolute path\\n   - Sets targetPath in message object\\n\\n## Pipeline Components\\n\\n### 1. DirWalker (p10)\\n- Input: message with targetPath = resolved \\\"./src\\\" path\\n- Config: \\n  ```turtle\\n  trn:dirWalker a trn:ConfigSet ;\\n    trn:sourceDir \\\".\\\" ;\\n    trn:includeExtensions \\\"['.md','.js','.ttl']\\\"\\n  ```\\n- Process:\\n  - Walks target directory recursively\\n  - Filters files by includeExtensions\\n  - For each matching file emits message with:\\n    ```javascript\\n    {\\n      filepath: relative path,\\n      fullPath: absolute path,\\n      filename: basename,\\n      content: undefined // filled by FileReader\\n    }\\n    ```\\n\\n### 2. StringFilter (p20)\\n- Input: individual file messages from DirWalker\\n- Config:\\n  ```turtle\\n  trn:filterConfig a trn:ConfigSet ;\\n    trn:includePatterns \\\"*.txt,*.md,*.js...\\\" ;\\n    trn:excludePatterns \\\"node_modules/*,dist/*...\\\"\\n  ```\\n- Process:\\n  - Filters files based on include/exclude patterns\\n  - Passes matching files downstream\\n  - Drops non-matching files\\n\\n### 3. FileReader (p30)\\n- Input: filtered file messages\\n- Config:\\n  ```turtle\\n  trn:readConfig a trn:ConfigSet ;\\n    trn:mediaType \\\"text/plain\\\"\\n  ```\\n- Process:\\n  - Reads file content\\n  - Adds content to message.content\\n  - Preserves file metadata\\n\\n### 4. FileContainer (p40)\\n- Input: messages with file content\\n- Config: \\n  ```turtle\\n  trn:containerConfig a trn:ConfigSet ;\\n    trn:destination \\\"repomix.json\\\"\\n  ```\\n- Process:\\n  - Accumulates files and metadata\\n  - Builds container structure:\\n    ```javascript\\n    {\\n      files: {\\n        [relativePath]: {\\n          content: string,\\n          type: string,\\n          timestamp: string\\n        }\\n      },\\n      summary: {\\n        totalFiles: number,\\n        fileTypes: Record<string, number>\\n      }\\n    }\\n    ```\\n\\n### 5. CaptureAll (p50)\\n- Stores all messages in whiteboard array\\n- Preserves message flow\\n\\n### 6. WhiteboardToMessage (p60)\\n- Transforms whiteboard array into structured message\\n- Groups similar properties\\n\\n### 7. Unfork (p70)\\n- Collapses forked message paths\\n- Ensures single output path\\n\\n### 8. FileWriter (p80)\\n- Input: final container message\\n- Config:\\n  ```turtle\\n  trn:writeConfig a trn:ConfigSet ;\\n    trn:destinationFile \\\"repomix-output.txt\\\"\\n  ```\\n- Process:\\n  - Writes formatted container to output file\\n  - Returns success message\\n\\n## Expected Output\\n- repomix-output.txt containing:\\n  - Directory structure of src/\\n  - File contents\\n  - File metadata\\n  - Summary statistics\\n\\n## Key Message Properties Throughout Pipeline\\n```javascript\\n{\\n  targetPath: \\\"/absolute/path/to/src\\\",\\n  rootDir: \\\"/path/to/packer/app\\\",\\n  filepath: \\\"relative/path/to/file\\\",\\n  content: \\\"file contents\\\",\\n  done: boolean // indicates completion\\n}\\n```\\n\\n## Error Handling\\n1. DirWalker handles missing/invalid directories\\n2. StringFilter validates patterns before use\\n3. FileReader checks file accessibility\\n4. FileContainer validates content structure \\n5. FileWriter ensures directory exists\\n\\n## Debug Points\\n- Check message.targetPath in DirWalker\\n- Verify pattern loading in StringFilter\\n- Monitor content preservation in FileReader\\n- Validate container structure before write\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.489Z\"\n    },\n    \"../applications/packer/packer-sources.md\": {\n      \"content\": \"# Packer Application Source Files\\n\\n## Core Processing \\n```\\nsrc/api/cli/run.js                          # Entry point, command line processing\\nsrc/api/common/CommandUtils.js              # Command parsing and routing\\nsrc/core/ApplicationManager.js              # Application lifecycle management\\nsrc/core/TransmissionBuilder.js             # Pipeline construction from configs\\nsrc/core/ModuleLoader.js                    # Dynamic processor loading\\nsrc/core/ModuleLoaderFactory.js             # Processor module instantiation\\n```\\n\\n## Pipeline Processors\\n```\\nsrc/processors/fs/DirWalker.js              # Directory traversal\\nsrc/processors/text/StringFilter.js         # File pattern matching\\nsrc/processors/fs/FileReader.js             # File content loading\\nsrc/processors/packer/FileContainer.js      # Content aggregation\\nsrc/processors/util/CaptureAll.js           # Message capture\\nsrc/processors/util/WhiteboardToMessage.js  # Message transformation\\nsrc/processors/flow/Unfork.js              # Pipeline convergence\\nsrc/processors/fs/FileWriter.js             # Output generation\\n```\\n\\n## Configuration\\n```\\nsrc/applications/packer/transmissions.ttl   # Pipeline definition\\nsrc/applications/packer/config.ttl          # Processor configuration\\nsrc/applications/packer/about.md            # Application documentation\\n```\\n\\n## Base Classes & Support\\n```\\nsrc/engine/Transmission.js                  # Pipeline execution engine\\nsrc/processors/base/Processor.js            # Base processor functionality\\nsrc/processors/base/ProcessorSettings.js    # Configuration management\\n```\\n\\n## Factories\\n```\\nsrc/processors/fs/FsProcessorsFactory.js           # File system processors\\nsrc/processors/text/TextProcessorsFactory.js       # Text processing\\nsrc/processors/packer/PackerProcessorsFactory.js   # Packer-specific processors\\nsrc/processors/util/UtilProcessorsFactory.js       # Utility processors\\nsrc/processors/flow/FlowProcessorsFactory.js       # Flow control processors\\n```\\n\\n## Utilities\\n```\\nsrc/utils/ns.js                            # RDF namespace management\\nsrc/utils/Logger.js                        # Logging infrastructure\\nsrc/utils/footpath.js                      # Path resolution\\nsrc/utils/GrapoiHelpers.js                 # RDF graph utilities\\n```\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.504Z\"\n    },\n    \"../applications/postcraft/about.md\": {\n      \"content\": \"```sh\\ncd ~/github-danny/transmissions\\n\\n./trans postcraft ../postcraft/danny.ayers.name\\n```\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.516Z\"\n    },\n    \"../applications/postcraft-clear-cache/about.md\": {\n      \"content\": \"```sh\\ncd ~/github-danny/transmissions\\n\\n./trans postcraft-clear-cache ../postcraft/danny.ayers.name\\n```\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.534Z\"\n    },\n    \"../applications/postcraft-previous/about.md\": {\n      \"content\": \"```sh\\ncd ~/github-danny/transmissions\\n\\n./trans postcraft ../postcraft/danny.ayers.name\\n```\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.545Z\"\n    },\n    \"../applications/postcraft-render1/about.md\": {\n      \"content\": \"# Postcraft Render 1\\n\\nwalk source dirs for `.md`, render to `.html` in cache\\n\\n```sh\\ncd ~/github-danny/transmissions\\n\\n./trans postcraft-render1 ../postcraft/test-site\\n\\n./trans postcraft-render1 ../postcraft/danny.ayers.name\\n```\\n\\n```sparql\\nPREFIX schema: <http://schema.org/>\\nSELECT ?post ?title ?content ?date ?author WHERE {\\n  ?post a schema:Article ;\\n        schema:headline ?title ;\\n        schema:articleBody ?content ;\\n        schema:datePublished ?date ;\\n        schema:author/schema:name ?author .\\n} ORDER BY DESC(?date)\\n```\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.566Z\"\n    },\n    \"../applications/postcraft-render1/data/cache/2023-10-27_hello.md\": {\n      \"content\": \"<h1>Hello World! (again)</h1>\\n<p>lorem etc.</p>\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.578Z\"\n    },\n    \"../applications/postcraft-render1/data/cache/2025-01-08_hello-again.md\": {\n      \"content\": \"<h1>Hello World! (again)</h1>\\n<p>lorem etc.</p>\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.606Z\"\n    },\n    \"../applications/postcraft-render2/about.md\": {\n      \"content\": \"# Postcraft Render 2\\n\\nwalk cache dirs for `.html`, template to post pages\\n\\n```sh\\ncd ~/github-danny/transmissions\\n\\n./trans postcraft-render2 ../postcraft/test-site\\n\\n./trans postcraft-render2 ../postcraft/danny.ayers.name\\n```\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.641Z\"\n    },\n    \"../applications/postcraft-render2/data/cache/2023-10-27_hello.md\": {\n      \"content\": \"<h1>Hello World! (again)</h1>\\n<p>lorem etc.</p>\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.670Z\"\n    },\n    \"../applications/postcraft-render2/data/cache/2025-01-08_hello-again.md\": {\n      \"content\": \"<h1>Hello World! (again)</h1>\\n<p>lorem etc.</p>\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.708Z\"\n    },\n    \"../applications/selfie/about.md\": {\n      \"content\": \"# Selfie\\n\\nScan `transmissions`, generate self-descriptions - per-dir about.md, about.ttl\\n\\n## Runner\\n\\n```sh\\ncd ~/github-danny/transmissions # my local path\\n./trans app-template\\n```\\n\\n## Description\\n\\n---\\n\\n- Goal : a tool to recursively read local filesystem directories, checking for files with the `.md` extension to identify collections of such\\n- Goal : documentation of the app creation process\\n- Implementation : a #Transmissions application\\n- SoftGoal : reusability\\n- _non-goal_ - efficiency\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.732Z\"\n    },\n    \"../applications/test_blanker/about.md\": {\n      \"content\": \"# App Template\\n\\n## Runner\\n\\n```sh\\ncd ~/github-danny/transmissions # my local path\\n./trans test_blanker\\n```\\n\\n## Description\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.749Z\"\n    },\n    \"../applications/test_config-settings/about.md\": {\n      \"content\": \"# App Template\\n\\n## Runner\\n\\n```sh\\ncd ~/github-danny/transmissions # my local path\\n./trans test_config-settings\\n```\\n\\n## Description\\n\\n---\\n\\n- Goal : a tool to recursively read local filesystem directories, checking for files with the `.md` extension to identify collections of such\\n- Goal : documentation of the app creation process\\n- Implementation : a #Transmissions application\\n- SoftGoal : reusability\\n- _non-goal_ - efficiency\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.753Z\"\n    },\n    \"../applications/test_configmap/about.md\": {\n      \"content\": \"# Application : test_fs-rw\\n\\n```sh\\ncd ~/github-danny/transmissions/ # my local path\\n\\n# run as application\\n./trans test_configmap\\n```\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.758Z\"\n    },\n    \"../applications/test_configmap/data/input/input-01.md\": {\n      \"content\": \"Hello!\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.762Z\"\n    },\n    \"../applications/test_configmap/data/output/output-01.md\": {\n      \"content\": \"Hello!\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.766Z\"\n    },\n    \"../applications/test_configmap/data/output/required-01.md\": {\n      \"content\": \"Hello!\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.771Z\"\n    },\n    \"../applications/test_configmap/simple.js\": {\n      \"content\": \"// src/applications/test_fs-rw/simple.js\\n\\nimport FileReader from '../../processors/fs/FileReader.js'\\nimport FileWriter from '../../processors/fs/FileWriter.js'\\n\\nconst config = {\\n    \\\"simples\\\": \\\"true\\\",\\n    \\\"sourceFile\\\": \\\"input/input-01.md\\\",\\n    \\\"destinationFile\\\": \\\"output/output-01.md\\\"\\n}\\n\\nvar message = { \\\"dataDir\\\": \\\"src/applications/test_fs-rw/data\\\" }\\n\\nconst read = new FileReader(config)\\n\\nmessage = await read.process(message)\\n\\nconst write = new FileWriter(config)\\n\\nmessage = await write.process(message)\\n\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.775Z\"\n    },\n    \"../applications/test_dirwalker/about.md\": {\n      \"content\": \"# DirWalker\\n\\n## Runner\\n\\n```sh\\ncd ~/github-danny/transmissions  # my local path\\n\\n./trans test_dirwalker\\n```\\n\\n## Description\\n\\n---\\n\\n- Goal : a tool to recursively read local filesystem directories, checking for files with the `.md` extension to identify collections of such\\n- Goal : documentation of the app creation process\\n- Implementation : a #Transmissions application\\n- SoftGoal : reusability\\n- _non-goal_ - efficiency\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.779Z\"\n    },\n    \"../applications/test_env-loader/about.md\": {\n      \"content\": \"```sh\\ncd ~/github-danny/transmissions\\n./trans env-loader-test\\n```\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.791Z\"\n    },\n    \"../applications/test_file-copy-remove/about.md\": {\n      \"content\": \"# file-copy-remove-test\\n\\nrun with :\\n\\n```\\n# in transmissions dir\\n\\n./run file-copy-remove-test\\n```\\n\\nor\\n\\n```\\nnpm test -- tests/integration/file-copy-remove-test.spec.js\\n```\\n\\nthis should :\\n\\n- copy `start/one.txt` into `single-empty/`\\n- copy `single-empty/one.txt` into `single-full/`\\n- remove `single-empty/one.txt`\\n\\n- copy everything in `start/` into `several-empty/`\\n- copy everything in `several-empty/` into `several-full/`\\n- remove everything in `several-empty/`\\n\\nHmm, test services would be helpful to check before and after - or maybe just use regular test runner script from npm?\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.795Z\"\n    },\n    \"../applications/test_file-to-sparqlstore/about.md\": {\n      \"content\": \"`src/applications/test_file-to-sparqlstore/about.md`\\n\\n# Application 'test_file-to-sparqlstore'\\n\\n**Checks interaction with SPARQL store**\\n\\n## Runner\\n\\n```sh\\ncd ~/github-danny/transmissions # my local path\\n./trans test_file-to-sparqlstore\\n```\\n\\n## Description\\n\\n1. Reads a file from fs\\n2. Templates it using nunjucks into a SPARQL UPDATE query\\n3. POSTs this to the specified endpoint\\n4. Does a SPARQL SELECT query (based on date) to retrieve data\\n5. Compares this with the original content to ensure it is in the store\\n\\nData looks something like :\\n\\n```turtle\\n@prefix schema: <http://schema.org/> .\\n\\n<http://example.com/posts-one> a schema:BlogPosting ;\\n    schema:headline \\\"Post one\\\" ;\\n    schema:url <http://example.com/posts-one> ;\\n    schema:description \\\"Post one content.\\\" ;\\n    schema:datePublished \\\"2023-05-22T13:00:00Z\\\"^^xsd:dateTime ;\\n    schema:dateModified \\\"2023-05-22T15:00:00Z\\\"^^xsd:dateTime ;\\n    schema:author [\\n        a schema:Person ;\\n        schema:name \\\"John Doe\\\" ;\\n        schema:email \\\"johndoe@example.com\\\"\\n    ] .\\n```\\n\\n## Notes\\n\\nTODO complete -\\n\\nsrc/applications/test_file-to-sparqlstore\\n├── about.md\\n├── config.ttl\\n├── data\\n│   ├── input\\n│   │   └── input.md\\n│   └── output\\n├── diamonds\\n│   ├── select-blogposting.njk\\n│   └── update-blogposting.njk\\n├── endpoint.json\\n└── transmissions.ttl\\n\\nsrc/processors/sparql\\n├── about.md\\n├── SPARQLProcessorsFactory.js\\n├── SPARQLSelect.js\\n└── SPARQLUpdate.js\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.799Z\"\n    },\n    \"../applications/test_file-to-sparqlstore/data/input/input.md\": {\n      \"content\": \"# Test Blog Post\\n\\nThis is a test blog post that will be converted to RDF and stored in the SPARQL database.\\n\\n## Metadata\\n\\n- Title: Test Blog Post\\n- Author: Test User\\n- Email: test@example.com\\n\\n## Content\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor\\nincididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis\\nnostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.804Z\"\n    },\n    \"../applications/test_file-to-sparqlstore/docs/handover-doc.md\": {\n      \"content\": \"# SPARQL Integration Handover Document\\n\\n## New Components Added\\n\\n### 1. SPARQL Processors\\n- **SPARQLSelect.js**: Query processor with template support\\n- **SPARQLUpdate.js**: Update processor with template support\\n- **SPARQLProcessorsFactory.js**: Factory for processor instantiation\\n\\n### 2. Test Application\\n- Location: src/applications/test_file-to-sparqlstore/\\n- Purpose: End-to-end testing of SPARQL integration\\n- Integration with FileReader for markdown processing\\n\\n### 3. Configuration Files\\n- endpoint.json: SPARQL endpoint configuration\\n- Test data and templates under diamonds/\\n- SPARQL query/update templates\\n\\n## Key Technical Details\\n\\n### Authentication\\n- Uses Basic Auth\\n- Credentials in endpoint.json\\n- Separate configs for query/update endpoints\\n\\n### Data Model\\n- Uses schema.org vocabulary\\n- BlogPosting as primary type\\n- Nested author information\\n- Timestamps for created/modified\\n\\n### Error Handling\\n- Network failures\\n- Authentication errors\\n- Query validation\\n- Template rendering errors\\n\\n## Testing\\n\\n### Automated Tests\\n- Unit tests for processors\\n- Integration tests for pipeline\\n- Template validation\\n\\n### Manual Testing\\n- Test scripts in bash/Python\\n- Example queries\\n- Curl commands for direct testing\\n\\n## Dependencies\\n- axios for HTTP\\n- nunjucks for templates\\n- rdf-ext for RDF handling\\n\\n## Known Issues/TODOs\\n1. Template caching not implemented\\n2. Bulk operations not optimized\\n3. Add transaction support\\n4. Enhance error reporting\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.810Z\"\n    },\n    \"../applications/test_file-to-sparqlstore/docs/sparql-processors-docs.md\": {\n      \"content\": \"# SPARQL Processors Documentation\\n\\n## Overview\\nThe SPARQL processors provide functionality for interacting with SPARQL endpoints through the Transmissions pipeline framework. Two main processors are provided:\\n- SPARQLSelect: Executes SELECT queries\\n- SPARQLUpdate: Executes UPDATE operations\\n\\n## Configuration\\nConfiguration is managed through endpoint.json:\\n```json\\n{\\n    \\\"name\\\": \\\"local query\\\",\\n    \\\"type\\\": \\\"query|update\\\",\\n    \\\"url\\\": \\\"http://localhost:3030/dataset/query\\\",\\n    \\\"credentials\\\": {\\n        \\\"user\\\": \\\"username\\\",\\n        \\\"password\\\": \\\"password\\\"\\n    }\\n}\\n```\\n\\n## SPARQLSelect Processor\\nExecutes templated SELECT queries against a SPARQL endpoint.\\n\\n### Usage\\n```turtle\\n:query a :Transmission ;\\n    :pipe (:p10) .\\n\\n:p10 a :SPARQLSelect ;\\n    :settings [\\n        :templateFilename \\\"queries/select.njk\\\" ;\\n        :endpointSettings \\\"endpoint.json\\\"\\n    ] .\\n```\\n\\n### Template Variables\\n- startDate: ISO datetime for filtering\\n- Additional variables from message object\\n\\n## SPARQLUpdate Processor\\nExecutes templated UPDATE operations against a SPARQL endpoint.\\n\\n### Usage\\n```turtle\\n:update a :Transmission ;\\n    :pipe (:p10) .\\n\\n:p10 a :SPARQLUpdate ;\\n    :settings [\\n        :templateFilename \\\"queries/update.njk\\\" ;\\n        :endpointSettings \\\"endpoint.json\\\"\\n    ] .\\n```\\n\\n### Template Variables\\n- id: Auto-generated UUID\\n- title: From message.meta.title\\n- content: From message.content\\n- published/modified: Current timestamp\\n- author: From message.meta.author\\n\\n## Error Handling\\n- Connection failures throw network errors\\n- Authentication failures throw 401/403 errors\\n- Invalid queries throw 400 errors\\n- All errors include detailed messages in logs\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.815Z\"\n    },\n    \"../applications/test_file-to-sparqlstore/docs/test-app-docs.md\": {\n      \"content\": \"# SPARQL Store Test Application\\n\\n## Purpose\\nTests complete pipeline functionality for reading files, converting to RDF, storing in a SPARQL database, and verifying storage through queries.\\n\\n## Quick Start\\n1. Configure SPARQL endpoint in endpoint.json\\n2. Place test markdown in data/input/input.md\\n3. Run application:\\n```bash\\n./trans test_file-to-sparqlstore\\n```\\n\\n## Components\\n1. FileReader processor:\\n   - Reads input markdown\\n   - Extracts metadata and content\\n\\n2. SPARQLUpdate processor:\\n   - Converts markdown to RDF using schema.org vocabulary\\n   - Stores in SPARQL database\\n\\n3. SPARQLSelect processor:\\n   - Queries stored data\\n   - Verifies successful storage\\n\\n## Testing\\n### Manual Testing\\nUse provided test scripts:\\n```bash\\n# Using bash script\\n./test-queries.sh\\n\\n# Using Python script\\npython3 test-queries.py\\n```\\n\\n### Example Queries\\n```sparql\\n# Find recently added posts\\nSELECT ?post ?title WHERE {\\n  ?post a schema:BlogPosting ;\\n        schema:headline ?title ;\\n        schema:datePublished ?date .\\n  FILTER(?date >= \\\"2024-01-01T00:00:00Z\\\"^^xsd:dateTime)\\n}\\n```\\n\\n## Configuration\\n1. endpoint.json: SPARQL endpoint details\\n2. config.ttl: Transmission configuration\\n3. transmissions.ttl: Pipeline definition\\n4. diamonds/*.njk: Query templates\\n\\n## Error Cases Handled\\n- Missing input files\\n- SPARQL endpoint connection failures\\n- Authentication errors\\n- Invalid markdown format\\n- Failed data verification\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.820Z\"\n    },\n    \"../applications/test_file-to-sparqlstore/examples/sparql-queries.md\": {\n      \"content\": \"# Query all blog posts\\nPREFIX schema: <http://schema.org/>\\nSELECT ?post ?title ?date ?author WHERE {\\n  ?post a schema:BlogPosting ;\\n        schema:headline ?title ;\\n        schema:datePublished ?date ;\\n        schema:author/schema:name ?author .\\n} ORDER BY DESC(?date)\\n\\n# Query posts by specific author\\nPREFIX schema: <http://schema.org/>\\nSELECT ?post ?title ?date WHERE {\\n  ?post a schema:BlogPosting ;\\n        schema:headline ?title ;\\n        schema:datePublished ?date ;\\n        schema:author [ schema:name \\\"Test User\\\" ] .\\n} ORDER BY DESC(?date)\\n\\n# Query posts in date range\\nPREFIX schema: <http://schema.org/>\\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\\nSELECT ?post ?title ?date WHERE {\\n  ?post a schema:BlogPosting ;\\n        schema:headline ?title ;\\n        schema:datePublished ?date .\\n  FILTER(?date >= \\\"2024-01-01T00:00:00Z\\\"^^xsd:dateTime && \\n         ?date <= \\\"2024-12-31T23:59:59Z\\\"^^xsd:dateTime)\\n} ORDER BY DESC(?date)\\n\\n# Update/Insert new blog post\\nPREFIX schema: <http://schema.org/>\\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\\nINSERT DATA {\\n  <http://example.com/posts/test-123> a schema:BlogPosting ;\\n    schema:headline \\\"Test Post\\\" ;\\n    schema:description \\\"Test content\\\" ;\\n    schema:datePublished \\\"2024-01-16T10:00:00Z\\\"^^xsd:dateTime ;\\n    schema:dateModified \\\"2024-01-16T10:00:00Z\\\"^^xsd:dateTime ;\\n    schema:author [\\n      a schema:Person ;\\n      schema:name \\\"Test User\\\" ;\\n      schema:email \\\"test@example.com\\\"\\n    ] .\\n}\\n\\n# Delete a blog post\\nPREFIX schema: <http://schema.org/>\\nDELETE WHERE {\\n  <http://example.com/posts/test-123> ?p ?o .\\n  OPTIONAL { ?o ?p2 ?o2 }\\n}\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.825Z\"\n    },\n    \"../applications/test_filename-mapper/about.md\": {\n      \"content\": \"# Test Filename Mapper\\n\\n## Runner\\n\\n```sh\\ncd ~/github-danny/transmissions # my local path\\n./trans test_filename-mapper\\n\\nnpm test -- tests/unit/filename-mapper.spec.js\\nnpm test -- tests/integration/filename-mapper.spec.js\\n```\\n\\n## Description\\n\\nTests the FilenameMapper processor by:\\n\\n1. Reading a file\\n2. Mapping its filename according to configuration\\n3. Writing the file with the new name\\n\\n## Test Files\\n\\n- Input: data/input/input-01.txt\\n- Expected: data/output/required-01.txt\\n- Output: data/output/output-01.txt\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.830Z\"\n    },\n    \"../applications/test_filename-mapper/filename-mapper-simple.js\": {\n      \"content\": \"import FilenameMapper from '../../processors/fs/FilenameMapper.js';\\nimport FileReader from '../../processors/fs/FileReader.js';\\nimport FileWriter from '../../processors/fs/FileWriter.js';\\n\\nconst config = {\\n    \\\"simples\\\": true,\\n    \\\"sourceFile\\\": \\\"input/input-01.txt\\\",\\n    \\\"destinationFile\\\": \\\"output/output-01.txt\\\",\\n    \\\"extensions\\\": {\\n        \\\"html\\\": \\\".mm.html\\\",\\n        \\\"svg\\\": \\\".mm.svg\\\"\\n    }\\n};\\n\\nasync function runPipeline() {\\n    var message = {\\n        \\\"dataDir\\\": \\\"src/applications/test_filename-mapper/data\\\",\\n        \\\"format\\\": \\\"html\\\"\\n    };\\n\\n    // Read input file\\n    const reader = new FileReader(config);\\n    message = await reader.process(message);\\n\\n    // Map filename\\n    const mapper = new FilenameMapper(config);\\n    message = await mapper.process(message);\\n\\n    // Write output file\\n    const writer = new FileWriter(config);\\n    message = await writer.process(message);\\n\\n    return message;\\n}\\n\\nrunPipeline().catch(console.error);\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.835Z\"\n    },\n    \"../applications/test_filereader/about.md\": {\n      \"content\": \"# Example Application `about.md`\\n\\n## Runner\\n\\n```sh\\ncd ~/github-danny/transmissions # my local path\\n./trans test_filereader\\n```\\n\\n## Description\\n\\n---\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.840Z\"\n    },\n    \"../applications/test_filereader/data/input/input.md\": {\n      \"content\": \"This is the content of file input.md\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.845Z\"\n    },\n    \"../applications/test_foreach/about.md\": {\n      \"content\": \"# ForEach processor module for Transmissions\\n\\n```sh\\n./trans test_fork\\n```\\n\\nYour Goal is to write a processor module for Transmissions that will initiate multiple processing pipelines based on a list provided in the incoming message. First review these instructions as a whole, and then identify the subgoals. Then, taking each subgoal in turn, break it down into a concrete series of tasks. Carry out the sequence of tasks.  \\nYou have plenty of time, so don't rush, try to be as careful in understanding and operation as possible.\\nExisting source code may be found in the Project Knowledge files.\\n\\nTwo modules are required -\\n\\n1. `ForEach` located in :\\n\\n```sh\\n./transmissions/src/processors/flow/ForEach.js\\n```\\n\\nmodeled on :\\n\\n```sh\\n./transmissions/src/processors/templates/ProcessorTemplate.js\\n```\\n\\n2. `FlowProcessorsFactory` located in\\n\\n```sh\\n./transmissions/src/processors/flow/FlowProcessorsFactory.js\\n```\\n\\nmodeled on :\\n\\n```sh\\n/transmissions/src/processors/templates/TemplateProcessorsFactory.js\\n```\\n\\nThe input message will contain the list to be processed in the form of this example :\\n\\n```json\\n{\\n  \\\"foreach\\\": [\\\"item1\\\", \\\"item2\\\", \\\"item3\\\"]\\n}\\n```\\n\\nThe behavior will be to emit the message to a subsequent processor using the existing engine infrastructure, like a simpler version of :\\n\\n```sh\\ntransmissions/src/processors/fs/DirWalker.js\\n```\\n\\nEach message emitted will be a structuredClone of the input message.\\n\\nOnce this code is completed, create application definitions in the form of these examples :\\n\\n```sh\\ntransmissions/src/applications/test_fork/transmissions.ttl\\ntransmissions/src/applications/test_fork/processors-config.ttl\\n```\\n\\nAfter you have finished all these, re-read the high level Goal and taking each of your derived subgoals in turn, review your code to ensure that it fulfils the requirements.\\nShow me the full source of the implementations.\\n\\n---\\n\\n/home/danny/github-danny/postcraft/danny.ayers.name/content-raw/entries/2024-09-27_lively-distractions.md\\n\\nhttps://github.com/github/rest-api-description\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.850Z\"\n    },\n    \"../applications/test_fork/about.md\": {\n      \"content\": \"# Test Fork/Unfork\\n\\n```\\n./run test_fork | grep 's2 a NOP'\\n```\\n\\nshould show the number of forks + 1 (for `message.done`)\\n\\n```\\n./run test_fork | grep s1.s2.s10.s11.s12.s13\\n```\\n\\nshould show just one\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.855Z\"\n    },\n    \"../applications/test_fork-unfork/about.md\": {\n      \"content\": \"# Test Fork/Unfork\\n\\n## ./trans test_fork-unfork\\n\\n```\\n./run test_fork | grep 's2 a NOP'\\n```\\n\\nshould show the number of forks + 1 (for `message.done`)\\n\\n```\\n./run test_fork | grep s1.s2.s10.s11.s12.s13\\n```\\n\\nshould show just one\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.859Z\"\n    },\n    \"../applications/test_fs-rw/about.md\": {\n      \"content\": \"# Application : test_fs-rw\\n\\n```sh\\ncd ~/github-danny/transmissions/ # my local path\\n\\n# run as application\\n./trans test_fs-rw\\n```\\n\\n---\\n\\nCopies\\n\\n```sh\\nsrc/applications/test_fs-rw/data/output/input-01.md\\n```\\n\\nto\\n\\n```sh\\nsrc/applications/test_fs-rw/data/output/output-01.md\\n```\\n\\nthe tests compare the new file with :\\n\\n```sh\\nsrc/applications/test_fs-rw/data/output/required-01.md\\n```\\n\\n```sh\\ncd ~/github-danny/transmissions/ # my local path\\n\\n# run as application\\n./trans test_fs-rw\\n\\n# run as simples\\nnode src/applications/test_fs-rw/simple.js\\n\\n## Tests in tests/integration\\n\\n# test as application\\nnpm test -- --filter=\\\"fs-rw test\\\"\\n\\n# test as simples\\nnpm test -- --filter=\\\"fs-rw simple test\\\"\\n```\\n\\n---\\n\\n```sh\\ncd ~/github-danny/transmissions/\\n./trans test_restructure -P ./src/applications/test_restructure/input/input-01.json\\n```\\n\\n---\\n\\n./trans claude-json-converter -P ./conversations.json\\n\\n```turtle\\n:s40 a :Restructure ;\\n    trm:configKey :walkPrep .\\n\\n...\\n\\nt:walkPrep a trm:ReMap ;\\n    trm:rename (t:pp1 t:pp2) . # consider using blank nodes\\n    t:pp1   trm:pre     \\\"content\\\" ;\\n            trm:post    \\\"template\\\"  .\\n    t:pp2   trm:pre     \\\"entryContentMeta.sourceDir\\\" ;\\n            trm:post    \\\"sourceDir\\\" .\\n```\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.861Z\"\n    },\n    \"../applications/test_fs-rw/data/input/input-01.md\": {\n      \"content\": \"Hello!\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.864Z\"\n    },\n    \"../applications/test_fs-rw/data/output/required-01.md\": {\n      \"content\": \"Hello!\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.866Z\"\n    },\n    \"../applications/test_fs-rw/simple.js\": {\n      \"content\": \"// src/applications/test_fs-rw/simple.js\\n\\nimport FileReader from '../../processors/fs/FileReader.js'\\nimport FileWriter from '../../processors/fs/FileWriter.js'\\n\\nconst config = {\\n    \\\"simples\\\": \\\"true\\\",\\n    \\\"sourceFile\\\": \\\"input/input-01.md\\\",\\n    \\\"destinationFile\\\": \\\"output/output-01.md\\\"\\n}\\n\\nvar message = { \\\"dataDir\\\": \\\"src/applications/test_fs-rw/data\\\" }\\n\\nconst read = new FileReader(config)\\n\\nmessage = await read.process(message)\\n\\nconst write = new FileWriter(config)\\n\\nmessage = await write.process(message)\\n\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.870Z\"\n    },\n    \"../applications/test_http-server/about.md\": {\n      \"content\": \"# App Template\\n\\n## Runner\\n\\n```sh\\ncd ~/github-danny/transmissions # my local path\\n./trans test_http-server\\n\\n---\\nruns at :\\n\\nhttp://localhost:4000/transmissions/test/\\n\\n```\\n\\ncurl -X POST http://localhost:4000/shutdown\\n\\nnode src/applications/test_http-server/test-shutdown.js\\n\\nnpm test -- tests/unit/http-server_ShutdownService.spec.js\\n\\n```\\n\\n## Description\\n\\nTest application for HttpServer processor that:\\n\\n- Serves static files from data/input directory\\n- Listens on port 4000\\n- Shuts down on POST to /shutdown endpoint\\n- Base path: /transmissions/test/\\n```\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.873Z\"\n    },\n    \"../applications/test_http-server/data/input/metrics.js\": {\n      \"content\": \"class MetricsUI {\\n    constructor() {\\n        this.ws = null;\\n        this.token = null;\\n        this.setupWebSocket();\\n        this.setupAuth();\\n    }\\n\\n    setupWebSocket() {\\n        this.ws = new WebSocket(`ws://${window.location.host}/metrics`);\\n        this.ws.onmessage = (event) => {\\n            const metrics = JSON.parse(event.data);\\n            this.updateMetricsDisplay(metrics);\\n        };\\n    }\\n\\n    async setupAuth() {\\n        const response = await fetch('/admin/token');\\n        const { token } = await response.json();\\n        this.token = token;\\n    }\\n\\n    updateMetricsDisplay(metrics) {\\n        const display = document.getElementById('metrics');\\n        display.innerHTML = `\\n            <div>Uptime: ${Math.floor(metrics.uptime)}s</div>\\n            <div>Connections: ${metrics.connections}</div>\\n            <div>Requests: ${metrics.requests}</div>\\n            <div>Memory Used: ${Math.floor(metrics.memory.used / 1024 / 1024)}MB</div>\\n            <div>CPU Load: ${metrics.cpu.load[0].toFixed(2)}</div>\\n        `;\\n    }\\n\\n    async shutdown() {\\n        try {\\n            await fetch('/admin/shutdown', {\\n                method: 'POST',\\n                headers: {\\n                    'Authorization': `Bearer ${this.token}`\\n                }\\n            });\\n        } catch (error) {\\n            console.error('Shutdown failed:', error);\\n        }\\n    }\\n}\\n\\nexport default new MetricsUI();\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.876Z\"\n    },\n    \"../applications/test_http-server/shutdown-client-auth.js\": {\n      \"content\": \"async function shutdownServer(baseUrl, username, password) {\\n    const credentials = Buffer.from(`${username}:${password}`).toString('base64');\\n    \\n    try {\\n        const response = await fetch(`${baseUrl}/admin/shutdown`, {\\n            method: 'POST',\\n            headers: {\\n                'Authorization': `Basic ${credentials}`\\n            }\\n        });\\n        \\n        if (!response.ok) {\\n            throw new Error(`Shutdown failed: ${response.statusText}`);\\n        }\\n        \\n        return await response.text();\\n    } catch (error) {\\n        console.error('Shutdown error:', error);\\n        throw error;\\n    }\\n}\\n\\n// Usage example:\\ntry {\\n    const baseUrl = 'http://localhost:4000';\\n    const response = await fetch(`${baseUrl}/admin/credentials`);\\n    const { username, password } = await response.json();\\n    await shutdownServer(baseUrl, username, password);\\n} catch (error) {\\n    console.error('Error:', error);\\n}\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.879Z\"\n    },\n    \"../applications/test_http-server/test-shutdown.js\": {\n      \"content\": \"import fetch from 'node-fetch';\\n\\nasync function testShutdown() {\\n    try {\\n        const response = await fetch('http://localhost:4000/shutdown', {\\n            method: 'POST'\\n        });\\n        console.log('Server response:', await response.text());\\n    } catch (error) {\\n        console.error('Error:', error.message);\\n    }\\n}\\n\\ntestShutdown();\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.882Z\"\n    },\n    \"../applications/test_nop/about.md\": {\n      \"content\": \"# nop\\n\\n## Description\\n\\nminimal for comparing with simple runner\\n\\n---\\n\\n- Goal : a tool to recursively read local filesystem directories, checking for files with the `.md` extension to identify collections of such\\n- Goal : documentation of the app creation process\\n- Implementation : a #Transmissions application\\n- SoftGoal : reusability\\n- _non-goal_ - efficiency\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.888Z\"\n    },\n    \"../applications/test_restructure/about.md\": {\n      \"content\": \"# Application : test_restructure\\n\\nRun with :\\n\\n```sh\\ncd ~/github-danny/transmissions/ # local path of repo\\n./trans test_restructure\\n```\\n\\n#:todo make this into something like processor signature\\n#:todo make Turtle version\\n\\n## Description\\n\\nReads :\\n\\n```sh\\nsrc/applications/test_restructure/data/output/input-01.json\\n```\\n\\nas a message, restructures it according to config, then writes the result to :\\n\\n```sh\\nsrc/applications/test_restructure/data/output/output-01.json\\n```\\n\\nthe tests compare the new file with :\\n\\n```sh\\nsrc/applications/test_restructure/data/output/required-01.json\\n```\\n\\n```sh\\ncd ~/github-danny/transmissions/ # my local path\\n\\n# run as application\\n./trans test_restructure\\n\\n# run as simples\\nnode src/applications/test_restructure/simple.js\\n\\n## Tests in tests/integration\\n\\n# test as application\\nnpm test -- --filter=\\\"restructure test\\\"\\n\\n# test as simples\\nnpm test -- --filter=\\\"restructure_simple test\\\"\\n```\\n\\n---\\n\\n```sh\\ncd ~/github-danny/transmissions/\\n./trans test_restructure -P ./src/applications/test_restructure/input/input-01.json\\n```\\n\\n---\\n\\n./trans claude-json-converter -P ./conversations.json\\n\\n```turtle\\n:s40 a :Restructure ;\\n    trm:configKey :walkPrep .\\n\\n...\\n\\nt:walkPrep a trm:ReMap ;\\n    trm:rename (t:pp1 t:pp2) . # consider using blank nodes\\n    t:pp1   trm:pre     \\\"content\\\" ;\\n            trm:post    \\\"template\\\"  .\\n    t:pp2   trm:pre     \\\"entryContentMeta.sourceDir\\\" ;\\n            trm:post    \\\"sourceDir\\\" .\\n```\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.892Z\"\n    },\n    \"../applications/test_restructure/simple.js\": {\n      \"content\": \"// src/applications/test_restructure/simple.js\\n\\nimport FileReader from '../../processors/fs/FileReader.js'\\nimport Restructure from '../../processors/json/Restructure.js'\\nimport FileWriter from '../../processors/fs/FileWriter.js'\\n\\nconst config = {\\n    \\\"simples\\\": \\\"true\\\",\\n    \\\"sourceFile\\\": \\\"input/input-01.json\\\",\\n    \\\"destinationFile\\\": \\\"output/output-01.json\\\",\\n    \\\"mediaType\\\": \\\"application/json\\\",\\n    \\\"rename\\\": [{\\n        \\\"pre\\\": \\\"content.item.chat_messages\\\",\\n        \\\"post\\\": \\\"content.channel\\\"\\n    }, {\\n        \\\"pre\\\": \\\"content.item.uuid\\\",\\n        \\\"post\\\": \\\"content.filename\\\"\\n    }, {\\n        \\\"pre\\\": \\\"content.item.name\\\",\\n        \\\"post\\\": \\\"content.title\\\"\\n    }]\\n}\\n\\nvar message = { \\\"dataDir\\\": \\\"src/applications/test_restructure/data\\\" }\\n\\nconst read = new FileReader(config)\\nmessage = await read.process(message)\\n\\nconst restructure = new Restructure(config)\\nmessage = await restructure.process(message)\\n\\nconst write = new FileWriter(config)\\nawait write.process(message)\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.895Z\"\n    },\n    \"../applications/test_runcommand/about.md\": {\n      \"content\": \"# Application: test_runcommand\\n\\n```sh\\ncd ~/github-danny/transmissions/ # my local path\\n\\n# run as application\\n./trans test_runcommand\\n```\\n\\nThis test application demonstrates the RunCommand processor by executing a simple echo command and verifying its output.\\n\\nThe test runs a simple echo command defined in config.ttl and compares the output with the expected content in:\\n\\n```sh\\nsrc/applications/test_runcommand/data/output/required-01.txt\\n```\\n\\n```sh\\n# run as application\\n./trans test_runcommand\\n\\n# run tests\\nnpm test -- --filter=\\\"runcommand test\\\"\\n```\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.898Z\"\n    },\n    \"../applications/test_runcommand/simple.js\": {\n      \"content\": \"import RunCommand from '../../processors/unsafe/RunCommand.js'\\nimport FileWriter from '../../processors/fs/FileWriter.js'\\nimport FileReader from '../../processors/fs/FileReader.js'\\nimport CaptureAll from '../../processors/util/CaptureAll.js'\\nimport WhiteboardToMessage from '../../processors/util/WhiteboardToMessage.js'\\n\\nconst config = {\\n    \\\"simples\\\": \\\"true\\\",\\n    \\\"allowedCommands\\\": [\\\"ls\\\", \\\"echo\\\", \\\"pwd\\\"],\\n    \\\"blockedPatterns\\\": [\\\"rm\\\", \\\">\\\", \\\"|\\\", \\\";\\\"],\\n    \\\"sourceFile\\\": \\\"input/input-01.txt\\\",\\n    \\\"destinationFile\\\": \\\"output/output-01.txt\\\",\\n    \\\"whiteboard\\\": []\\n}\\n\\nasync function runPipeline() {\\n    console.log('Starting pipeline test with whiteboard...')\\n    var message = { \\\"dataDir\\\": \\\"src/applications/test_runcommand/data\\\" }\\n\\n    // Initialize shared processors\\n    const capture = new CaptureAll(config)\\n    const whiteboardToMessage = new WhiteboardToMessage(config)\\n\\n    // Stage 1: Get current directory\\n    const pwdCommand = new RunCommand({ ...config, command: \\\"pwd\\\" })\\n    message = await pwdCommand.process(message)\\n    message = await capture.process(message)\\n\\n    // Stage 2: List directory contents\\n    const lsCommand = new RunCommand({ ...config, command: \\\"ls -l\\\" })\\n    message = await lsCommand.process(message)\\n    message = await capture.process(message)\\n\\n    // Stage 3: Echo combined output\\n    message = await whiteboardToMessage.process(message)\\n    const combinedOutput = message.whiteboard.commandResult\\n        .map(result => result.stdout)\\n        .join('\\\\n')\\n\\n    const echoCommand = new RunCommand({\\n        ...config,\\n        command: `echo 'Command Outputs:\\\\n${combinedOutput}'`\\n    })\\n    message = await echoCommand.process(message)\\n\\n    // Stage 4: Write final output\\n    const write = new FileWriter(config)\\n    message = await write.process(message)\\n\\n    // Stage 5: Read back and verify\\n    const read = new FileReader(config)\\n    message = await read.process(message)\\n    console.log('Final output:', message.content)\\n\\n    // Show whiteboard contents\\n    console.log('\\\\nWhiteboard contents:')\\n    console.log(JSON.stringify(config.whiteboard, null, 2))\\n}\\n\\nrunPipeline().catch(console.error)\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.901Z\"\n    },\n    \"../core/ApplicationManager.js\": {\n      \"content\": \"// src/api/ApplicationManager.js\\nimport path from 'path'\\nimport fs from 'fs/promises'\\nimport _ from 'lodash'\\n\\nimport rdf from 'rdf-ext'\\nimport { fromFile } from 'rdf-utils-fs'\\n\\nimport logger from '../utils/Logger.js'\\nimport TransmissionBuilder from './TransmissionBuilder.js'\\nimport ModuleLoaderFactory from './ModuleLoaderFactory.js'\\n\\nclass ApplicationManager {\\n    constructor() {\\n        this.appsDir = 'src/applications'\\n        this.transmissionFilename = 'transmissions.ttl'\\n        this.configFilename = 'config.ttl'\\n        this.moduleSubDir = 'processors'\\n        this.dataSubDir = 'data'\\n        this.manifestFilename = 'manifest.ttl'\\n    }\\n\\n    async initialize(appName, appPath, subtask, target) {\\n        // logger.setLogLevel('info')\\n        logger.debug(`\\\\n\\\\nApplicationManager.initialize appPath =  ${appPath} `)\\n        this.appPath = this.resolveApplicationPath(appPath) // TODO tidy with object below\\n\\n        logger.debug(`\\\\nApplicationManager.initialize this.appPath =  ${this.appPath} `)\\n        this.transmissionsFile = path.join(this.appPath, this.transmissionFilename)\\n        this.processorsConfigFile = path.join(this.appPath, this.configFilename)\\n        this.modulePath = path.join(this.appPath, this.moduleSubDir)\\n\\n        this.moduleLoader = ModuleLoaderFactory.createApplicationLoader(this.modulePath)\\n        this.app = { // TODO tidy\\n            appName: appName,\\n            appPath: appPath,\\n            subtask: subtask,\\n        }\\n        logger.debug(`ApplicationManager.initialize, target = {target}`)\\n        if (target) {\\n            this.app.manifestFilename = path.join(target, this.manifestFilename)\\n            this.app.dataset = await this.loadManifest(this.app.manifestFilename)\\n            this.app.targetPath = target\\n        }\\n    }\\n\\n\\n    async start(message) {\\n        //   logger.setLogLevel('info')\\n        logger.debug(`\\\\nApplicationManager.start\\n    transmissionsFile : ${this.transmissionsFile},\\n    processorsConfigFile : ${this.processorsConfigFile}\\n    subtask : ${this.app.subtask}`)\\n\\n\\n\\n        const transmissions = await TransmissionBuilder.build(\\n            this.transmissionsFile,\\n            this.processorsConfigFile,\\n            this.moduleLoader\\n        )\\n\\n        // lodash _.merge(object, [sources])\\n        // https://lodash.com/docs/4.17.15#merge\\n        message = _.merge(message, this.app)\\n\\n\\n        if (!message.rootDir) {\\n            message.rootDir = this.appPath\\n        }\\n        if (!message.dataDir) {\\n            message.dataDir = path.join(this.appPath, this.dataSubDir)\\n        }\\n        // TODO figure out when to use rootDir and when targetPath - rename to be clearer?\\n        if (!this.app.targetPath && !message.targetPath) {\\n            message.targetPath = message.dataDir\\n        }\\n        for (const transmission of transmissions) {\\n            if (!this.app.subtask || this.app.subtask === transmission.label) {\\n                await transmission.process(message)\\n            }\\n        }\\n\\n        return { success: true }\\n    }\\n\\n    async loadManifest(manifestFilename) { // TODO generalise, add URLs\\n        logger.debug(`ApplicationManager.loadManifest, try loading : ${manifestFilename}`)\\n        try {\\n            //   const mfStat = await fs.stat(manifestFilename)\\n            // logger.debug('HERE')\\n            //  if (mfStat.isFile()) {\\n            const stream = fromFile(manifestFilename)\\n            return await rdf.dataset().import(stream)\\n            //}\\n            //else if (mfStat.isDirectory()) {\\n\\n        } catch (err) {\\n            logger.debug(`ApplicationManager.loadManifest, ${manifestFilename} non-existent, creating empty dataset`)\\n            return rdf.dataset()\\n        }\\n    }\\n\\n    async listApplications() {\\n        try {\\n            const entries = await fs.readdir(this.appsDir, { withFileTypes: true })\\n            const subdirChecks = entries\\n                .filter(dirent => dirent.isDirectory())\\n                .map(async (dirent) => {\\n                    const subdirPath = path.join(this.appsDir, dirent.name)\\n                    const files = await fs.readdir(subdirPath)\\n                    return files.includes('about.md') ? dirent.name : null\\n                })\\n\\n            const validApps = (await Promise.all(subdirChecks)).filter(Boolean)\\n            return validApps\\n        } catch (err) {\\n            logger.error('Error listing applications:', err)\\n            return []\\n        }\\n    }\\n\\n\\n    resolveApplicationPath(appName) {\\n        logger.debug(`\\\\nApplicationManager.resolveApplicationPath, appName = ${appName}`)\\n\\n        if (appName.startsWith('/')) { // it's an absolute path\\n            return appName\\n        }\\n\\n        if (appName.startsWith('..')) {\\n            // For external paths, use absolute path resolution\\n            const resolved = path.resolve(process.cwd(), appName)\\n            logger.debug(`ApplicationManager.resolveApplicationPath, resolved = ${resolved}`)\\n            return resolved\\n        }\\n        logger.debug(`ApplicationManager.resolveApplicationPath, this.appsDir = ${this.appsDir}`)\\n\\n        // Default local (core) path resolution\\n        return path.join(process.cwd(), this.appsDir, appName)\\n    }\\n\\n\\n}\\n\\nexport default ApplicationManager\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.907Z\"\n    },\n    \"../core/Director.js\": {\n      \"content\": \"class Director {\\n    constructor() {\\n        this.builder = new TransmissionBuilder()\\n        this.runner = new TransmissionRunner()\\n        this.procurer = new Procurer()\\n        this.proctor = new Proctor()\\n    }\\n\\n    async initializeApplication(args) {\\n        const application = new Application()\\n        await this.procurer.loadResources(application, args)\\n        await this.builder.buildTransmissions(application)\\n        return application\\n    }\\n\\n    async applyToTarget(application, target) {\\n        await this.runner.execute(application, target)\\n    }\\n}\\n\\nexport default Director\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.910Z\"\n    },\n    \"../core/ModuleLoader.js\": {\n      \"content\": \"// src/engine/ModuleLoader.js\\nimport path from 'path'\\nimport { fileURLToPath } from 'url'\\nimport logger from '../utils/Logger.js'\\n\\nclass ModuleLoader {\\n    constructor(classpath) {\\n        this.classpath = classpath\\n        /*\\n if (!Array.isArray(classpath)) {\\n     throw new TypeError('Classpath must be an array')\\n }\\n\\n // Ensure all paths are strings and normalize them\\n \\n this.classpath = classpath.map(p => {\\n     if (typeof p !== 'string') {\\n         throw new TypeError('All classpath entries must be strings')\\n     }\\n     return path.normalize(p)\\n })\\n*/\\n\\n        this.moduleCache = new Map()\\n        logger.debug(`ModuleLoader initialized with paths :\\\\n${this.classpath}`)\\n    }\\n\\n    async loadModule(moduleName) {\\n        // logger.setLogLevel('debug')\\n        logger.debug(`\\\\n\\\\nModuleLoader.loadModule, moduleName = ${moduleName}`)\\n        logger.debug(`ModuleLoader.loadModule looking for module in classpath ${this.classpath} `)\\n\\n        // Check cache first\\n        if (this.moduleCache.has(moduleName)) {\\n            logger.debug(`Retrieved ${moduleName} from cache`)\\n            return this.moduleCache.get(moduleName)\\n        }\\n\\n        // Try each path in classpath\\n        for (const basePath of this.classpath) {\\n            try {\\n                const fullPath = path.join(basePath, `${moduleName}.js`)\\n                logger.debug(`Trying path: ${fullPath}`)\\n\\n                const module = await import(fullPath)\\n                this.moduleCache.set(moduleName, module)\\n                logger.debug(`Successfully loaded ${moduleName} from ${fullPath}`)\\n                return module\\n            } catch (error) {\\n                logger.debug(`Failed to load from ${basePath}: ${error.message}`)\\n                continue\\n            }\\n        }\\n\\n        throw new Error(`Module ${moduleName} not found in paths: ${this.classpath.join(', ')}`)\\n    }\\n\\n    clearCache() {\\n        this.moduleCache.clear()\\n    }\\n\\n    addPath(newPath) {\\n        if (typeof newPath !== 'string') {\\n            throw new TypeError('Path must be a string')\\n        }\\n        this.classpath.push(path.normalize(newPath))\\n    }\\n}\\nexport default ModuleLoader\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.914Z\"\n    },\n    \"../core/ModuleLoaderFactory.js\": {\n      \"content\": \"// src/engine/ModuleLoaderFactory.js\\n\\nimport path from 'path'\\nimport { fileURLToPath } from 'url'\\nimport logger from '../utils/Logger.js'\\nimport ModuleLoader from './ModuleLoader.js'\\n\\nclass ModuleLoaderFactory {\\n    static instance = null;\\n\\n    static createModuleLoader(classpath) { // dditionalPaths = []\\n        const __filename = fileURLToPath(import.meta.url)\\n        const __dirname = path.dirname(__filename)\\n\\n        /*\\n        // Core processors path relative to factory location\\n        const corePath = path.resolve(__dirname, '../processors')\\n\\n        // Combine and normalize paths\\n        const classpath = [corePath, ...additionalPaths].map(p => path.normalize(p.toString()))\\n\\n        logger.debug(`Creating ModuleLoader with paths:\\\\n${classpath}`)\\n*/\\n        // Create new instance if none exists or paths have changed\\n        if (!ModuleLoaderFactory.instance) {\\n            ModuleLoaderFactory.instance = new ModuleLoader(classpath)\\n        }\\n\\n        return ModuleLoaderFactory.instance\\n    }\\n\\n    static createApplicationLoader(appPath) {\\n        logger.debug(`\\\\nModuleLoaderFactory.createApplicationLoader called with ${appPath}`)\\n        if (!appPath) {\\n            throw new Error('Application path is required')\\n        }\\n        const __filename = fileURLToPath(import.meta.url)\\n        const __dirname = path.dirname(__filename)\\n\\n        const normalizedPath = path.resolve(process.cwd(), appPath)\\n        //    const appProcessorsPath = path.join(normalizedPath, 'processors')\\n        const appProcessorsPath = normalizedPath\\n        const corePath = path.resolve(__dirname, '../processors')\\n\\n        logger.debug(`ModuleLoaderFactory creating loader with paths:\\n      App: ${appProcessorsPath}\\n      Core: ${corePath}`)\\n\\n        return this.createModuleLoader([appProcessorsPath, corePath])\\n    }\\n\\n    static clearInstance() {\\n        ModuleLoaderFactory.instance = null\\n    }\\n}\\nexport default ModuleLoaderFactory\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.919Z\"\n    },\n    \"../core/Procurer.js\": {\n      \"content\": \"class Procurer {\\n    constructor() {\\n        this.moduleLoader = ModuleLoaderFactory.createModuleLoader()\\n    }\\n\\n    async loadResources(application, args) {\\n        const config = await this.loadConfig(args.configPath)\\n        const manifest = await this.loadManifest(args.target)\\n        application.config = config\\n        application.manifest = manifest\\n    }\\n}\\n\\nexport default Procurer\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.923Z\"\n    },\n    \"../core/TransmissionBuilder.js\": {\n      \"content\": \"//import path from 'path';\\n//import { fileURLToPath } from 'url';\\n\\nimport rdf from 'rdf-ext'\\nimport grapoi from 'grapoi'\\nimport { fromFile, toFile } from 'rdf-utils-fs'\\n\\nimport ns from '../utils/ns.js'\\nimport GrapoiHelpers from '../utils/GrapoiHelpers.js'\\nimport logger from '../utils/Logger.js'\\n\\n// import ModuleLoader from './ModuleLoader.js'\\nimport AbstractProcessorFactory from \\\"../processors/base/AbstractProcessorFactory.js\\\"\\nimport Transmission from '../engine/Transmission.js'\\n// import ModuleLoaderFactory from './ModuleLoaderFactory.js'\\n\\n// TODO it looks like multiple copies of the config are being created - should be a singleton object\\n\\nclass TransmissionBuilder {\\n\\n  constructor(moduleLoader) {\\n    this.moduleLoader = moduleLoader\\n  }\\n\\n  static async build(transmissionConfigFile, processorsConfigFile, moduleLoader) {\\n    const transmissionConfig = await TransmissionBuilder.readDataset(transmissionConfigFile)\\n    const processorsConfig = await TransmissionBuilder.readDataset(processorsConfigFile)\\n\\n    const builder = new TransmissionBuilder(moduleLoader)\\n    return builder.buildTransmissions(transmissionConfig, processorsConfig)\\n  }\\n\\n  async buildTransmissions(transmissionConfig, processorsConfig) {\\n    const poi = grapoi({ dataset: transmissionConfig })\\n    const transmissions = []\\n\\n    for (const q of poi.out(ns.rdf.type).quads()) {\\n      if (q.object.equals(ns.trn.Transmission)) {\\n        const transmissionID = q.subject\\n        //    transmissions.push(await this.constructTransmission(transmissionConfig, transmissionID, processorsConfig));\\n        transmissions.push(await this.constructTransmission(transmissionConfig, transmissionID, processorsConfig)) // was await\\n      }\\n    }\\n    return transmissions\\n  }\\n\\n  async constructTransmission(transmissionConfig, transmissionID, processorsConfig) {\\n    processorsConfig.whiteboard = {}\\n\\n    const transmission = new Transmission()\\n    transmission.id = transmissionID.value\\n    transmission.label = ''\\n\\n    const transPoi = grapoi({ dataset: transmissionConfig, term: transmissionID })\\n\\n    // TODO has grapoi got a first/single property method?\\n    for (const quad of transPoi.out(ns.rdfs.label).quads()) {\\n      transmission.label = quad.object.value\\n    }\\n    logger.log('\\\\n+ ***** Construct Transmission : ' + transmission.label + ' <' + transmission.id + '>')\\n\\n    let previousName = \\\"nothing\\\"\\n\\n    // grapoi probably has a built-in for all this\\n    const pipenodes = GrapoiHelpers.listToArray(transmissionConfig, transmissionID, ns.trn.pipe)\\n    await this.createNodes(transmission, pipenodes, transmissionConfig, processorsConfig) // was await, bad Claude\\n    //    this.createNodes(transmission, pipenodes, transmissionConfig, processorsConfig); // was await, bad Claude\\n    this.connectNodes(transmission, pipenodes)\\n    return transmission\\n  }\\n\\n  async createNodes(transmission, pipenodes, transmissionConfig, processorsConfig) {\\n    for (let i = 0; i < pipenodes.length; i++) {\\n      let node = pipenodes[i]\\n      let processorName = node.value\\n\\n      if (!transmission.get(processorName)) {\\n        let np = rdf.grapoi({ dataset: transmissionConfig, term: node })\\n        let processorType = np.out(ns.rdf.type).term\\n        let processorConfig = np.out(ns.trn.settings).term\\n        //\\n        //  #########################################################\\n\\n        try {\\n          let name = ns.getShortname(processorName)\\n          let type = ns.getShortname(processorType.value)\\n\\n          logger.log(\\\"| Create processor :\\\" + name + \\\" of type :\\\" + type)\\n          let processor = await this.createProcessor(processorType, processorsConfig)\\n\\n          processor.id = processorName\\n          processor.type = processorType\\n\\n          processor.transmissionNode = node\\n          processor.transmission = transmission\\n\\n          processor.settingsNode = processorConfig\\n\\n          if (processorConfig) {\\n            processor.settings = processorConfig\\n          }\\n          transmission.register(processorName, processor)\\n        } catch (err) {\\n          logger.error('-> Can\\\\'t resolve ' + processorName + ' (check transmission.ttl for typos!)\\\\n')\\n          logger.error(err)\\n        }\\n      }\\n    }\\n  }\\n\\n  async connectNodes(transmission, pipenodes) {\\n    for (let i = 0; i < pipenodes.length - 1; i++) {\\n      let leftNode = pipenodes[i]\\n      let leftProcessorName = leftNode.value\\n      let rightNode = pipenodes[i + 1]\\n      let rightProcessorName = rightNode.value\\n      logger.log(\\\"  > Connect #\\\" + i + \\\" [\\\" + ns.getShortname(leftProcessorName) + \\\"] => [\\\" + ns.getShortname(rightProcessorName) + \\\"]\\\")\\n      transmission.connect(leftProcessorName, rightProcessorName)\\n    }\\n  }\\n\\n  async createProcessor(type, config) {\\n    //  logger.setLogLevel('debug')\\n    // logger.debug(`\\\\n\\\\nTransmissionBuilder.createProcessor, config = ${config}`)\\n\\n    const coreProcessor = AbstractProcessorFactory.createProcessor(type, config)\\n    if (coreProcessor) {\\n      return coreProcessor\\n    }\\n\\n    logger.debug(`TransmissionBuilder, core processor not found for ${type.value}. Trying remote module loader...`)\\n\\n    try {\\n      const shortName = type.value.split('/').pop()\\n      logger.debug(`TransmissionBuilder, loading module: ${shortName}`)\\n      logger.log(this.moduleLoader)\\n      const ProcessorClass = await this.moduleLoader.loadModule(shortName)\\n\\n      logger.debug(`Module loaded successfully: ${shortName}`)\\n      return new ProcessorClass.default(config)\\n    } catch (error) {\\n      logger.error(`TransmissionBuilder.createProcessor, failed to load ${type.value} : ${error.message}`)\\n      process.exit(1)\\n    }\\n  }\\n\\n  //  logger.error(`Failed to load processor ${type.value}: ${error.message}`)\\n  //   throw new Error (`Failed to load processor ${type.value}: ${error.mesage}`)\\n  //process.exit(1)\\n  // throw error\\n\\n  // file utils\\n  static async readDataset(filename) {\\n    const stream = fromFile(filename)\\n    const dataset = await rdf.dataset().import(stream)\\n    return dataset\\n  }\\n\\n  static async writeDataset(dataset, filename) {\\n    await toFile(dataset.toStream(), filename)\\n  }\\n\\n\\n}\\n// export { ModuleLoader, ModuleLoaderFactory, TransmissionBuilder }\\nexport default TransmissionBuilder\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.927Z\"\n    },\n    \"../core/WorkerPool.js\": {\n      \"content\": \"import { Worker } from 'worker_threads'\\n\\nclass WorkerPool {\\n    constructor(module, size) {\\n        this.workers = [];\\n        this.queue = [];\\n        for (let i = 0; i < size; i++) {\\n            const worker = new Worker(module);\\n            worker.on('message', () => {\\n                // Handle completion, possibly dispatching next message\\n                this.markWorkerIdle(worker);\\n            });\\n            this.workers.push({ worker, busy: false });\\n        }\\n    }\\n\\n    enqueueMessage(message) {\\n        this.queue.push(message);\\n        this.dispatch();\\n    }\\n\\n    dispatch() {\\n        const idleWorkerWrapper = this.workers.find(wrapper => !wrapper.busy);\\n        if (idleWorkerWrapper && this.queue.length) {\\n            const message = this.queue.shift();\\n            idleWorkerWrapper.busy = true;\\n            idleWorkerWrapper.worker.postMessage(message);\\n        }\\n    }\\n\\n    markWorkerIdle(workerWrapper) {\\n        workerWrapper.busy = false;\\n        this.dispatch(); // Check if there's more work to do\\n    }\\n}\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.932Z\"\n    },\n    \"../engine/Application.js\": {\n      \"content\": \"class Application {\\n    constructor() {\\n        this.transmissions = new Map()\\n        this.config = null\\n        this.manifest = null\\n    }\\n\\n    addTransmission(id, transmission) {\\n        this.transmissions.set(id, transmission)\\n    }\\n}\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.936Z\"\n    },\n    \"../engine/Connector.js\": {\n      \"content\": \"import { EventEmitter } from 'events'\\nimport logger from '../utils/Logger.js'\\nimport footpath from '../utils/footpath.js'\\n\\nclass Connector extends EventEmitter {\\n\\n\\n    constructor(fromName, toName) {\\n        super()\\n        this.fromName = fromName\\n        this.toName = toName\\n    }\\n\\n    connect(processors) {\\n        logger.log(`Connector.connect this.fromName = ${this.fromName} this.toName =  ${this.toName}`)\\n        let fromProcessor = processors[this.fromName]\\n        let toProcessor = processors[this.toName]\\n\\n        if (!fromProcessor) {\\n            throw new Error(`\\\\nMissing processor : ${this.fromName}, going to ${this.toName} \\\\n(check for typos in transmissions.ttl)\\\\n`)\\n        }\\n\\n        /*\\n        fromProcessor.on('message', (message) => { //  = {}\\n            var tags = ''\\n            //     if (toProcessor.message) {\\n            tags = ' [' + fromProcessor.message.tags + '] '\\n            toProcessor.tags = tags // TODO tidy\\n            //   }\\n            const thisTag = footpath.urlLastPart(this.toName)\\n            logger.log(\\\"| Running >>> : \\\" + tags + thisTag + \\\" a \\\" + toProcessor.constructor.name)\\n\\n            toProcessor.receive(message)\\n        })\\n            */\\n\\n        // previous lacked async\\n        fromProcessor.on('message', async (message) => {\\n            var tags = fromProcessor.message?.tags ? ` [${fromProcessor.message.tags}] ` : ''\\n            toProcessor.tags = tags\\n            logger.log(`Running >>> : ${tags} ${toProcessor.constructor.name}`)\\n            await toProcessor.receive(message)\\n        })\\n\\n    }\\n\\n\\n}\\n\\nexport default Connector\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.941Z\"\n    },\n    \"../engine/Transmission.js\": {\n      \"content\": \"import logger from '../utils/Logger.js'\\nimport Connector from './Connector.js'\\nimport ns from '../utils/ns.js'\\n\\nclass Transmission {\\n  constructor() {\\n    this.processors = {}\\n    this.connectors = []\\n    //  logger.log(\\\"Transmission constructor\\\")\\n  }\\n\\n  register(processorName, instance) {\\n    this.processors[processorName] = instance\\n    // console.log('Registered processor:', processorName)\\n  }\\n\\n  get(processorName) {\\n    return this.processors[processorName]\\n  }\\n\\n  connect(fromProcessorName, toProcessorName) {\\n    logger.log(`Transmission.connect from ${fromProcessorName} to ${fromProcessorName}`)\\n    let connector = new Connector(fromProcessorName, toProcessorName)\\n    this.connectors.push(connector)\\n    connector.connect(this.processors)\\n  }\\n\\n\\n  // In src/engine/Transmission.js\\n\\n  async process(message) {\\n    logger.log('\\\\n+ ***** Execute Transmission : ' + this.label + ' <' + this.id + '>')\\n    const processorName = this.connectors[0]?.fromName || Object.keys(this.processors)[0]\\n    let processor = this.get(processorName)\\n    if (processor) {\\n      logger.log(\\\"| Running : \\\" + processorName + \\\" a \\\" + processor.constructor.name)\\n      await processor.receive(message)\\n    } else {\\n      logger.error(\\\"No valid processor found to execute\\\")\\n    }\\n  }\\n\\n\\n  /**\\n * Describes the structure of the Transmission instance,\\n * listing all registered processors and connectors.\\n */\\n  toString() {\\n    let description = 'Transmission Structure:\\\\n'\\n\\n    // Describe processors\\n    description += 'Processors:\\\\n'\\n    Object.keys(this.processors).forEach((processorName) => {\\n      //     description += `${processor}`\\n\\n      description += `  - ${ns.shortName(processorName)} a ${this.processors[processorName]} \\\\n`\\n      //  description += `  - ${ns.shortName(processorName)}\\\\n`\\n    })\\n\\n    /*\\n      let name = ns.getShortname(processorName)\\n              let type = ns.getShortname(processorType.value)\\n\\n              logger.log(\\\"| Create processor :\\\" + name + \\\" of type :\\\" + type)\\n              */\\n\\n    // Describe connectors\\n    description += 'Connectors:\\\\n'\\n    this.connectors.forEach((connector, index) => {\\n      description += `  - Connector ${index + 1}: ${ns.shortName(connector.fromName)} -> ${ns.shortName(connector.toName)}\\\\n`\\n    })\\n\\n    return description\\n  }\\n}\\n\\nexport default Transmission\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.945Z\"\n    },\n    \"../processors/about.md\": {\n      \"content\": \"# Creating a new Processor\\n\\n- update repopacks for `transmissions` and `trans-apps`\\n- create a new chat session in existing Project\\n- upload repopacks to Claude, with anything else that might be relevant (handover from previous session?)\\n- follow the prompt model as in `/home/danny/workspaces_hkms-desktop/postcrafts-raw/transmissions/prompts/github-list.md`\\n- remember additions to `xProcessorsFactory.js` and `transmissions/src/engine/AbstractProcessorFactory.js`\\n\\n#:todo add comment creation\\n#:todo check simples & application suitability\\n#:todo create document creation workflow\\n#:todo create manifest.ttl creation\\n#:todo make crossrefs.md, crossrefs.ttl\\n#:todo create manifest.ttl consumption\\n#:todo add test creation\\n#:todo wire to an API, include file creation ops\\n#:todo add support in #:hyperdata-desktop\\n\\n#:todo dedicated transmissions model, fine-tuned on relevant docs\\n\\n#:todo extract todos as something like :\\n\\n```turtle\\n<http://hyperdata.it/transmissions/src/processors/about/nid123> a pv:ToDoItem ;\\ndc:source <http://hyperdata.it/transmissions/src/processors/about.md> ;\\npv:semtag \\\"#:todo\\\" ;\\ndc:line \\\"3\\\" ;\\ndc:title \\\"tbd\\\" ;\\ndc:content \\\"extract todos as something like :\\\" .\\n```\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:37.950Z\"\n    },\n    \"../processors/base/AbstractProcessorFactory.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\n\\n// Import processor groups\\nimport SystemProcessorsFactory from '../system/SystemProcessorsFactory.js'\\nimport TestProcessorsFactory from '../test/TestProcessorsFactory.js'\\nimport FsProcessorsFactory from '../fs/FsProcessorsFactory.js'\\nimport MarkupProcessorsFactory from '../markup/MarkupProcessorsFactory.js'\\nimport UtilProcessorsFactory from '../util/UtilProcessorsFactory.js'\\nimport TextProcessorsFactory from '../text/TextProcessorsFactory.js'\\nimport ProtocolsProcessorsFactory from '../protocols/ProtocolsProcessorsFactory.js'\\nimport RDFProcessorsFactory from '../rdf/RDFProcessorsFactory.js'\\nimport PostcraftProcessorsFactory from '../postcraft/PostcraftProcessorsFactory.js'\\nimport FlowProcessorsFactory from '../flow/FlowProcessorsFactory.js'\\nimport StagingProcessorsFactory from '../staging/StagingProcessorsFactory.js'\\nimport GitHubProcessorsFactory from '../github/GitHubProcessorsFactory.js'\\nimport JSONProcessorsFactory from '../json/JSONProcessorsFactory.js'\\nimport PackerProcessorsFactory from '../packer/PackerProcessorsFactory.js' // 2025-01-01\\n\\n// added 2024-11-28\\nimport UnsafeProcessorsFactory from '../unsafe/UnsafeProcessorsFactory.js'\\nimport HttpProcessorsFactory from '../http/HttpProcessorsFactory.js'\\nimport McpProcessorsFactory from '../mcp/McpProcessorsFactory.js'\\nimport XmppProcessorsFactory from '../xmpp/XmppProcessorsFactory.js'\\n\\n// added 2025-01-14 : Happy Birthday to me!\\nimport ExampleProcessorsFactory from '../example-group/ExampleProcessorsFactory.js'\\n\\n// 2025-01-16 : finally getting around to it\\nimport SPARQLProcessorsFactory from '../sparql/SPARQLProcessorsFactory.js'\\n\\nclass AbstractProcessorFactory {\\n\\n    // looks until it finds\\n    // good enough for now\\n\\n    static createProcessor(type, config) {\\n        logger.trace(`\\\\nAbstractProcessorFactory.createProcessor : type.value = ${type.value}`)\\n        //  logger.debug(`AbstractProcessorFactory.createProcessor : config = ${config}`)\\n\\n        var processor = ExampleProcessorsFactory.createProcessor(type, config)\\n        if (processor) return processor\\n\\n        var processor = UnsafeProcessorsFactory.createProcessor(type, config)\\n        if (processor) return processor\\n        var processor = HttpProcessorsFactory.createProcessor(type, config)\\n        if (processor) return processor\\n        var processor = McpProcessorsFactory.createProcessor(type, config)\\n        if (processor) return processor\\n        var processor = XmppProcessorsFactory.createProcessor(type, config)\\n        if (processor) return processor\\n\\n        var processor = TestProcessorsFactory.createProcessor(type, config)\\n        if (processor) return processor\\n        var processor = UtilProcessorsFactory.createProcessor(type, config)\\n        if (processor) return processor\\n\\n        processor = FsProcessorsFactory.createProcessor(type, config)\\n        if (processor) return processor\\n\\n        processor = MarkupProcessorsFactory.createProcessor(type, config)\\n        if (processor) return processor\\n\\n        processor = TextProcessorsFactory.createProcessor(type, config)\\n        if (processor) return processor\\n\\n        processor = ProtocolsProcessorsFactory.createProcessor(type, config)\\n        if (processor) return processor\\n\\n        processor = RDFProcessorsFactory.createProcessor(type, config)\\n        if (processor) return processor\\n\\n        processor = PostcraftProcessorsFactory.createProcessor(type, config)\\n        if (processor) return processor\\n\\n        processor = SystemProcessorsFactory.createProcessor(type, config)\\n        if (processor) return processor\\n\\n        processor = FlowProcessorsFactory.createProcessor(type, config)\\n        if (processor) return processor\\n\\n        processor = GitHubProcessorsFactory.createProcessor(type, config)\\n        if (processor) return processor\\n\\n        processor = StagingProcessorsFactory.createProcessor(type, config)\\n        if (processor) return processor\\n\\n        processor = JSONProcessorsFactory.createProcessor(type, config)\\n        if (processor) return processor\\n\\n        var processor = PackerProcessorsFactory.createProcessor(type, config);\\n        if (processor) return processor;\\n\\n        var processor = SPARQLProcessorsFactory.createProcessor(type, config);\\n        if (processor) return processor\\n\\n    }\\n}\\n\\nexport default AbstractProcessorFactory\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.954Z\"\n    },\n    \"../processors/base/Processor.js\": {\n      \"content\": \"import { EventEmitter } from 'events'\\nimport grapoi from 'grapoi'\\nimport logger from '../../utils/Logger.js'\\nimport ns from '../../utils/ns.js'\\nimport footpath from '../../utils/footpath.js'\\nimport ProcessorSettings from './ProcessorSettings.js'\\n\\nclass Processor extends EventEmitter {\\n    constructor(config) {\\n        super()\\n\\n        this.config = config\\n        this.settings = new ProcessorSettings(config)\\n        this.messageQueue = []\\n        this.processing = false\\n        this.outputs = []\\n    }\\n\\n    getProperty(property, fallback) {\\n        logger.debug(`\\\\nProcessor.getProperty looking for ${property}`)\\n        logger.debug(`Processor.getProperty, this.transmissionNode.value = ${this.transmissionNode.value}`)\\n\\n        const shortName = ns.getShortname(property)\\n        if (this.message && this.message[shortName]) {\\n            logger.debug(`Found in message: ${this.message[shortName]}`)\\n            return this.message[shortName]\\n        }\\n\\n        const settingsValue = this.getPropertyFromSettings(property)\\n        if (settingsValue) {\\n            logger.debug(`Found in settings: ${settingsValue.value}`)\\n            return settingsValue.value\\n        }\\n\\n        logger.debug(`Using fallback: \\\\n\\\\t${fallback}`)\\n        return fallback\\n    }\\n\\n    getPropertyFromSettings(property) {\\n        logger.debug(`Processor.getPropertyFromSettings, property = ${property}`)\\n        if (!this.config || !this.settingsNode) {\\n            logger.debug('Config or node missing')\\n            return undefined\\n        }\\n\\n        // TODO GET PROPERTY FROM DATASET\\n        const dataset = this.config\\n        const ptr = grapoi({ dataset, term: this.settingsNode })\\n\\n        logger.log(`Checking property ${property} on node ${this.settingsNode.value}`)\\n        let values = ptr.out(property)\\n        if (values.terms.length > 0) {\\n            logger.debug(`Found direct property value: ${values.term.value}`)\\n            return values.term\\n        }\\n        logger.debug('No direct property found')\\n\\n        // Debug full path\\n        //     logger.debug(`Dataset: ${[...dataset].map(q => `${q.subject.value} ${q.predicate.value} ${q.object.value}`).join('\\\\n')}`)\\n\\n        const settings = ptr.out(ns.trn.settings)\\n        logger.debug(`Settings query result: ${settings?.terms?.length} terms`)\\n        if (settings.terms.length > 0) {\\n            const settingsId = settings.term\\n            logger.debug(`Found settings reference: ${settingsId.value}`)\\n\\n            const settingsPtr = grapoi({ dataset, term: settingsId })\\n            const settingsValues = settingsPtr.out(property)\\n            if (settingsValues.terms.length > 0) {\\n                logger.debug(`Found settings property value: ${settingsValues.term.value}`)\\n                return settingsValues.term\\n            }\\n            logger.debug('No property found in settings')\\n        }\\n        logger.debug('No settings reference found')\\n        return undefined\\n    }\\n\\n    async preProcess(message) {\\n        const messageType = this.getPropertyFromSettings(ns.trn.messageType)\\n        if (messageType) {\\n            if (messageType.value) { // named node\\n                message.messageType = messageType.value\\n            } else { // probably a string\\n                message.messageType = messageType\\n            }\\n        }\\n        this.message = message // TODO duplicated elsewhere?\\n        logger.trace(\\\"Processor.preProcess\\\")\\n    }\\n\\n    async postProcess(message) {\\n        logger.trace(\\\"Processor.postProcess\\\")\\n    }\\n\\n    async receive(message) {\\n        await this.enqueue(message)\\n    }\\n\\n    async enqueue(message) {\\n        this.messageQueue.push({ message })\\n        if (!this.processing) {\\n            this.executeQueue()\\n        }\\n    }\\n\\n    async executeQueue() {\\n        this.processing = true\\n        while (this.messageQueue.length > 0) {\\n            let { message } = this.messageQueue.shift()\\n            message = structuredClone(message)\\n            this.addTag(message)\\n\\n            await this.preProcess(message)\\n            await this.process(message)\\n            await this.postProcess(message)\\n        }\\n        this.processing = false\\n    }\\n\\n    async process(message) {\\n        throw new Error('process method not implemented')\\n    }\\n\\n    addTag(message) {\\n        const tag = this.getTag()\\n        if (!message.tags) {\\n            message.tags = tag\\n            return\\n        }\\n        message.tags = message.tags + '.' + tag\\n    }\\n\\n    getTag() {\\n        return footpath.urlLastPart(this.id)\\n    }\\n\\n    async emit(event, message) {\\n        await new Promise(resolve => {\\n            super.emit(event, message)\\n            resolve()\\n        })\\n        return message\\n    }\\n\\n    getOutputs() {\\n        const results = this.outputs\\n        this.outputs = []\\n        return results\\n    }\\n}\\n\\nexport default Processor\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.959Z\"\n    },\n    \"../processors/base/ProcessorSettings.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport { EventEmitter } from 'events'\\nimport rdf from 'rdf-ext'\\nimport grapoi from 'grapoi'\\nimport ns from '../../utils/ns.js'\\nimport footpath from '../../utils/footpath.js'\\n\\nclass ProcessorSettings {\\n\\n    constructor(config) {\\n        this.config = config\\n    }\\n\\n    getProperty(property, fallback) {\\n        logger.debug(`ProcessorSettings.getProperty looking for ${property}`)\\n        logger.debug(`ProcessorSettings.getProperty, processor.transmissionNode.value = ${processor.transmissionNode.value}`)\\n\\n        const shortName = ns.getShortname(property)\\n        if (message && message[shortName]) {\\n            logger.debug(`Found in message: ${message[shortName]}`)\\n            return message[shortName]\\n        }\\n\\n        const settingsValue = processor.getPropertyFromSettings(property)\\n        if (settingsValue) {\\n            logger.debug(`Found in settings: ${settingsValue.value}`)\\n            return settingsValue.value\\n        }\\n\\n        logger.debug(`Using fallback: \\\\n\\\\t${fallback}`)\\n        return fallback\\n    }\\n\\n    getPropertyFromSettings(property) {\\n        logger.log(`ProcessorSettings.getPropertyFromSettings, property = ${property}`)\\n        if (!processor.config || !processor.settingsNode) {\\n            logger.debug('Config or node missing')\\n            return undefined\\n        }\\n\\n        // TODO GET PROPERTY FROM DATASET\\n        const dataset = processor.config\\n        const ptr = grapoi({ dataset, term: processor.settingsNode })\\n\\n        logger.log(`Checking property ${property} on node ${processor.settingsNode.value}`)\\n        let values = ptr.out(property)\\n        if (values.terms.length > 0) {\\n            logger.debug(`Found direct property value: ${values.term.value}`)\\n            return values.term\\n        }\\n        logger.debug('No direct property found')\\n\\n        // Debug full path\\n        //     logger.debug(`Dataset: ${[...dataset].map(q => `${q.subject.value} ${q.predicate.value} ${q.object.value}`).join('\\\\n')}`)\\n\\n        const settings = ptr.out(ns.trn.settings)\\n        logger.debug(`Settings query result: ${settings?.terms?.length} terms`)\\n        if (settings.terms.length > 0) {\\n            const settingsId = settings.term\\n            logger.debug(`Found settings reference: ${settingsId.value}`)\\n\\n            const settingsPtr = grapoi({ dataset, term: settingsId })\\n            const settingsValues = settingsPtr.out(property)\\n            if (settingsValues.terms.length > 0) {\\n                logger.debug(`Found settings property value: ${settingsValues.term.value}`)\\n                return settingsValues.term\\n            }\\n            logger.debug('No property found in settings')\\n        }\\n        logger.debug('No settings reference found')\\n        return undefined\\n    }\\n\\n}\\nexport default ProcessorSettings\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.964Z\"\n    },\n    \"../processors/example-group/ExampleProcessor.js\": {\n      \"content\": \"// src/processors/example-group/ExampleProcessor.js\\n/**\\n * @class ExampleProcessor\\n * @extends Processor\\n * @classdesc\\n * **a Basic Transmissions Processor**\\n *\\n * Provides a template for creating new processors, demonstrates use of config settings.\\n *\\n * #### __*Input*__\\n * * **`message.common`** - addressed by all instances of this ExampleProcessor (optional, default undefined)\\n * * **`message.something1`** - Template string (used if templateFilename is not provided)\\n * * **`message.something2`** - Object with properties for template rendering (e.g., title, body)\\n * * **`message.notavalue`** - Object with properties for template rendering (e.g., title, body)\\n *\\n * #### __*Output*__\\n * * **`message.content`** - The rendered template content\\n *\\n * #### __*Behavior*__\\n * * Uses Nunjucks to render templates\\n * * Can render from a template file or a template string\\n * * Applies content from message.contentBlocks to the template\\n *\\n * #### __Tests__\\n * *\\n *\\n  * #### __TODO__\\n * * Add test information here\\n * * Cache templates - cache in utils?\\n */\\n\\nimport { readFile } from 'node:fs/promises';\\nimport { access, constants } from 'node:fs';\\nimport path from 'path';\\nimport logger from '../../utils/Logger.js';\\nimport ns from '../../utils/ns.js';\\nimport Processor from '../base/Processor.js';\\n\\n\\nclass ExampleProcessor extends Processor {\\n    constructor(config) {\\n        super(config);\\n    }\\n\\n    /**\\n      * Does something with the message and emits a 'message' event with the processed message.\\n      * @param {Object} message - The message object.\\n      */\\n    async process(message) {\\n        logger.debug(`\\\\n\\\\nExampleProcessor.process`)\\n\\n        // TODO figure this out better\\n        // may be needed if preceded by a spawning processor, eg. fs/DirWalker\\n        if (message.done) {\\n            return this.emit('message', message)\\n            // or simply return\\n        }\\n\\n        // message is processed here :\\n\\n        // property values pulled from message | config settings | fallback\\n        const me = this.getProperty(ns.trn.me)\\n        logger.log(`\\\\nI am ${me}`)\\n\\n        message.common = this.getProperty(ns.trn.common)\\n        message.something1 = this.getProperty(ns.trn.something1)\\n\\n        message.something2 = this.getProperty(ns.trn.something2)\\n\\n        var added = this.getProperty(ns.trn.added, '')\\n        message.something1 = message.something1 + added\\n\\n        message.notavalue = this.getProperty(ns.trn.notavalue, 'fallback value')\\n\\n        // message forwarded\\n        return this.emit('message', message);\\n    }\\n}\\nexport default ExampleProcessor;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.967Z\"\n    },\n    \"../processors/example-group/ExampleProcessorsFactory.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport ns from '../../utils/ns.js'\\n\\nimport ExampleProcessor from './ExampleProcessor.js'\\n/*\\n   a ref to this should go in `src/processors/base/AbstractProcessorFactory.js`\\n*/\\n\\n\\n// import OtherProcessor from './ExampleProcessor.js'\\n\\nclass ExampleProcessorsFactory {\\n\\n    static createProcessor(type, config) {\\n\\n        if (type.equals(ns.trn.ExampleProcessor)) {\\n            return new ExampleProcessor(config)\\n        }\\n\\n        /** Other processors in the group follow the same pattern\\n\\n        if (type.equals(ns.trn.OtherProcessor)) {\\n            return new OtherProcessor(config)\\n        }\\n            ...\\n        */\\n\\n        return false\\n    }\\n}\\nexport default ExampleProcessorsFactory\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.972Z\"\n    },\n    \"../processors/flow/DeadEnd.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass DeadEnd extends Processor {\\n\\n    async process(message) {\\n        logger.log('DeadEnd at [' + message.tags + '] ' + this.getTag())\\n    }\\n\\n}\\nexport default DeadEnd\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.981Z\"\n    },\n    \"../processors/flow/FlowProcessorsFactory.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport ns from '../../utils/ns.js'\\nimport ForEach from './ForEach.js'\\nimport Ping from './Ping.js'\\nimport NOP from '../flow/NOP.js'\\nimport DeadEnd from '../flow/DeadEnd.js'\\nimport Halt from '../flow/Halt.js'\\nimport Unfork from '../flow/Unfork.js'\\nimport Fork from '../flow/Fork.js'\\n\\nclass FlowProcessorsFactory {\\n    static createProcessor(type, config) {\\n        if (type.equals(ns.trn.ForEach)) {\\n            logger.debug('FlowProcessorsFactory: Creating ForEach processor')\\n            return new ForEach(config)\\n        }\\n        if (type.equals(ns.trn.Ping)) {\\n            logger.debug('FlowProcessorsFactory: Creating Ping processor')\\n            return new Ping(config)\\n        }\\n        if (type.equals(ns.trn.NOP)) {\\n            return new NOP(config)\\n        }\\n        if (type.equals(ns.trn.DeadEnd)) {\\n            return new DeadEnd(config)\\n        }\\n        if (type.equals(ns.trn.Halt)) {\\n            return new Halt(config)\\n        }\\n        if (type.equals(ns.trn.Fork)) {\\n            return new Fork(config)\\n        }\\n        if (type.equals(ns.trn.Unfork)) {\\n            return new Unfork(config)\\n        }\\n        return false\\n    }\\n}\\n\\nexport default FlowProcessorsFactory\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.987Z\"\n    },\n    \"../processors/flow/ForEach.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass ForEach extends Processor {\\n    constructor(config) {\\n        super(config)\\n    }\\n\\n    async process(message) {\\n        //   logger.setLogLevel('debug')\\n        logger.debug('ForEach execute method called')\\n\\n        if (!message.foreach || !Array.isArray(message.foreach)) {\\n            logger.error('ForEach: Invalid or missing foreach array in message')\\n            message.foreach = [\\\"testing-testing\\\", \\\"one\\\", \\\"two\\\", \\\"three\\\"]\\n            // throw new Error('Invalid or missing foreach array in message')\\n        }\\n\\n        for (const item of message.foreach) {\\n            const clonedMessage = structuredClone(message)\\n            clonedMessage.currentItem = item\\n            delete clonedMessage.foreach // Remove the original array to prevent infinite loops TODO needed?\\n\\n            logger.debug(`ForEach: Emitting message for item: ${item}`)\\n            this.emit('message', clonedMessage)\\n        }\\n\\n        logger.debug('ForEach: Finished processing all items')\\n    }\\n}\\nexport default ForEach\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.993Z\"\n    },\n    \"../processors/flow/Fork.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\n\\n// rough, only for system testing\\n\\nclass Fork extends Processor {\\n\\n    constructor(config) {\\n        super(config)\\n    }\\n\\n    async process(message) {\\n        //   logger.setLogLevel('debug')\\n        const nForks = message.nForks || 2\\n\\n        logger.debug('forks = ' + nForks)\\n\\n        for (let i = 0; i < nForks; i++) {\\n            var messageClone = structuredClone(message)\\n            messageClone.forkN = i\\n            logger.debug('--- emit --- ' + i)\\n            this.emit('message', messageClone)\\n        }\\n\\n        message.done = true // one extra to flag completion\\n\\n        return this.emit('message', message)\\n        //   return this.getOutputs()\\n    }\\n\\n}\\n\\nexport default Fork\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:37.997Z\"\n    },\n    \"../processors/flow/Halt.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass Halt extends Processor {\\n\\n    process(message) {\\n        logger.log('\\\\n************************************************************************')\\n        logger.log('*** << Thou Hast Summoned HALT, the Mighty Stopper of All Things  >> ***')\\n        logger.log('*** <<                   ~~~ ALL IS GOOD ~~~                      >> ***')\\n        logger.log('*** <<                     Have a nice day!                       >> ***')\\n        logger.log('************************************************************************\\\\n')\\n        logger.log('*** Transmission was : ' + message.tags)\\n        logger.log('*** Context now : ')\\n        logger.reveal(message)\\n        process.exit() // all good\\n    }\\n}\\n\\nexport default Halt\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.003Z\"\n    },\n    \"../processors/flow/NOP.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\nimport ns from '../../utils/ns.js'\\n\\nclass NOP extends Processor {\\n\\n    constructor(config) {\\n        super(config)\\n    }\\n\\n    async process(message) {\\n        const done = message.done ? `DONE` : `NOT DONE`\\n        logger.log(`\\\\nNOP at [${message.tags}] ${this.getTag()} (${done})`)\\n\\n        return this.emit('message', message)\\n    }\\n\\n    double(string) {\\n        return string + string\\n    }\\n}\\nexport default NOP\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.009Z\"\n    },\n    \"../processors/flow/Ping.js\": {\n      \"content\": \"import { Worker } from 'worker_threads';\\nimport path from 'path';\\nimport logger from '../../utils/Logger.js';\\nimport Processor from '../base/Processor.js';\\nimport ns from '../../utils/ns.js';\\n\\nclass Ping extends Processor {\\n    constructor(config) {\\n        super(config);\\n        this.worker = null;\\n        this.pingConfig = {\\n            interval: this.getPropertyFromMyConfig(ns.trn.interval) || 5000,\\n            count: this.getPropertyFromMyConfig(ns.trn.count) || 0,\\n            payload: this.getPropertyFromMyConfig(ns.trn.payload) || 'ping',\\n            killSignal: this.getPropertyFromMyConfig(ns.trn.killSignal) || 'STOP',\\n            retryAttempts: this.getPropertyFromMyConfig(ns.trn.retryAttempts) || 3,\\n            retryDelay: this.getPropertyFromMyConfig(ns.trn.retryDelay) || 1000\\n        };\\n    }\\n\\n    async process(message) {\\n        try {\\n            // Check for kill signal in incoming message\\n            if (message.kill === this.pingConfig.killSignal) {\\n                await this.shutdown();\\n                return this.emit('message', {\\n                    ...message,\\n                    pingStatus: 'stopped',\\n                    timestamp: Date.now()\\n                });\\n            }\\n\\n            if (this.worker) {\\n                logger.warn('Ping worker already running, ignoring start request');\\n                return;\\n            }\\n\\n            let retryCount = 0;\\n            const startWorker = async () => {\\n                try {\\n                    this.worker = new Worker(\\n                        path.join(process.cwd(), 'src/processors/flow/PingWorker.js')\\n                    );\\n\\n                    this.worker.on('message', (msg) => {\\n                        switch (msg.type) {\\n                            case 'ping':\\n                                this.emit('message', {\\n                                    ...message,\\n                                    ping: {\\n                                        count: msg.count,\\n                                        timestamp: msg.timestamp,\\n                                        payload: msg.payload,\\n                                        status: 'running'\\n                                    }\\n                                });\\n                                break;\\n                            case 'complete':\\n                                this.emit('message', {\\n                                    ...message,\\n                                    pingComplete: true,\\n                                    timestamp: Date.now()\\n                                });\\n                                break;\\n                            case 'error':\\n                                this.handleWorkerError(msg.error, startWorker, retryCount);\\n                                break;\\n                        }\\n                    });\\n\\n                    this.worker.on('error', (error) => {\\n                        this.handleWorkerError(error, startWorker, retryCount);\\n                    });\\n\\n                    this.worker.on('exit', (code) => {\\n                        if (code !== 0) {\\n                            this.handleWorkerError(\\n                                new Error(`Worker stopped with exit code ${code}`),\\n                                startWorker,\\n                                retryCount\\n                            );\\n                        }\\n                        this.worker = null;\\n                    });\\n\\n                    this.worker.postMessage({\\n                        type: 'start',\\n                        config: this.pingConfig\\n                    });\\n\\n                } catch (error) {\\n                    this.handleWorkerError(error, startWorker, retryCount);\\n                }\\n            };\\n\\n            await startWorker();\\n\\n            return new Promise((resolve) => {\\n                this.worker.on('exit', () => {\\n                    resolve(message);\\n                });\\n            });\\n\\n        } catch (error) {\\n            logger.error(`Failed to start ping processor: ${error}`);\\n            throw error;\\n        }\\n    }\\n\\n    async handleWorkerError(error, retryFn, retryCount) {\\n        logger.error(`Ping worker error: ${error}`);\\n\\n        if (retryCount < this.pingConfig.retryAttempts) {\\n            retryCount++;\\n            logger.info(`Retrying ping worker (attempt ${retryCount}/${this.pingConfig.retryAttempts})`);\\n            setTimeout(retryFn, this.pingConfig.retryDelay);\\n        } else {\\n            logger.error('Max retry attempts reached, stopping ping worker');\\n            this.emit('error', error);\\n            await this.shutdown();\\n        }\\n    }\\n\\n    async shutdown() {\\n        if (this.worker) {\\n            this.worker.postMessage({ type: 'stop' });\\n            this.worker = null;\\n        }\\n    }\\n}\\n\\nexport default Ping;\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.013Z\"\n    },\n    \"../processors/flow/Unfork.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\nimport ns from '../../utils/ns.js'\\nimport rdf from 'rdf-ext'\\nimport grapoi from 'grapoi'\\nimport DeadEnd from './DeadEnd.js'\\n/*\\nTODO move to ./flow\\n\\nonly accept the first call\\n*/\\n\\nclass Unfork extends Processor {\\n\\n    constructor(config) {\\n        super(config)\\n\\n        /* NOPE\\n        if (Unfork._instance) {\\n            return new DeadEnd(config)\\n        }\\n        Unfork._instance = this;\\n*/\\n    }\\n\\n    async process(message) {\\n        logger.setLogLevel(\\\"debug\\\")\\n        logger.debug(`Unfork got message with done=${message.done}, tags=${message.tags}`);\\n\\n        logger.debug('Unfork ----')\\n        if (message.done) {\\n            logger.debug(' - Unfork passing message >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>')\\n            message.done = false // in case it's needed later\\n\\n            /*\\n                        await new Promise(resolve => {\\n                            //    super.emit(event, message)\\n                            return this.emit('message', message)\\n                            resolve()\\n                            logger.log(`after resolve has ${message.done}`)\\n                        })\\n            */\\n            return this.emit('message', message)\\n        } else {\\n            logger.debug(' - Unfork terminating pipe')\\n            return\\n        }\\n    }\\n}\\nexport default Unfork\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.018Z\"\n    },\n    \"../processors/fs/DirWalker.js\": {\n      \"content\": \"import { readdir } from 'fs/promises';\\nimport path from 'path';\\nimport ns from '../../utils/ns.js';\\nimport logger from '../../utils/Logger.js';\\nimport Processor from '../base/Processor.js';\\n\\nclass DirWalker extends Processor {\\n    constructor(config) {\\n        super(config);\\n        this.includeExtensions = ['.md'];\\n        this.excludePrefixes = ['_', '.'];\\n        this.fileCount = 0\\n    }\\n\\n    async process(message) {\\n        logger.setLogLevel('debug')\\n        logger.debug('\\\\nDirWalker.process');\\n\\n        message.counter = 0;\\n        message.slugs = [];\\n        message.done = false;\\n\\n        const sourceDir = this.getProperty(ns.trn.sourceDir);\\n        logger.debug(`DirWalker sourceDir from config = ${sourceDir}`);\\n\\n        if (!sourceDir) {\\n            throw new Error('sourceDir property not found in configuration');\\n        }\\n\\n        var includeExtensions = this.getProperty(ns.trn.includeExtensions);\\n        if (includeExtensions) {\\n            includeExtensions = includeExtensions.replaceAll('\\\\'', '\\\"');\\n            this.includeExtensions = JSON.parse(includeExtensions);\\n        }\\n\\n        if (!message.sourceDir) {\\n            message.sourceDir = sourceDir;\\n        }\\n\\n        logger.debug('\\\\n\\\\nDirWalker, message.targetPath = ' + message.targetPath)\\n        logger.debug('DirWalker, message.rootDir = ' + message.rootDir)\\n        logger.debug('DirWalker, message.sourceDir = ' + message.sourceDir)\\n\\n        let dirPath;\\n        if (path.isAbsolute(sourceDir)) {\\n            dirPath = sourceDir;\\n        } else {\\n            if (message.targetPath) {\\n                dirPath = path.join(message.targetPath, sourceDir);\\n            } else {\\n                dirPath = path.join(message.rootDir, sourceDir);\\n            }\\n        }\\n        logger.debug(`DirWalker resolved dirPath = ${dirPath}`);\\n\\n        await this.walkDirectory(dirPath, message);\\n\\n        const finalMessage = structuredClone(message);\\n        finalMessage.done = true;\\n        logger.debug(\\\"DirWalker emitting final done=true message\\\");\\n        return this.emit('message', finalMessage);\\n    }\\n\\n    async walkDirectory(dir, baseMessage) {\\n        logger.debug(`DirWalker.walkDirectory, dir = ${dir}`);\\n        //   logger.reveal(this.message)\\n        const entries = await readdir(dir, { withFileTypes: true });\\n\\n        for (const entry of entries) {\\n            const fullPath = path.join(dir, entry.name);\\n            if (entry.isDirectory() && !this.excludePrefixes.includes(entry.name[0])) {\\n                await this.walkDirectory(fullPath, baseMessage);\\n            } else if (entry.isFile()) {\\n                const extension = path.extname(entry.name);\\n                const prefix = entry.name[0];\\n\\n                if (!this.excludePrefixes.includes(prefix) &&\\n                    this.includeExtensions.includes(extension)) {\\n                    const message = structuredClone(baseMessage);\\n                    message.filename = entry.name;\\n                    message.subdir = path.dirname(path.relative(message.targetPath, fullPath)).split(path.sep)[1];\\n                    message.fullPath = fullPath;\\n                    message.filepath = path.relative(baseMessage.targetPath || baseMessage.rootDir, fullPath);\\n                    message.done = false;\\n                    message.counter++;\\n\\n                    const slug = message.filename.split('.')[0]\\n                    message.slugs.push(slug)\\n\\n                    logger.debug(`DirWalker emitting :\\n                        message.targetPath: ${message.targetPath}\\n                        message.filename: ${message.filename}\\n                        message.fullPath: ${message.fullPath}\\n                        message.subdir: ${message.subdir}\\n                        message.filepath: ${message.filepath}\\n                        message.slugs: ${message.slugs}`);\\n                    //        process.exit()\\n                    message.fileCount++\\n                    this.emit('message', message);\\n                }\\n            }\\n        }\\n    }\\n}\\n\\nexport default DirWalker;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.024Z\"\n    },\n    \"../processors/fs/FileCopy.js\": {\n      \"content\": \"// src/processors/fs/FileCopy.js\\n/**\\n * @class FileCopy\\n * @extends Processor\\n * @classdesc\\n * **a Transmissions Processor**\\n *\\n * Copies files or entire directories on the local filesystem.\\n *\\n * #### __*Configuration*__\\n * If a `settings` is provided in the transmission:\\n * * **`ns.trn.source`** - The source path relative to `applicationRootDir`\\n * * **`ns.trn.destination`** - The destination path relative to `applicationRootDir`\\n *\\n * #### __*Input*__\\n * * **`message.rootDir`** (optional) - The root directory of the operation\\n * * **`message.applicationRootDir`** (optional) - The root directory of the application, fallback `rootDir`\\n * * **`message.source`** (if no `settings`) - The source path of the file or directory to copy\\n * * **`message.destination`** (if no `settings`) - The destination path for the copied file or directory\\n *\\n * #### __*Output*__\\n * * **`message`** - unmodified\\n *\\n * #### __*Behavior*__\\n * * Copies the specified file or directory to the destination\\n * * Checks and creates target directories if they don't exist\\n * * Copies individual files directly\\n * * Recursively copies directories and their contents\\n * * Logs detailed information about the copying process for debugging\\n *\\n * #### __Tests__\\n * * **`./run file-copy-remove-test`**\\n * * **`npm test -- tests/integration/file-copy-remove-test.spec.js`**\\n */\\n\\nimport { copyFile, mkdir, readdir, stat } from 'node:fs/promises'\\nimport path from 'path'\\nimport logger from '../../utils/Logger.js'\\nimport ns from '../../utils/ns.js'\\nimport Processor from '../base/Processor.js'\\n\\n\\nclass FileCopy extends Processor {\\n    constructor(config) {\\n        super(config)\\n    }\\n\\n    /**\\n     * Executes the file copy operation\\n     * @param {Object} message - The input message\\n     */\\n    async process(message) {\\n        //  logger.setLogLevel(\\\"info\\\")\\n\\n        logger.debug(\\\"message.rootDir = \\\" + message.rootDir)\\n        var source, destination\\n\\n        // Determine source and destination paths\\n        if (this.settings === 'undefined') {\\n            logger.debug('FileCopy: using message.source and message.destination')\\n            source = message.source\\n            destination = message.destination\\n        } else {\\n            logger.debug(`FileCopy: using settings ${this.settings.value}`)\\n            source = this.getPropertyFromMyConfig(ns.trn.source)\\n            destination = this.getPropertyFromMyConfig(ns.trn.destination)\\n            if (message.targetPath) {\\n                source = path.join(message.targetPath, source)\\n                destination = path.join(message.targetPath, destination)\\n            } else {\\n                source = path.join(message.rootDir, source)\\n                destination = path.join(message.rootDir, destination)\\n            }\\n\\n        }\\n\\n        logger.debug(`Source: ${source}`)\\n        logger.debug(`Destination: ${destination}`)\\n\\n        try {\\n            await this.ensureDirectoryExists(path.dirname(destination))\\n            const sourceStat = await stat(source)\\n\\n            if (sourceStat.isFile()) {\\n                logger.debug(`Copying file from ${source} to ${destination}`)\\n                await copyFile(source, destination)\\n            } else if (sourceStat.isDirectory()) {\\n                logger.debug(`Copying directory from ${source} to ${destination}`)\\n                await this.copyDirectory(source, destination)\\n            }\\n        } catch (err) {\\n            logger.error(`Error in FileCopy: ${err.message}`)\\n            logger.error(`Source: ${source}`)\\n            logger.error(`Destination: ${destination}`)\\n        }\\n\\n        return this.emit('message', message)\\n    }\\n\\n    /**\\n     * Ensures the specified directory exists, creating it if necessary\\n     * @param {string} dirPath - The directory path to ensure\\n     */\\n    async ensureDirectoryExists(dirPath) {\\n        logger.debug(`Ensuring directory exists: ${dirPath}`)\\n        try {\\n            await mkdir(dirPath, { recursive: true })\\n            logger.debug(`Directory created/ensured: ${dirPath}`)\\n        } catch (err) {\\n            logger.debug(`Error creating directory ${dirPath}: ${err.message}`)\\n            throw err\\n        }\\n    }\\n\\n    /**\\n     * Recursively copies a directory and its contents\\n     * @param {string} source - The source directory path\\n     * @param {string} destination - The destination directory path\\n     */\\n    async copyDirectory(source, destination) {\\n        logger.debug(`Copying directory: ${source} to ${destination}`)\\n        try {\\n            await this.ensureDirectoryExists(destination)\\n            const entries = await readdir(source, { withFileTypes: true })\\n\\n            for (const entry of entries) {\\n                const srcPath = path.join(source, entry.name)\\n                const destPath = path.join(destination, entry.name)\\n\\n                logger.debug(`Processing: ${srcPath} to ${destPath}`)\\n\\n                if (entry.isDirectory()) {\\n                    await this.copyDirectory(srcPath, destPath)\\n                } else {\\n                    await copyFile(srcPath, destPath)\\n                    logger.debug(`File copied: ${srcPath} to ${destPath}`)\\n                }\\n            }\\n        } catch (err) {\\n            logger.debug(`Error in copyDirectory: ${err.message}`)\\n            throw err\\n        }\\n    }\\n}\\n\\nexport default FileCopy\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.029Z\"\n    },\n    \"../processors/fs/FileReader.js\": {\n      \"content\": \"import { readFile } from 'node:fs/promises';\\nimport { access, constants, statSync } from 'node:fs';\\nimport path from 'path';\\nimport mime from 'node-mime-types'\\nimport logger from '../../utils/Logger.js';\\nimport ns from '../../utils/ns.js';\\nimport Processor from '../base/Processor.js';\\n\\nclass FileReader extends Processor {\\n    constructor(config) {\\n        super(config);\\n    }\\n\\n    getFileMetadata(filePath) {\\n        try {\\n            const stats = statSync(filePath);\\n            const filename = path.basename(filePath)\\n            return {\\n                filename: filename,\\n                mediaType: mime.getMIMEType(filename),\\n                filepath: filePath,\\n                size: stats.size,\\n                created: stats.birthtime,\\n                modified: stats.mtime,\\n                accessed: stats.atime,\\n                isDirectory: stats.isDirectory(),\\n                isFile: stats.isFile(),\\n                permissions: stats.mode,\\n                owner: stats.uid,\\n                group: stats.gid\\n            };\\n        } catch (error) {\\n            logger.error(`Error getting file metadata: ${error.message}`);\\n            return null;\\n        }\\n    }\\n\\n    async process(message) {\\n        logger.log(`FileReader.process, done=${message.done}`)\\n\\n        if (message.done) return this.emit('message', message);\\n\\n        let filePath;\\n\\n        // First try deriving path from message properties\\n        if (message.fullPath) {\\n            filePath = message.fullPath;\\n        } else if (message.filepath) {\\n            if (message.targetPath && !path.isAbsolute(message.filepath)) {\\n                filePath = path.join(message.targetPath, message.filepath);\\n            } else {\\n                filePath = message.filepath;\\n            }\\n        } else {\\n            // Fall back to getting path from config\\n            filePath = this.getProperty(ns.trn.sourceFile);\\n            if (!filePath) {\\n                throw new Error('No file path provided in message or config');\\n            }\\n\\n            // Resolve relative to targetPath or rootDir\\n            if (!path.isAbsolute(filePath)) {\\n                filePath = path.join(message.targetPath || message.rootDir, filePath);\\n            }\\n        }\\n\\n        logger.debug(`FileReader.process(), reading file: ${filePath}`);\\n        logger.debug(`FileReader.process(), process.cwd() = ${process.cwd()}`);\\n\\n        // Verify file is readable\\n        await new Promise((resolve, reject) => {\\n            access(filePath, constants.R_OK, (err) => {\\n                if (err) {\\n                    reject(new Error(`File ${filePath} is not readable: ${err.message}`));\\n                }\\n                resolve();\\n            });\\n        });\\n\\n        // Handle metadata if requested\\n        const metaField = this.getProperty(ns.trn.metaField);\\n        if (metaField) {\\n            const metadata = this.getFileMetadata(filePath);\\n            message[metaField] = metadata;\\n        }\\n\\n        // Read and return file content\\n        const content = await readFile(filePath, 'utf8');\\n        message.content = content;\\n\\n        logger.debug(`FileReader successfully read file: ${filePath}`);\\n        return this.emit('message', message);\\n    }\\n}\\n\\nexport default FileReader;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.033Z\"\n    },\n    \"../processors/fs/FileRemove.js\": {\n      \"content\": \"// src/processors/fs/FileRemove.js\\n/**\\n * FileRemove Processor\\n *\\n * Removes files or directory contents on the local filesystem.\\n * @extends Processor\\n *\\n * #### __*Input*__\\n * * message.applicationRootDir (optional) - The root directory of the application\\n * * message.target (if no settings) - The path of the file or directory to remove\\n *\\n * #### __*Configuration*__\\n * If a settings is provided in the transmission:\\n * * ns.trn.target - The target path relative to applicationRootDir\\n *\\n * #### __*Output*__\\n * * Removes the specified file or directory contents\\n * * message (unmodified) - The input message is passed through\\n *\\n * #### __*Behavior*__\\n * * Removes individual files directly\\n * * Recursively removes directory contents\\n * * Logs debug information about the removal process\\n *\\n * #### __Tests__\\n * `./run file-copy-remove-test`\\n * `npm test -- tests/integration/file-copy-remove-test.spec.js`\\n *\\n */\\n\\nimport { unlink, readdir, stat, rm } from 'node:fs/promises'\\nimport path from 'path'\\nimport ns from '../../utils/ns.js'\\nimport logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass FileRemove extends Processor {\\n    constructor(config) {\\n        super(config)\\n    }\\n\\n    /**\\n     * Executes the file or directory removal operation\\n     * @param {Object} message - The input message\\n     */\\n    async process(message) {\\n\\n        //  logger.setLogLevel('debug')\\n\\n        this.ignoreDotfiles = true // default, simplify \\\".gitinclude\\\"\\n\\n        var target\\n\\n        // TODO add check for  ignoreDotfiles = false\\n\\n        // Determine target path\\n        if (this.settings === 'undefined') {\\n            logger.debug('FileRemove no settings from transmission, using message.target')\\n            target = message.target\\n        } else {\\n            logger.debug('FileRemove this.settings = ' + this.settings.value)\\n            target = this.getProperty(ns.trn.target)\\n            //       target = this.getPropertyFromMyConfig(ns.trn.target)\\n            target = path.join(message.rootDir, target)\\n        }\\n\\n        logger.debug('FileRemove, target = ' + target)\\n        try {\\n            const removeStat = await stat(target)\\n\\n            if (removeStat.isFile()) {\\n                await this.removeFile(target)\\n            } else if (removeStat.isDirectory()) {\\n                await this.removeDirectoryContents(target)\\n            }\\n        } catch (err) {\\n            // probably already gone\\n            logger.debug('FileRemove, target stat caused err : ' + target)\\n        }\\n\\n        return this.emit('message', message)\\n    }\\n\\n    /**\\n     * Removes a file\\n     * @param {string} filePath - The path to the file to remove\\n     */\\n    async removeFile(filePath) {\\n        await unlink(filePath)\\n    }\\n\\n    /**\\n     * Recursively removes the contents of a directory\\n     * @param {string} dirPath - The path to the directory\\n     */\\n    async removeDirectoryContents(dirPath) {\\n        logger.debug('FileRemove, dirPath = ' + dirPath)\\n        const entries = await readdir(dirPath, { withFileTypes: true })\\n\\n        for (const entry of entries) {\\n            if (this.ignoreDotfiles && (entry.name.charAt(0) === \\\".\\\")) {\\n                continue\\n            }\\n            const entryPath = path.join(dirPath, entry.name)\\n\\n            if (entry.isDirectory()) {\\n                await this.removeDirectoryContents(entryPath)\\n            } else {\\n                await unlink(entryPath)\\n            }\\n        }\\n    }\\n}\\n\\nexport default FileRemove\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.038Z\"\n    },\n    \"../processors/fs/FileWriter.js\": {\n      \"content\": \"import path from 'path'\\nimport { access, constants } from 'node:fs'\\nimport ns from '../../utils/ns.js'\\nimport { writeFile } from 'node:fs/promises'\\nimport { dirname, join } from 'node:path'\\nimport { mkdir, mkdirSync } from 'node:fs'\\nimport logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n/**\\n * FileWriter class that extends Processor\\n * Write data to a file.\\n *\\n * First checks `message.targetFilepath` and if not set, uses the value from `processors.ttl` using `settings` for this processor instance.\\n *\\n * #### __*Input*__\\n * * message.filepath\\n * * message.content\\n * #### __*Output*__\\n * * as Input\\n *\\n * if message.loadContext is set, that is used as a name in the message for the file content\\n */\\nclass FileWriter extends Processor {\\n\\n    /**\\n     * Constructs a new FileWriter object.\\n     * @param {Object} config - The configuration object for the FileWriter.\\n     */\\n    constructor(config) {\\n        super(config)\\n    }\\n\\n    /**\\n     * Executes the write operation.\\n     * @param {Object} message - The execution message.\\n     */\\n    async process(message) {\\n        logger.setLogLevel('debug')\\n        logger.debug(`\\\\n\\\\nFileWriter.process, message.done = ${message.done}`)\\n        if (message.done) {\\n            //   message.done = false\\n            return this.emit('message', message)\\n        }\\n\\n        if (message.dump) {\\n            // TODO make optional (on done?) - is a pain for multi\\n            //    const filename = `message_${new Date().toISOString()}.json`\\n            const filename = 'message.json'\\n            const f = path.join(message.dataDir, filename)\\n            const content = JSON.stringify(message)\\n            // Check if the file is readable.\\n            access(f, constants.W_OK, (err) => {\\n                if (err) {\\n                    logger.error(`FileWriter error : ${f} is not writable.`)\\n                    logger.reveal(message)\\n                }\\n            })\\n            return this.doWrite(f, content, message)\\n        }\\n\\n        logger.debug(\\\"Filewriter, message.filepath = \\\" + message.filepath)\\n\\n        var destinationFile = this.getProperty(ns.trn.destinationFile)\\n        var filepath = message.filepath\\n        if (message.subdir) {\\n            filepath = path.join(message.subdir, filepath)\\n        }\\n        //path.join(message.sourceDir, message.filepath)\\n        logger.debug(`Filewriter, 1 filepath = ${filepath}`)\\n        //   logger.reveal(filePath)\\n\\n        if (!destinationFile) { // TODO fix, do other cases, refactor\\n            var targetDir = message.targetDir ?\\n                message.targetDir : this.getProperty(ns.trn.targetDir)\\n            targetDir = targetDir ? targetDir : '.'\\n\\n            filepath = path.join(targetDir, filepath)\\n        }\\n\\n        if (!path.isAbsolute(filepath)) {\\n            filepath = path.join(message.targetPath, filepath)\\n        }\\n\\n        logger.debug(`Filewriter, filepath = ${filepath}`)\\n        const dirName = dirname(filepath)\\n        logger.debug(\\\"Filewriter, dirName = \\\" + dirName)\\n\\n        /*\\n                var contentPath = this.getPropertyFromMyConfig(ns.trn.contentPath)\\n\\n                if (typeof contentPath === 'undefined' || contentPath === 'undefined' || contentPath.value === 'undefined') {\\n                    contentPath = 'content'\\n                }\\n\\n                // logger.debug(\\\"Filewriter, contentPath = \\\" + contentPath)\\n                var content = message[contentPath.toString()] // TODO generalise.it\\n                if (typeof content === 'object') {\\n                    content = JSON.stringify(content)\\n                }\\n        */\\n        var content = message.content // TODO generalise, see above\\n        //   logger.debug(\\\"Filewriter, content = \\\" + content)\\n        // logger.debug(\\\"Filewriter, typeof content = \\\" + typeof content)\\n\\n        this.mkdirs(dirName) // sync - see below\\n\\n        return await this.doWrite(filepath, content, message)\\n    }\\n\\n    async doWrite(f, content, message) {\\n        logger.log(' - FileWriter writing : ' + f)\\n        await writeFile(f, content)\\n        return this.emit('message', message)\\n    }\\n\\n    mkdirs(dir) {\\n        mkdirSync(dir, { recursive: true })\\n        /*\\n                mkdir(dir, { recursive: true }, (error) => {\\n                    logger.log('EEEEEEEEEEEEEEEEEK!' + error)\\n                })\\n           */\\n    }\\n}\\n\\nexport default FileWriter\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.042Z\"\n    },\n    \"../processors/fs/FilenameMapper.js\": {\n      \"content\": \"import Processor from '../base/Processor.js';\\nimport path from 'path';\\nimport logger from '../../utils/Logger.js';\\n\\nclass FilenameMapper extends Processor {\\n    constructor(config) {\\n        super(config);\\n        this.extensions = {\\n            html: '.mm.html',\\n            svg: '.mm.svg'\\n        };\\n    }\\n\\n    async process(message) {\\n        const format = message.format || 'html';\\n        const extension = this.extensions[format];\\n\\n        if (!extension) {\\n            throw new Error(`Unknown format: ${format}`);\\n        }\\n\\n        const parsedPath = path.parse(message.filepath);\\n        message.filepath = path.join(\\n            parsedPath.dir,\\n            parsedPath.name + extension\\n        );\\n\\n        return this.emit('message', message);\\n    }\\n}\\n\\nexport default FilenameMapper;\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.048Z\"\n    },\n    \"../processors/fs/FsProcessorsFactory.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport ns from '../../utils/ns.js'\\n\\nimport DirWalker from './DirWalker.js'\\nimport FileReader from './FileReader.js'\\nimport FileWriter from './FileWriter.js'\\nimport FileCopy from './FileCopy.js'\\nimport FileRemove from './FileRemove.js'\\nimport FilenameMapper from './FilenameMapper.js'\\n\\nclass FsProcessorsFactory {\\n    static createProcessor(type, config) {\\n        if (type.equals(ns.trn.DirWalker)) {\\n            return new DirWalker(config)\\n        }\\n        if (type.equals(ns.trn.FileReader)) {\\n            return new FileReader(config)\\n        }\\n        if (type.equals(ns.trn.FileWriter)) {\\n            return new FileWriter(config)\\n        }\\n        if (type.equals(ns.trn.FileCopy)) {\\n            return new FileCopy(config)\\n        }\\n        if (type.equals(ns.trn.FileRemove)) {\\n            return new FileRemove(config)\\n        }\\n        if (type.equals(ns.trn.FilenameMapper)) {\\n            return new FilenameMapper(config)\\n        }\\n        return false\\n    }\\n}\\n\\nexport default FsProcessorsFactory\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.053Z\"\n    },\n    \"../processors/github/GitHubList.js\": {\n      \"content\": \"import { Octokit } from '@octokit/rest'\\nimport dotenv from 'dotenv'\\nimport Processor from '../../../../transmissions/src/processors/base/Processor.js'\\nimport logger from '../../../../transmissions/src/utils/Logger.js'\\n\\ndotenv.config({ path: './trans-apps/applications/git-apps/.env' })\\n\\nclass GitHubList extends Processor {\\n    constructor(config) {\\n        super(config)\\n        logger.debug('GitHubList constructor called')\\n        this.octokit = new Octokit({ auth: process.env.GITHUB_TOKEN })\\n        logger.debug('Octokit instance created')\\n    }\\n\\n    async process(message) {\\n        //    logger.setLogLevel('debug')\\n        logger.debug('GitHubList process method called')\\n\\n        try {\\n            // Initialize payload.github if missing\\n            if (!message.payload) {\\n                message.payload = {}\\n            }\\n            if (!message.payload.github) {\\n                message.payload.github = {}\\n            }\\n\\n            //     const username = message.payload.github.name\\n            const username = message.github.name\\n            logger.debug(`Processing for username: ${username}`)\\n\\n            logger.debug('Calling GitHub API with pagination')\\n            logger.info(`Starting repository fetch for ${username}`)\\n\\n            const repositories = await this.fetchAllRepositories(username)\\n            logger.debug(`Setting ${repositories.length} repositories in payload`)\\n\\n            // Set in payload, not message.github\\n            message.payload.github.repositories = repositories\\n            message.payload.github.totalRepos = repositories.length\\n\\n            return this.emit('message', message)\\n        } catch (error) {\\n            this.handleError(error, username)\\n        }\\n    }\\n\\n    async fetchAllRepositories(username) {\\n        const repositories = []\\n        let page = 1\\n        const delay = ms => new Promise(resolve => setTimeout(resolve, ms))\\n\\n        /*\\n        while (true) {\\n            try {\\n                const response = await this.octokit.repos.listForUser({\\n                    username,\\n                    per_page: 100,\\n                    page: page\\n                })\\n\\n                repositories.push(...response.data.map(repo => repo.name))\\n                logger.debug(`Fetched page ${page} with ${response.data.length} repositories`)\\n\\n                this.checkRateLimit(response.headers)\\n\\n                if (response.data.length < 100) break\\n                page++\\n\\n                await delay(1000) // 1 second delay between API calls\\n            } catch (error) {\\n                throw this.createDetailedError(error, 'Error fetching repositories page')\\n            }\\n        }\\n            */\\n\\n        while (true) {\\n            const response = await this.octokit.repos.listForUser({\\n                username,\\n                per_page: 100,\\n                page\\n            })\\n\\n            let data = response.data\\n            //  data = data.slice(0, 3) // Limit to first 3 repos\\n\\n            logger.debug(`Page ${page}: Got ${data.length} repos`)\\n\\n            repositories.push(...data.map(repo => repo.name))\\n\\n            if (data.length < 100) break\\n            page++\\n\\n            // Add delay between requests\\n            await new Promise(r => setTimeout(r, 5000))\\n        }\\n\\n        logger.debug(`Total repositories found: ${repositories.length}`)\\n\\n        return repositories\\n    }\\n\\n    checkRateLimit(headers) {\\n        const remaining = headers['x-ratelimit-remaining']\\n        const resetTime = new Date(headers['x-ratelimit-reset'] * 1000)\\n        logger.info(`Rate limit remaining: ${remaining}, Reset time: ${resetTime}`)\\n\\n        if (remaining < 10) {\\n            logger.warn(`Rate limit is low. Only ${remaining} requests left. Reset at ${resetTime}`)\\n        }\\n    }\\n\\n    createDetailedError(error, message) {\\n        const detailedError = new Error(`${message}: ${error.message}`)\\n        detailedError.status = error.status\\n        detailedError.response = error.response\\n        return detailedError\\n    }\\n\\n    handleError(error, username) {\\n        logger.error(`Error fetching repositories for ${username}:`, error.message)\\n        logger.debug('Error details:', JSON.stringify(error, null, 2))\\n\\n        if (error.status === 403) {\\n            logger.warn('Rate limit exceeded. Check GitHub API rate limits.')\\n            throw new Error('GitHub API rate limit exceeded')\\n        } else if (error.status === 404) {\\n            logger.warn(`User ${username} not found on GitHub`)\\n            throw new Error(`GitHub user ${username} not found`)\\n        } else {\\n            throw new Error(`Failed to fetch GitHub repositories: ${error.message}`)\\n        }\\n    }\\n}\\n\\nexport default GitHubList\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.056Z\"\n    },\n    \"../processors/github/GitHubList_no-pag.js\": {\n      \"content\": \"import { Octokit } from '@octokit/rest'\\nimport dotenv from 'dotenv'\\nimport Processor from '../base/Processor.js'\\nimport logger from '../../utils/Logger.js'\\n\\ndotenv.config({ path: './trans-apps/applications/git-apps/.env' })\\n\\nclass GitHubList extends Processor {\\n    constructor(config) {\\n        super(config)\\n        logger.debug('GitHubList constructor called')\\n        this.octokit = new Octokit({ auth: process.env.GITHUB_TOKEN })\\n        logger.debug('Octokit instance created')\\n    }\\n\\n    async process(message) {\\n        logger.debug('GitHubList execute method called')\\n        logger.debug('Input message:', JSON.stringify(message, null, 2))\\n\\n        if (!message.github || !message.github.name) {\\n            logger.error('GitHub username not provided in the message')\\n            throw new Error('GitHub username not provided in the message')\\n        }\\n\\n        const username = message.github.name\\n        logger.debug(`Fetching repositories for username: ${username}`)\\n\\n        try {\\n            logger.debug('Calling GitHub API')\\n            const { data } = await this.octokit.repos.listForUser({ username })\\n            logger.debug(`Fetched ${data.length} repositories`)\\n\\n            const repositories = data.map(repo => repo.name)\\n            logger.debug('Extracted repository names:' + repositories)\\n\\n            message.github.repositories = repositories\\n            logger.debug('Updated message:', JSON.stringify(message, null, 2))\\n\\n            this.emit('message', message)\\n            logger.debug('Emitted updated message')\\n        } catch (error) {\\n            logger.error(`Error fetching repositories for ${username}:`, error)\\n            logger.debug('Error details:', JSON.stringify(error, null, 2))\\n            if (error.status === 403) {\\n                logger.warn('Possible rate limit exceeded. Check GitHub API rate limits.')\\n            }\\n            throw error\\n        }\\n    }\\n}\\n\\nexport default GitHubList\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.059Z\"\n    },\n    \"../processors/github/GitHubProcessorsFactory.js\": {\n      \"content\": \"// GitHubProcessorsFactory.js\\nimport logger from '../../../../transmissions/src/utils/Logger.js';\\nimport ns from '../../../../transmissions/src/utils/ns.js';\\nimport GitHubList from './GitHubList.js';\\n\\nclass GitHubProcessorsFactory {\\n    static createProcessor(type, config) {\\n        if (type.equals(ns.trn.GitHubList)) {\\n            return new GitHubList(config);\\n        }\\n        return false;\\n    }\\n}\\n\\nexport default GitHubProcessorsFactory;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.063Z\"\n    },\n    \"../processors/http/HttpClient.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js' // path will likely change\\nimport Processor from '../base/Processor.js' // maybe more specific\\n\\n/**\\n * FileReader class that extends xxxxxProcessor.\\n * DESCRIPTION\\n * #### __*Input*__\\n * **message.INPUT**\\n * #### __*Output*__\\n * **message.OUTPUT**\\n */\\nclass HttpClient extends Processor {\\n\\n    /**\\n     * Constructs a new ProcessorExample instance.\\n     * @param {Object} config - The configuration object.\\n     */\\n    constructor(config) {\\n        super(config)\\n    }\\n\\n    /**\\n     * Does something with the message and emits a 'message' event with the processed message.\\n     * @param {Object} message - The message object.\\n     */\\n    async process(message) {\\n        //   logger.setLogLevel('debug')\\n\\n        // processing goes here\\n        return this.emit('message', message)\\n    }\\n}\\n\\nexport default HttpClient\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.067Z\"\n    },\n    \"../processors/http/HttpProcessorsFactory.js\": {\n      \"content\": \"//import logger from '../../utils/Logger.js'\\nimport ns from '../../utils/ns.js'\\n\\nimport HttpServer from './HttpServer.js'\\nimport HttpClient from './HttpClient.js'\\nimport HttpProxy from './HttpProxy.js'\\n\\nclass HttpProcessorsFactory {\\n    static createProcessor(type, config) {\\n\\n        if (type.equals(ns.trn.HttpServer)) {\\n            return new HttpServer(config)\\n        }\\n        if (type.equals(ns.trn.HttpClient)) {\\n            return new HttpClient(config)\\n        }\\n        if (type.equals(ns.trn.HttpProxy)) {\\n            return new HttpProxy(config)\\n        }\\n\\n        return false\\n    }\\n}\\nexport default HttpProcessorsFactory\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.074Z\"\n    },\n    \"../processors/http/HttpProxy.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js' // path will likely change\\nimport Processor from '../base/Processor.js' // maybe more specific\\n\\n/**\\n * FileReader class that extends xxxxxProcessor.\\n * DESCRIPTION\\n * #### __*Input*__\\n * **message.INPUT**\\n * #### __*Output*__\\n * **message.OUTPUT**\\n */\\nclass HttpProxy extends Processor {\\n\\n    /**\\n     * Constructs a new ProcessorExample instance.\\n     * @param {Object} config - The configuration object.\\n     */\\n    constructor(config) {\\n        super(config)\\n    }\\n\\n    /**\\n     * Does something with the message and emits a 'message' event with the processed message.\\n     * @param {Object} message - The message object.\\n     */\\n    async process(message) {\\n        //    logger.setLogLevel('debug')\\n\\n        // processing goes here\\n        return this.emit('message', message)\\n    }\\n}\\n\\nexport default HttpProxy\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.079Z\"\n    },\n    \"../processors/http/HttpServer.js\": {\n      \"content\": \"import path from 'path';\\nimport { Worker } from 'worker_threads';\\nimport logger from '../../utils/Logger.js';\\nimport Processor from '../base/Processor.js';\\nimport ns from '../../utils/ns.js';\\n\\nclass HttpServer extends Processor {\\n    constructor(config) {\\n        super(config);\\n        this.worker = null;\\n        this.serverConfig = {\\n            port: this.getPropertyFromMyConfig(ns.trn.port) || 4000,\\n            basePath: this.getPropertyFromMyConfig(ns.trn.basePath) || '/transmissions/test/',\\n            staticPath: this.getPropertyFromMyConfig(ns.trn.staticPath),\\n            cors: this.getPropertyFromMyConfig(ns.trn.cors) || false,\\n            timeout: this.getPropertyFromMyConfig(ns.trn.timeout) || 30000,\\n            maxRequestSize: this.getPropertyFromMyConfig(ns.trn.maxRequestSize) || '1mb',\\n            rateLimit: {\\n                windowMs: 15 * 60 * 1000,\\n                max: 100\\n            }\\n        };\\n    }\\n\\n    async process(message) {\\n        try {\\n            this.worker = new Worker(\\n                path.join(process.cwd(), 'src/processors/http/HttpServerWorker.js')\\n            );\\n\\n            this.worker.on('message', (msg) => {\\n                switch (msg.type) {\\n                    case 'status':\\n                        if (msg.status === 'running') {\\n                            logger.info(`Server running on port ${msg.port}`);\\n                        } else if (msg.status === 'stopped') {\\n                            this.emit('message', { ...message, serverStopped: true });\\n                        }\\n                        break;\\n                    case 'error':\\n                        logger.error(`Server error: ${msg.error}`);\\n                        this.emit('error', new Error(msg.error));\\n                        break;\\n                }\\n            });\\n\\n            this.worker.on('error', (error) => {\\n                logger.error(`Worker error: ${error}`);\\n                this.emit('error', error);\\n            });\\n\\n            this.worker.postMessage({\\n                type: 'start',\\n                config: this.serverConfig\\n            });\\n\\n            return new Promise((resolve) => {\\n                this.worker.on('exit', () => {\\n                    resolve(message);\\n                });\\n            });\\n\\n        } catch (error) {\\n            logger.error(`Failed to start server: ${error}`);\\n            throw error;\\n        }\\n    }\\n\\n    async shutdown() {\\n        if (this.worker) {\\n            this.worker.postMessage({ type: 'stop' });\\n        }\\n    }\\n}\\n\\nexport default HttpServer;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.082Z\"\n    },\n    \"../processors/http/HttpServerWorker.js\": {\n      \"content\": \"import { parentPort } from 'worker_threads';\\nimport express from 'express';\\nimport path from 'path';\\nimport logger from '../../utils/Logger.js';\\n\\nclass ServerWorker {\\n    constructor(config) {\\n        this.app = express();\\n        this.server = null;\\n        this.config = config;\\n        this.setupMessageHandling();\\n    }\\n\\n    setupMessageHandling() {\\n        parentPort.on('message', (message) => {\\n            switch (message.type) {\\n                case 'start':\\n                    this.start(message.config);\\n                    break;\\n                case 'stop':\\n                    this.stop();\\n                    break;\\n                default:\\n                    logger.warn(`Unknown message type: ${message.type}`);\\n            }\\n        });\\n    }\\n\\n    async start(config) {\\n        try {\\n            const { port = 4000, basePath = '/transmissions/test/', staticPath } = config;\\n\\n            if (staticPath) {\\n                this.app.use(basePath, express.static(staticPath));\\n            }\\n\\n            this.app.post('/shutdown', (req, res) => {\\n                res.send('Server shutting down...');\\n                this.stop();\\n            });\\n\\n            this.server = this.app.listen(port, () => {\\n                parentPort.postMessage({\\n                    type: 'status',\\n                    status: 'running',\\n                    port: port\\n                });\\n            });\\n\\n        } catch (error) {\\n            parentPort.postMessage({\\n                type: 'error',\\n                error: error.message\\n            });\\n        }\\n    }\\n\\n    async stop() {\\n        if (this.server) {\\n            try {\\n                await new Promise((resolve, reject) => {\\n                    this.server.close((err) => {\\n                        if (err) reject(err);\\n                        resolve();\\n                    });\\n                });\\n\\n                parentPort.postMessage({\\n                    type: 'status',\\n                    status: 'stopped'\\n                });\\n\\n                process.exit(0);\\n            } catch (error) {\\n                parentPort.postMessage({\\n                    type: 'error',\\n                    error: error.message\\n                });\\n                process.exit(1);\\n            }\\n        }\\n    }\\n}\\n\\nconst worker = new ServerWorker();\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.087Z\"\n    },\n    \"../processors/http/services/MetricsService.js\": {\n      \"content\": \"import WebSocket from 'ws';\\nimport os from 'os';\\n\\nclass MetricsService {\\n    constructor(server) {\\n        this.wss = new WebSocket.Server({ server });\\n        this.metrics = {\\n            startTime: Date.now(),\\n            requests: 0,\\n            connections: 0,\\n            memory: {},\\n            cpu: {}\\n        };\\n        this.setupWebSocket();\\n        this.startMetricsCollection();\\n    }\\n\\n    setupWebSocket() {\\n        this.wss.on('connection', (ws) => {\\n            this.metrics.connections++;\\n            ws.on('close', () => this.metrics.connections--);\\n        });\\n    }\\n\\n    startMetricsCollection() {\\n        setInterval(() => {\\n            this.updateMetrics();\\n            this.broadcastMetrics();\\n        }, 1000);\\n    }\\n\\n    updateMetrics() {\\n        this.metrics.uptime = (Date.now() - this.metrics.startTime) / 1000;\\n        this.metrics.memory = {\\n            used: process.memoryUsage().heapUsed,\\n            total: os.totalmem(),\\n            free: os.freemem()\\n        };\\n        this.metrics.cpu = {\\n            load: os.loadavg(),\\n            cores: os.cpus().length\\n        };\\n    }\\n\\n    broadcastMetrics() {\\n        const data = JSON.stringify(this.metrics);\\n        this.wss.clients.forEach(client => {\\n            if (client.readyState === WebSocket.OPEN) {\\n                client.send(data);\\n            }\\n        });\\n    }\\n\\n    incrementRequests() {\\n        this.metrics.requests++;\\n    }\\n}\\n\\nexport default MetricsService;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.091Z\"\n    },\n    \"../processors/http/services/ShutdownService copy.js\": {\n      \"content\": \"import jwt from 'jsonwebtoken';\\nimport crypto from 'crypto';\\n\\nclass ShutdownService {\\n    constructor() {\\n        this.secret = crypto.randomBytes(32).toString('hex');\\n        this.token = this.generateToken();\\n    }\\n\\n    generateToken() {\\n        return jwt.sign({ action: 'shutdown' }, this.secret, { expiresIn: '1h' });\\n    }\\n\\n    setupMiddleware(app) {\\n        app.use('/admin', (req, res, next) => {\\n            const token = req.headers.authorization?.split(' ')[1];\\n            if (!token) {\\n                res.status(401).send('No token provided');\\n                return;\\n            }\\n            try {\\n                jwt.verify(token, this.secret);\\n                next();\\n            } catch (err) {\\n                res.status(403).send('Invalid token');\\n            }\\n        });\\n    }\\n\\n    setupEndpoints(app, shutdownCallback) {\\n        app.get('/admin/token', (req, res) => {\\n            res.json({ token: this.generateToken() });\\n        });\\n\\n        app.post('/admin/shutdown', (req, res) => {\\n            res.send('Shutdown initiated');\\n            shutdownCallback();\\n        });\\n    }\\n}\\n\\nexport default ShutdownService;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.097Z\"\n    },\n    \"../processors/http/services/ShutdownService.js\": {\n      \"content\": \"import crypto from 'crypto';\\n\\nclass ShutdownService {\\n    constructor() {\\n        // Generate random credentials on startup\\n        this.username = crypto.randomBytes(16).toString('hex');\\n        this.password = crypto.randomBytes(32).toString('hex');\\n    }\\n\\n    setupMiddleware(app) {\\n        app.use('/admin', (req, res, next) => {\\n            const authHeader = req.headers.authorization;\\n            if (!this.validateAuth(authHeader)) {\\n                res.setHeader('WWW-Authenticate', 'Basic');\\n                return res.status(401).send('Authentication required');\\n            }\\n            next();\\n        });\\n    }\\n\\n    validateAuth(authHeader) {\\n        if (!authHeader || !authHeader.startsWith('Basic ')) {\\n            return false;\\n        }\\n        const base64Credentials = authHeader.split(' ')[1];\\n        const credentials = Buffer.from(base64Credentials, 'base64').toString('utf-8');\\n        const [username, password] = credentials.split(':');\\n\\n        return username === this.username && password === this.password;\\n    }\\n\\n    setupEndpoints(app, shutdownCallback) {\\n        app.get('/admin/credentials', (req, res) => {\\n            res.json({ username: this.username, password: this.password });\\n        });\\n\\n        app.post('/admin/shutdown', (req, res) => {\\n            res.send('Shutdown initiated');\\n            shutdownCallback();\\n        });\\n    }\\n}\\n\\nexport default ShutdownService;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.101Z\"\n    },\n    \"../processors/json/Blanker copy.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\nimport ns from '../../utils/ns.js'\\n\\nclass Blanker extends Processor {\\n    constructor(config) {\\n        super(config)\\n        this.blankValue = config.blankValue || ''\\n    }\\n\\n    blankValues(obj) {\\n        if (Array.isArray(obj)) {\\n            return obj.map(item => this.blankValues(item))\\n        } else if (typeof obj === 'object' && obj !== null) {\\n            const result = {}\\n            for (const [key, value] of Object.entries(obj)) {\\n                result[key] = this.blankValues(value)\\n            }\\n            return result\\n        } else if (typeof obj === 'string') {\\n            return ''\\n        }\\n        return obj\\n    }\\n\\n    async process(message) {\\n        try {\\n            const pointer = this.getPropertyFromMyConfig(ns.trn.pointer)\\n\\n            if (!pointer) {\\n                // Blank entire message if no pointer specified\\n                message = this.blankValues(message)\\n            } else {\\n                // Get the nested object using the pointer\\n                const parts = pointer.toString().split('.')\\n                let target = message\\n\\n                // Navigate to the target object\\n                for (let i = 0; i < parts.length - 1; i++) {\\n                    target = target[parts[i]]\\n                    if (!target) break\\n                }\\n\\n                // Blank values in the target object\\n                if (target && target[parts[parts.length - 1]]) {\\n                    target[parts[parts.length - 1]] =\\n                        this.blankValues(target[parts[parts.length - 1]])\\n                }\\n            }\\n\\n            return this.emit('message', message)\\n        } catch (err) {\\n            logger.error(\\\"Blanker processor error: \\\" + err.message)\\n            throw err\\n        }\\n    }\\n}\\n\\nexport default Blanker\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.105Z\"\n    },\n    \"../processors/json/Blanker.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\nimport ns from '../../utils/ns.js'\\n\\nclass Blanker extends Processor {\\n    constructor(config) {\\n        super(config)\\n        //    logger.setLogLevel('debug')\\n        logger.debug(config.blankValue)\\n        this.blankValue = config.blankValue || ''\\n    }\\n\\n    async process(message) {\\n        const pointer = this.getPropertyFromMyConfig(ns.trn.pointer)\\n        const preserve = this.getPropertyFromMyConfig(ns.trn.preserve)\\n\\n        var preservePath = preserve.value ? preserve.value : 'nonono'\\n\\n        logger.debug(`Blanker.process,  typeof preservePath = ${typeof preservePath}, preservePath = ${preservePath}`)\\n        logger.reveal(preservePath)\\n        if (!pointer) {\\n            if (preservePath) {\\n                message = this.blankValues(message, '', preservePath)\\n            } else {\\n                message = this.blankAllValues(message)\\n            }\\n        } else {\\n            const parts = pointer.toString().split('.')\\n            let target = message\\n\\n            for (let i = 0; i < parts.length - 1; i++) {\\n                target = target[parts[i]]\\n                if (!target) break\\n            }\\n\\n            if (target && target[parts[parts.length - 1]]) {\\n                if (preservePath) {\\n                    target[parts[parts.length - 1]] =\\n                        this.blankValues(target[parts[parts.length - 1]], parts.join('.'), preservePath)\\n                } else {\\n                    target[parts[parts.length - 1]] =\\n                        this.blankAllValues(target[parts[parts.length - 1]])\\n                }\\n            }\\n        }\\n\\n        return this.emit('message', message)\\n    }\\n\\n    shouldPreserve(path, preservePath) {\\n        logger.debug(`Blanker.shouldPreserve path = ${path}, preservePath = ${preservePath}`)\\n        if (!preservePath) return false\\n        const pathParts = path.split('.')\\n        const preserveParts = preservePath.split('.')\\n\\n        if (pathParts.length < preserveParts.length) return false\\n\\n        for (let i = 0; i < preserveParts.length; i++) {\\n            if (pathParts[i] !== preserveParts[i]) return false\\n        }\\n        return true\\n    }\\n\\n    // TODO refactor...can I be arsed?\\n    blankAllValues(obj) {\\n        if (Array.isArray(obj)) {\\n            return obj.map(item => this.blankAllValues(item))\\n        } else if (typeof obj === 'object' && obj !== null) {\\n            const result = {}\\n            for (const [key, value] of Object.entries(obj)) {\\n                result[key] = this.blankAllValues(value)\\n            }\\n            return result\\n        } else if (typeof obj === 'string') {\\n            return ''\\n        }\\n        return obj\\n    }\\n\\n    blankValues(obj, currentPath = '', preservePath = '') {\\n        if (Array.isArray(obj)) {\\n            return obj.map((item, index) =>\\n                this.blankValues(item, `${currentPath}[${index}]`, preservePath)\\n            )\\n        } else if (typeof obj === 'object' && obj !== null) {\\n            const result = {}\\n            for (const [key, value] of Object.entries(obj)) {\\n                const newPath = currentPath ? `${currentPath}.${key}` : key\\n                logger.debug(`Blanker.blankValues 1 newPath = ${newPath}, preservePath = ${preservePath}`)\\n                if (this.shouldPreserve(newPath, preservePath)) {\\n                    result[key] = value\\n                } else {\\n                    result[key] = this.blankValues(value, newPath, preservePath)\\n                }\\n            }\\n            return result\\n        } else if (typeof obj === 'string') {\\n            logger.debug(`Blanker.blankValues 2 currentPath = ${currentPath}, preservePath = ${preservePath}`)\\n            return this.shouldPreserve(currentPath, preservePath) ? obj : ''\\n        }\\n        return obj\\n    }\\n}\\n\\nexport default Blanker\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.110Z\"\n    },\n    \"../processors/json/JSONProcessorsFactory.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport ns from '../../utils/ns.js'\\n\\nimport JSONWalker from './JSONWalker.js'\\nimport Restructure from './Restructure.js'\\nimport ValueConcat from './ValueConcat.js'\\nimport Blanker from './Blanker.js'\\n\\nclass JSONProcessorsFactory {\\n    static createProcessor(type, config) {\\n        if (type.equals(ns.trn.Restructure)) {\\n            return new Restructure(config)\\n        }\\n        if (type.equals(ns.trn.JSONWalker)) {\\n            return new JSONWalker(config)\\n        }\\n        if (type.equals(ns.trn.ValueConcat)) {\\n            return new ValueConcat(config)\\n        }\\n        if (type.equals(ns.trn.Blanker)) {\\n            return new Blanker(config)\\n        }\\n        return false\\n    }\\n\\n}\\nexport default JSONProcessorsFactory\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.115Z\"\n    },\n    \"../processors/json/JSONWalker.js\": {\n      \"content\": \"// src/processors/json/JSONWalker.js\\n/**\\n* @class JSONWalker\\n* @extends Processor\\n* @classdesc\\n* **A Transmissions Processor**\\n*\\n* Walks through a JSON structure and emits messages for each item.\\n*\\n* ### Processor Signature\\n*\\n* #### ***Configuration***\\n* ***`ns.trn.targetDir`** - Target directory path relative to current working directory\\n*\\n* #### ***Input***\\n* ***`message.payload`** - JSON object to process\\n*\\n* #### ***Output***\\n* * Emits a message for each item in the input payload\\n* * Final message has `done: true` flag\\n* * Each emitted message contains:\\n*   * ***`message.item`** - Current item being processed\\n*   * ***`message.payload`** - Empty object (configurable)\\n*\\n* #### ***Behavior***\\n* * Validates input is a JSON object\\n* * Creates separate message for each value in payload\\n* * Clones messages to prevent cross-contamination\\n* * Signals completion with done flag\\n*/\\n\\nimport path from 'path'\\nimport logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\nimport ns from '../../utils/ns.js'\\n\\nclass JSONWalker extends Processor {\\n    constructor(config) {\\n        super(config)\\n    }\\n\\n    /**\\n     * Processes JSON payload by walking its structure and emitting messages\\n     * @param {Object} message - Contains payload to process\\n     * @throws {Error} If payload is invalid\\n     * @emits message - For each item and completion\\n     */\\n    async process(message) {\\n        try {\\n            message.done = false\\n            var pointer = this.getPropertyFromMyConfig(ns.trn.pointer)\\n\\n            logger.debug(`JSONWalker pointer =  ${pointer}`)\\n\\n            const content = structuredClone(message.content)\\n            message.content = {} // TODO option in config\\n\\n            //  for (const item of Object.values(content)) {\\n            for (var i = 0; i < content.length; i++) {\\n                const newMessage = structuredClone(message)\\n                newMessage.content = content[i]\\n                this.emit('message', newMessage)\\n            }\\n\\n            var finalMessage = structuredClone(message)\\n            finalMessage.content = content[content.length - 1]\\n\\n            /* this is for values - dict\\n            for (const item of Object.values(content)) {\\n                const newMessage = structuredClone(message)\\n                newMessage.content = {}\\n                newMessage.content.items = []\\n                newMessage.content.items.push[item]\\n                //   message.item = item  // TODO refactor, it's just to grab the last\\n                finalMessage = newMessage\\n                this.emit('message', newMessage)\\n            }\\n                */\\n\\n            finalMessage.done = true\\n            this.emit('message', finalMessage)\\n        } catch (err) {\\n            logger.error(\\\"JSONWalker.process error: \\\" + err.message)\\n            throw err\\n        }\\n    }\\n}\\n\\nexport default JSONWalker\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.120Z\"\n    },\n    \"../processors/json/JsonRestructurer.js\": {\n      \"content\": \"// JsonRestructurer.js\\n\\nimport logger from '../../utils/Logger.js'\\n\\nclass JsonRestructurer {\\n    constructor(mappings) {\\n        logger.setLogLevel('info')\\n        if (!mappings?.mappings || !Array.isArray(mappings.mappings)) {\\n            throw new Error('Invalid mapping structure')\\n        }\\n        this.mappings = mappings.mappings\\n        logger.debug('JsonRestructurer,  this.mappings = ' + this.mappings)\\n        //  logger.reveal(this.mappings)\\n    }\\n\\n    getValueByPath(obj, path) {\\n        //    logger.debug('JsonRestructurer, path = ' + path)\\n        //  logger.debug('JsonRestructurer, OBJECT = ' + obj)\\n\\n        //        logger.reveal(obj)\\n        //      logger.debug('JsonRestructurer, OBJECT = ^^^^')\\n\\n        //   logger.debug('JsonRestructurer, obj.item.chat_messages = ' + obj.item.chat_messages)\\n        try {\\n            const sp = path.split('.')\\n            logger.debug('JsonRestructurer, sp = ' + sp)\\n            const reduced = sp.reduce((acc, part) => acc[part], obj)\\n            logger.debug('JsonRestructurer, reduced = ' + reduced)\\n            return reduced\\n        } catch (e) {\\n            logger.warn(`Warning: Path ${path} not found`)\\n            return undefined\\n        }\\n    }\\n\\n    setValueByPath(obj, path, value) {\\n        logger.debug(`JsonRestructurer.setValueByPath, obj = ${obj}, path = ${path}, value = ${value}`)\\n        const parts = path.split('.')\\n        const last = parts.pop()\\n        const target = parts.reduce((acc, part) => {\\n            acc[part] = acc[part] || {}\\n            return acc[part]\\n        }, obj)\\n        logger.debug(`JsonRestructurer.setValueByPath, target = ${target}, last = ${last}, value = ${value}`)\\n        target[last] = value\\n    }\\n\\n    restructure(inputData) {\\n        //   logger.log(`typeof inputData = ${typeof inputData}`)\\n        if (typeof inputData === 'string') {\\n            try {\\n                inputData = JSON.parse(inputData)\\n            } catch (e) {\\n                throw new Error('Invalid JSON string provided')\\n            }\\n        }\\n        // logger.reveal(inputData)\\n        //  process.exit(0)\\n        const result = {}\\n        this.mappings.forEach(({ pre, post }) => {\\n            //   logger.log(`PRE = ${pre}, POST = ${post}`)\\n            const value = this.getValueByPath(inputData, pre)\\n            // logger.log(`PRE = ${pre}, POST = ${post} value = ${value}`)\\n            if (value !== undefined) {\\n                this.setValueByPath(result, post, value)\\n            }\\n        })\\n        //    logger.log('RESULT%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%55')\\n        //  logger.reveal(result)\\n        // logger.log('RESULT ^^^^')\\n        return result\\n    }\\n}\\nexport default JsonRestructurer\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.125Z\"\n    },\n    \"../processors/json/Restructure.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\nimport JsonRestructurer from './JsonRestructurer.js'\\nimport ns from '../../utils/ns.js'\\nimport GrapoiHelpers from '../../utils/GrapoiHelpers.js'\\nimport rdf from 'rdf-ext'\\n\\nclass Restructure extends Processor {\\n    constructor(config) {\\n        super(config)\\n    }\\n\\n    async getRenames(config, settings, term) {\\n        //logger.log(`***** config = ${config}`)\\n        //logger.log(`***** settings = ${settings}`)\\n        //logger.log(`***** term = ${term}`)\\n        const renamesRDF = GrapoiHelpers.listToArray(config, settings, term)\\n        const dataset = this.config\\n        var renames = []\\n        for (let i = 0; i < renamesRDF.length; i++) {\\n            let rename = renamesRDF[i]\\n            let poi = rdf.grapoi({ dataset: dataset, term: rename })\\n            let pre = poi.out(ns.trn.pre).value\\n            let post = poi.out(ns.trn.post).value\\n            renames.push({ \\\"pre\\\": pre, \\\"post\\\": post })\\n        }\\n        return renames\\n    }\\n\\n    async process(message) {\\n        logger.setLogLevel('info')\\n        //  logger.debug('Restructure this.settings = ' + this.settings.value)\\n        // Extract mappings array from config\\n        var renames\\n        if (this.config.simples) {\\n            renames = this.config.rename\\n        } else {\\n            renames = await this.getRenames(this.config, this.settings, ns.trn.rename)\\n        }\\n\\n        //  logger.log('Renames :')\\n        // logger.reveal(renames)\\n\\n        // Initialize JsonRestructurer with mappings\\n        this.restructurer = new JsonRestructurer({\\n            mappings: renames\\n        })\\n        try {\\n            logger.debug('Restructure processor executing...')\\n\\n            // Get input data from message\\n            // const input = message.payload?.item || message.payload\\n            const input = structuredClone(message)\\n\\n            // Perform restructuring\\n            const restructured = this.restructurer.restructure(input)\\n\\n            const type = typeof restructured\\n            //   logger.debug(`typeof restructured = ${type}`) // is object... TODO need different handling for returned arrays?\\n            // logger.debug(`restructured = ${restructured}`)\\n            //    logger.reveal(restructured)\\n\\n            for (const key of Object.keys(restructured)) {\\n                message[key] = restructured[key]\\n            }\\n\\n\\n            logger.debug('Restructure successful')\\n            return this.emit('message', message)\\n\\n        } catch (err) {\\n            logger.error(\\\"Restructure processor error: \\\" + err.message)\\n            logger.reveal(message)\\n            throw err\\n        }\\n    }\\n}\\n\\nexport default Restructure\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.129Z\"\n    },\n    \"../processors/json/ValueConcat.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport rdf from 'rdf-ext'\\nimport ns from '../../utils/ns.js'\\nimport GrapoiHelpers from '../../utils/GrapoiHelpers.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass ValueConcat extends Processor {\\n\\n    constructor(config) {\\n        super(config)\\n        logger.log('CREATING VALUECONCAT')\\n    }\\n\\n}\\nexport default ValueConcat\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.133Z\"\n    },\n    \"../processors/markup/LinkFinder.js\": {\n      \"content\": \"import * as cheerio from 'cheerio'\\n\\nimport logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass LinkFinder extends Processor {\\n\\n    async process(message) {\\n\\n        await this.extractLinks(message)\\n\\n        if (data === '~~done~~') {\\n            logger.log('LF DONE*****************')\\n            return this.emitLocal('message', '~~done~~', message)\\n            return\\n        }\\n    }\\n\\n\\n    relocate(filename, extension) {\\n        const split = filename.split('.').slice(0, -1)\\n        return split.join('.') + extension\\n    }\\n\\n    async extractLinks(htmlContent, message) {\\n\\n        const $ = cheerio.load(htmlContent)\\n        let label = ''\\n\\n        $('a, h1, h2, h3, h4, h5, h6').each((_, element) => {\\n            const tagName = element.tagName.toLowerCase()\\n            if (tagName.startsWith('h')) {\\n                const level = tagName.substring(1)\\n                const headerText = $(element).text()\\n                label = `\\\\n\\\\n${'#'.repeat(parseInt(level))} ${headerText}\\\\n`\\n            } else if (tagName === 'a') {\\n                const linkText = $(element).text()\\n                //  logger.debug('linkText = ' + linkText)\\n                let href = $(element).attr('href')\\n                // logger.debug('href = ' + href)\\n                if (!href || href.startsWith('#')) return\\n                // Create an absolute URL if the href is relative\\n                if (href && !href.includes('://')) {\\n                    //  logger.debug('message.sourceURL = ' + message.sourceURL)\\n                    const baseURL = message.sourceURL\\n                    //  logger.debug('this.baseUrl = ' + baseURL)\\n                    href = new URL(href, baseURL).toString()\\n                }\\n                label = `\\\\n[${linkText}](${href})`\\n\\n            }\\n            message.label = label\\n            return this.emit('message', message)\\n        })\\n    }\\n}\\n\\nexport default LinkFinder\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.138Z\"\n    },\n    \"../processors/markup/MarkdownToHTML.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n// import { parse } from 'marked'\\nimport { marked } from 'marked'\\n\\n// marked extensions\\nimport markedFootnote from 'marked-footnote'\\nimport markedCodeFormat from 'marked-code-format'\\n// import customHeadingId from \\\"marked-custom-heading-id\\\";\\n\\nclass MarkdownToHTML extends Processor {\\n\\n\\n    async process(message) {\\n        logger.debug(`\\\\n\\\\nMarkdownToHTML.process`)\\n        logger.reveal(message)\\n        var input\\n        if (message.contentBlocks) { // using templating\\n            input = message.contentBlocks.content\\n        } else { // default\\n            input = message.content\\n        }\\n\\n\\n        // new Marked()\\n        message.content = await\\n            marked\\n                //                .use(customHeadingId())\\n                .use(markedFootnote())\\n                .use(\\n                    markedCodeFormat({\\n                        /* Prettier options */\\n                    })\\n                )\\n                .parse(input.toString())\\n\\n        return this.emit('message', message)\\n    }\\n}\\n\\nexport default MarkdownToHTML\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.143Z\"\n    },\n    \"../processors/markup/MarkupProcessorsFactory.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport ns from '../../utils/ns.js'\\n\\nimport MetadataExtractor from './MetadataExtractor.js'\\nimport LinkFinder from './LinkFinder.js'\\nimport MarkdownToHTML from './MarkdownToHTML.js'\\n\\nclass MarkupProcessorsFactory {\\n    static createProcessor(type, config) {\\n        if (type.equals(ns.trn.MetadataExtractor)) {\\n            return new MetadataExtractor(config)\\n        }\\n        if (type.equals(ns.trn.MarkdownToHTML)) {\\n            return new MarkdownToHTML(config)\\n        }\\n        if (type.equals(ns.trn.LinkFinder)) {\\n            return new LinkFinder(config)\\n        }\\n        return false\\n    }\\n}\\n\\nexport default MarkupProcessorsFactory\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.147Z\"\n    },\n    \"../processors/markup/MetadataExtractor.js\": {\n      \"content\": \"import * as cheerio from 'cheerio'\\n\\nimport logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass MetadataExtractor extends Processor {\\n\\n    async process(message) {\\n        const filename = data.filename\\n        const content = data.content\\n\\n        logger.debug(\\\"MetadataExtractor input file : \\\" + filename)\\n        const targetFilename = this.relocate(filename)\\n        logger.debug(\\\"MetadataExtractor outputfile : \\\" + targetFilename)\\n\\n        const jsonData = this.convertEmailToJSON(content)\\n\\n        const jsonString = JSON.stringify(jsonData)\\n\\n        const output = { filename: targetFilename, content: jsonString }\\n\\n        return this.emit('message', output, message)\\n    }\\n\\n    relocate(filename) {\\n        //   var newFileName = filename.replace(/\\\\. \\\\w+$/, '.json')\\n        const split = filename.split('.').slice(0, -1)\\n        var newFileName = split.join('.') + '.json'\\n        return newFileName\\n    }\\n\\n    convertEmailToJSON(htmlContent) {\\n        const $ = cheerio.load(htmlContent)\\n        var subjectLine = $('H1').text().trim()\\n        var fromName = $('B').first().text().trim()\\n        var nextMessageLink = $('LINK[REL=\\\"Next\\\"]').attr('HREF')\\n        var previousMessageLink = $('LINK[REL=\\\"Previous\\\"]').attr('HREF')\\n        var messageText = $('PRE').text().trim()\\n        messageText = this.pruneContent(messageText)\\n        const jsonResult = {\\n            subjectLine: subjectLine,\\n            fromName: fromName,\\n            nextMessageLink: nextMessageLink,\\n            previousMessageLink: previousMessageLink,\\n            messageText: messageText\\n\\n        }\\n\\n        /*\\n                const jsonResult = {\\n                    subject: $('H1').text().trim(),\\n                    from: $('B').first().text().trim(),\\n                    'next-message': $('LINK[REL=\\\"Next\\\"]').attr('HREF'),\\n                    'previous-message': $('LINK[REL=\\\"Previous\\\"]').attr('HREF'),\\n                    'message-text': $('PRE').text().trim()\\n                };\\n                */\\n\\n        /*\\n        + ' ' + $('A').first().attr('href').match(/mailto:(.+\\\\?)/)[1].replace('?Subject=', ' '),\\n            cc: '', // The sample does not contain a CC field to extract\\n        // Removing parameters from email address in 'from' field\\n        jsonResult.from = jsonResult.from.split('?')[0];\\n\\n        //    'in-reply-to': $('LINK[REL=\\\"made\\\"]').attr('HREF').match(/In-Reply-To=(.*)/)[1],\\n        */\\n        /*\\n        :\\\\n\\\\n>\\n        */\\n\\n        return jsonResult\\n    }\\n\\n    pruneContent(content) {\\n        // \\\"keep this\\\\nremove this\\\\n\\\\n>: keep this\\\";\\n        const regex1 = /(^|\\\\n).*?:\\\\n>/s\\n        content = content.replace(regex1, '$1')\\n\\n        const regex2 = /\\\\n>.*?\\\\n/g\\n\\n        //   const inputString = \\\"keep before\\\\n>remove this\\\\nkeep after\\\";\\n        //   const cleanedString = inputString.replace(regex2, '\\\\n');\\n        //   console.log(cleanedString);\\n        content = content.replace(regex2, '\\\\n')\\n        //  content = (content + '\\\\n').replace(regex2, '\\\\n').trim();\\n        return content\\n    }\\n}\\n\\n\\n\\nexport default MetadataExtractor\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.153Z\"\n    },\n    \"../processors/mcp/McpClient.js\": {\n      \"content\": \"import logger from \\\"../../utils/Logger.js\\\"; // path will likely change\\nimport Processor from \\\"../base/Processor.js\\\"; // maybe more specific\\n\\n/**\\n * FileReader class that extends xxxxxProcessor.\\n * DESCRIPTION\\n * #### __*Input*__\\n * **message.INPUT**\\n * #### __*Output*__\\n * **message.OUTPUT**\\n */\\nclass McpClient extends Processor {\\n  /**\\n   * Constructs a new ProcessorExample instance.\\n   * @param {Object} config - The configuration object.\\n   */\\n  constructor(config) {\\n    super(config)\\n  }\\n\\n  /**\\n   * Does something with the message and emits a 'message' event with the processed message.\\n   * @param {Object} message - The message object.\\n   */\\n  async process(message) {\\n    logger.setLogLevel(\\\"debug\\\")\\n\\n    // processing goes here\\n    return this.emit(\\\"message\\\", message)\\n  }\\n}\\n\\nexport default McpClient\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.158Z\"\n    },\n    \"../processors/mcp/McpProcessorsFactory.js\": {\n      \"content\": \"import logger from \\\"../../utils/Logger.js\\\";\\nimport ns from \\\"../../utils/ns.js\\\";\\n\\nimport ProcessorTemplate from \\\"./McpClient.js\\\";\\n\\n// ref needed in transmissions/src/processors/base/AbstractProcessorFactory.js\\n\\nclass ProcessorsFactoryTemplate {\\n  static createProcessor(type, config) {\\n    if (type.equals(ns.trn.ProcessorTemplate)) {\\n      return new ProcessorTemplate(config);\\n    }\\n\\n    return false;\\n  }\\n}\\nexport default ProcessorsFactoryTemplate;\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.163Z\"\n    },\n    \"../processors/mcp/McpServer.js\": {\n      \"content\": \"import logger from \\\"../../utils/Logger.js\\\"; // path will likely change\\nimport Processor from \\\"../base/Processor.js\\\"; // maybe more specific\\n\\n/**\\n * FileReader class that extends xxxxxProcessor.\\n * DESCRIPTION\\n * #### __*Input*__\\n * **message.INPUT**\\n * #### __*Output*__\\n * **message.OUTPUT**\\n */\\nclass McpServer extends Processor {\\n  /**\\n   * Constructs a new ProcessorExample instance.\\n   * @param {Object} config - The configuration object.\\n   */\\n  constructor(config) {\\n    super(config)\\n  }\\n\\n  /**\\n   * Does something with the message and emits a 'message' event with the processed message.\\n   * @param {Object} message - The message object.\\n   */\\n  async process(message) {\\n    logger.setLogLevel(\\\"debug\\\")\\n\\n    // processing goes here\\n    return this.emit(\\\"message\\\", message)\\n  }\\n}\\n\\nexport default McpServer\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.169Z\"\n    },\n    \"../processors/packer/CommentStripper.js\": {\n      \"content\": \"import path from 'path';\\n\\nconst LANGUAGE_PATTERNS = {\\n    js: {\\n        single: '//',\\n        multi: { start: '/*', end: '*/' }\\n    },\\n    jsx: {\\n        single: '//',\\n        multi: { start: '/*', end: '*/' }\\n    },\\n    ts: {\\n        single: '//',\\n        multi: { start: '/*', end: '*/' }\\n    },\\n    tsx: {\\n        single: '//',\\n        multi: { start: '/*', end: '*/' }\\n    },\\n    py: {\\n        single: '#',\\n        multi: { start: '\\\"\\\"\\\"', end: '\\\"\\\"\\\"' }\\n    },\\n    java: {\\n        single: '//',\\n        multi: { start: '/*', end: '*/' }\\n    },\\n    cpp: {\\n        single: '//',\\n        multi: { start: '/*', end: '*/' }\\n    },\\n    c: {\\n        single: '//',\\n        multi: { start: '/*', end: '*/' }\\n    },\\n    h: {\\n        single: '//',\\n        multi: { start: '/*', end: '*/' }\\n    }\\n};\\n\\nexport function commentStripper(content, filepath) {\\n    const ext = path.extname(filepath).toLowerCase().slice(1);\\n    const patterns = LANGUAGE_PATTERNS[ext];\\n\\n    if (!patterns) {\\n        return content;\\n    }\\n\\n    let lines = content.split('\\\\n');\\n    let inMultiLineComment = false;\\n    let result = [];\\n\\n    for (let i = 0; i < lines.length; i++) {\\n        let line = lines[i].trim();\\n\\n        if (inMultiLineComment) {\\n            if (line.includes(patterns.multi.end)) {\\n                inMultiLineComment = false;\\n                line = line.split(patterns.multi.end)[1];\\n            } else {\\n                continue;\\n            }\\n        }\\n\\n        if (patterns.multi && line.includes(patterns.multi.start)) {\\n            const parts = line.split(patterns.multi.start);\\n            if (!parts[1].includes(patterns.multi.end)) {\\n                inMultiLineComment = true;\\n                line = parts[0];\\n            } else {\\n                line = parts[0] + parts[1].split(patterns.multi.end)[1];\\n            }\\n        }\\n\\n        if (patterns.single && line.startsWith(patterns.single)) {\\n            continue;\\n        }\\n\\n        if (patterns.single) {\\n            const commentIndex = line.indexOf(patterns.single);\\n            if (commentIndex >= 0) {\\n                line = line.substring(0, commentIndex).trim();\\n            }\\n        }\\n\\n        if (line.trim()) {\\n            result.push(line);\\n        }\\n    }\\n\\n    return result.join('\\\\n');\\n}\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.174Z\"\n    },\n    \"../processors/packer/FileContainer.js\": {\n      \"content\": \"import Processor from '../base/Processor.js';\\nimport logger from '../../utils/Logger.js';\\nimport ns from '../../utils/ns.js';\\nimport path from 'path';\\n\\nclass FileContainer extends Processor {\\n    constructor(config) {\\n        super(config);\\n        this.container = {\\n            files: {},\\n            summary: {\\n                totalFiles: 0,\\n                fileTypes: {},\\n                timestamp: new Date().toISOString()\\n            }\\n        };\\n    }\\n\\n    async process(message) {\\n        if (message.done) {\\n            message.content = JSON.stringify(this.container, null, 2);\\n            //   message.filepath = this.getPropertyFromMyConfig(ns.trn.destination);\\n            message.filepath = this.getProperty(ns.trn.destination);\\n            return this.emit('message', message);\\n        }\\n\\n        if (!message.filepath || !message.content) {\\n            logger.warn('FileContainer: Missing filepath or content');\\n            // this.emit('message', message);\\n            return\\n        }\\n\\n        // Store relative path from target directory\\n        const targetDir = message.targetPath || message.rootDir;\\n        const relativePath = path.relative(targetDir, message.filepath);\\n\\n        // Add file to container\\n        this.container.files[relativePath] = {\\n            content: message.content,\\n            type: path.extname(message.filepath),\\n            timestamp: new Date().toISOString()\\n        };\\n\\n        // Update summary\\n        this.container.summary.totalFiles++;\\n        const fileType = path.extname(message.filepath) || 'unknown';\\n        this.container.summary.fileTypes[fileType] = (this.container.summary.fileTypes[fileType] || 0) + 1;\\n\\n        return this.emit('message', message);\\n    }\\n}\\n\\nexport default FileContainer;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.179Z\"\n    },\n    \"../processors/packer/PackerProcessorsFactory.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js';\\nimport ns from '../../utils/ns.js';\\nimport FileContainer from './FileContainer.js';\\n\\nclass PackerProcessorsFactory {\\n    static createProcessor(type, config) {\\n        if (type.equals(ns.trn.FileContainer)) {\\n            logger.debug('PackerProcessorsFactory: Creating FileContainer processor');\\n            return new FileContainer(config);\\n        }\\n        return false;\\n    }\\n}\\n\\nexport default PackerProcessorsFactory;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.184Z\"\n    },\n    \"../processors/packer/comment-stripper.js\": {\n      \"content\": \"import path from 'path';\\n\\nconst LANGUAGE_PATTERNS = {\\n    js: {\\n        single: '//',\\n        multi: { start: '/*', end: '*/' }\\n    },\\n    jsx: {\\n        single: '//',\\n        multi: { start: '/*', end: '*/' }\\n    },\\n    ts: {\\n        single: '//',\\n        multi: { start: '/*', end: '*/' }\\n    },\\n    tsx: {\\n        single: '//',\\n        multi: { start: '/*', end: '*/' }\\n    },\\n    py: {\\n        single: '#',\\n        multi: { start: '\\\"\\\"\\\"', end: '\\\"\\\"\\\"' }\\n    },\\n    java: {\\n        single: '//',\\n        multi: { start: '/*', end: '*/' }\\n    },\\n    cpp: {\\n        single: '//',\\n        multi: { start: '/*', end: '*/' }\\n    },\\n    c: {\\n        single: '//',\\n        multi: { start: '/*', end: '*/' }\\n    },\\n    h: {\\n        single: '//',\\n        multi: { start: '/*', end: '*/' }\\n    }\\n};\\n\\nexport function commentStripper(content, filepath) {\\n    const ext = path.extname(filepath).toLowerCase().slice(1);\\n    const patterns = LANGUAGE_PATTERNS[ext];\\n\\n    if (!patterns) {\\n        return content;\\n    }\\n\\n    let lines = content.split('\\\\n');\\n    let inMultiLineComment = false;\\n    let result = [];\\n\\n    for (let i = 0; i < lines.length; i++) {\\n        let line = lines[i].trim();\\n\\n        if (inMultiLineComment) {\\n            if (line.includes(patterns.multi.end)) {\\n                inMultiLineComment = false;\\n                line = line.split(patterns.multi.end)[1];\\n            } else {\\n                continue;\\n            }\\n        }\\n\\n        if (patterns.multi && line.includes(patterns.multi.start)) {\\n            const parts = line.split(patterns.multi.start);\\n            if (!parts[1].includes(patterns.multi.end)) {\\n                inMultiLineComment = true;\\n                line = parts[0];\\n            } else {\\n                line = parts[0] + parts[1].split(patterns.multi.end)[1];\\n            }\\n        }\\n\\n        if (patterns.single && line.startsWith(patterns.single)) {\\n            continue;\\n        }\\n\\n        if (patterns.single) {\\n            const commentIndex = line.indexOf(patterns.single);\\n            if (commentIndex >= 0) {\\n                line = line.substring(0, commentIndex).trim();\\n            }\\n        }\\n\\n        if (line.trim()) {\\n            result.push(line);\\n        }\\n    }\\n\\n    return result.join('\\\\n');\\n}\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.188Z\"\n    },\n    \"../processors/packer/file-container.js\": {\n      \"content\": \"import Processor from '../base/Processor.js';\\nimport logger from '../../utils/Logger.js';\\nimport ns from '../../utils/ns.js';\\nimport path from 'path';\\n\\nclass FileContainer extends Processor {\\n    constructor(config) {\\n        super(config);\\n        this.container = {\\n            files: {},\\n            summary: {\\n                totalFiles: 0,\\n                fileTypes: {},\\n                timestamp: new Date().toISOString()\\n            }\\n        };\\n    }\\n\\n    async process(message) {\\n        if (message.done) {\\n            message.content = JSON.stringify(this.container, null, 2);\\n            message.filepath = this.getPropertyFromMyConfig(ns.trn.destination);\\n            return this.emit('message', message);\\n        }\\n\\n        if (!message.filepath || !message.content) {\\n            logger.warn('FileContainer: Missing filepath or content');\\n            return;\\n        }\\n\\n        // Get relative path from target dir\\n        const targetDir = message.targetPath || message.rootDir;\\n        const relativePath = path.relative(targetDir, message.filepath);\\n\\n        // Store file content and metadata\\n        this.container.files[relativePath] = {\\n            content: message.content,\\n            type: path.extname(message.filepath),\\n            timestamp: new Date().toISOString()\\n        };\\n\\n        // Update summary stats\\n        this.container.summary.totalFiles++;\\n        const fileType = path.extname(message.filepath) || 'unknown';\\n        this.container.summary.fileTypes[fileType] = (this.container.summary.fileTypes[fileType] || 0) + 1;\\n\\n        return this.emit('message', message);\\n    }\\n}\\n\\nexport default FileContainer;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.194Z\"\n    },\n    \"../processors/packer/packer-factory.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js';\\nimport ns from '../../utils/ns.js';\\nimport FileContainer from './FileContainer.js';\\n\\nclass PackerProcessorsFactory {\\n    static createProcessor(type, config) {\\n        if (type.equals(ns.trn.FileContainer)) {\\n            logger.debug('PackerProcessorsFactory: Creating FileContainer processor');\\n            return new FileContainer(config);\\n        }\\n        return false;\\n    }\\n}\\n\\nexport default PackerProcessorsFactory;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.198Z\"\n    },\n    \"../processors/postcraft/AtomFeedPrep.js\": {\n      \"content\": \"import fs from 'fs/promises';\\nimport path from 'path';\\nimport Processor from '../base/Processor.js';\\nimport logger from '../../utils/Logger.js';\\n\\nclass AtomFeedPrep extends Processor {\\n    constructor(config) {\\n        super(config);\\n    }\\n\\n    async process(message) {\\n        //  logger.setLogLevel('debug')\\n        const entries = message.slugs || [];\\n        const siteUrl = message.site?.url || 'https://danny.ayers.name';\\n\\n        if (message.targetPath) {\\n            message.templateFilename = path.join(message.targetPath, message.atomFeed.templateFilename)\\n        } else {\\n            message.templateFilename = path.join(message.rootDir, message.atomFeed.templateFilename)\\n        }\\n\\n        const feed = {\\n            title: message.site?.title || \\\"Danny Ayers' Blog\\\",\\n            subtitle: message.site?.subtitle || '',\\n            updated: new Date().toISOString(),\\n            id: siteUrl,\\n            link: siteUrl,\\n            author: {\\n                name: \\\"Danny Ayers\\\",\\n                email: \\\"danny.ayers@gmail.com\\\"\\n            },\\n            entries: []\\n        };\\n\\n        // Get same number of entries as front page\\n        const entryCount = Math.min(5, entries.length);\\n        const rangeStart = entries.length - entryCount;\\n        const rangeEnd = entries.length - 1;\\n\\n        for (let i = rangeEnd; i >= rangeStart; i--) {\\n            const slug = entries[i];\\n            if (slug) {\\n                let filePath;\\n                if (message.targetPath) {\\n                    filePath = path.join(message.targetPath, message.entryContentMeta.targetDir, slug + '.html');\\n                } else {\\n                    filePath = path.join(message.rootDir, message.entryContentMeta.targetDir, slug + '.html');\\n                }\\n\\n                const entry = {\\n                    title: `Entry ${slug}`, // TODO: Extract real title\\n                    id: `${siteUrl}/entries/${slug}.html`,\\n                    link: `${siteUrl}/entries/${slug}.html`,\\n                    updated: message.contentBlocks?.updated || new Date().toISOString(),\\n                    content: await this.getEntryContent(filePath)\\n                };\\n\\n                feed.entries.push(entry);\\n            }\\n        }\\n\\n        message.contentBlocks = feed;\\n        message.filepath = path.join(message.targetPath || message.rootDir, 'public/home/atom.xml');\\n\\n        return this.emit('message', message);\\n    }\\n\\n    async getEntryContent(filePath) {\\n        try {\\n            return await fs.readFile(filePath, 'utf8');\\n        } catch (error) {\\n            logger.error(`Error reading entry file ${filePath}: ${error}`);\\n            return '';\\n        }\\n    }\\n}\\n\\nexport default AtomFeedPrep;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.202Z\"\n    },\n    \"../processors/postcraft/EntryContentToPagePrep.js\": {\n      \"content\": \"import path from 'path'\\nimport ns from '../../utils/ns.js'\\nimport rdf from 'rdf-ext'\\nimport grapoi from 'grapoi'\\n\\nimport footpath from '../../utils/footpath.js'\\nimport logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass EntryContentToPagePrep extends Processor {\\n\\n  constructor(config) {\\n    super(config)\\n  }\\n\\n  async process(message) {\\n    if (message.done) {\\n      return this.emit('message', message)\\n      return\\n    }\\n    logger.setLogLevel('debug')\\n\\n    // logger.reveal(message)\\n\\n    /*\\n        if (message.targetPath) {\\n          message.templateFilename = path.join(message.targetPath, message.entryContentToPage.templateFilename)\\n        } else {\\n          message.templateFilename = path.join(message.rootDir, message.entryContentToPage.templateFilename)\\n        }\\n\\n        logger.log(\\\"################ message.templateFilename = \\\" + message.templateFilename)\\n\\n        message.template = false // ???????????\\n    */\\n    message.contentBlocks.content = message.content\\n    //logger.reveal(message)\\n\\n    /*\\n    if (path.isAbsolute(message.targetDir)) {\\n      message.filepath = path.join(message.targetDir, message.slug + '.html')\\n    } else {\\n      if (message.targetPath) {\\n        message.filepath = path.join(message.targetPath, message.targetDir, message.slug + '.html')\\n      } else {\\n        message.filepath = path.join(message.rootDir, message.targetDir, message.slug + '.html')\\n      }\\n    }\\n      */\\n    message.filepath = path.join(message.contentGroup.PostPages.targetDir, message.slug + '.html')\\n    logger.debug('EntryContentToPagePrep, message.filepath = ' + message.filepath)\\n\\n    this.emit('message', message)\\n  }\\n\\n}\\n\\nexport default EntryContentToPagePrep\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.205Z\"\n    },\n    \"../processors/postcraft/FrontPagePrep.js\": {\n      \"content\": \"// src/processors/postcraft/FrontPagePrep.js\\n\\nimport path from 'path'\\nimport { readFile } from 'node:fs/promises'\\n\\nimport logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\n\\nclass FrontPagePrep extends Processor {\\n  constructor(config) {\\n    super(config)\\n  }\\n\\n\\n  async process(message) {\\n    logger.setLogLevel('debug')\\n    //   logger.reveal(message)\\n    /*\\n    if (message.targetPath) {\\n      message.templateFilename = path.join(message.targetPath, message.indexPage.templateFilename)\\n    } else {\\n      message.templateFilename = path.join(message.rootDir, message.indexPage.templateFilename)\\n    }\\n\\n    logger.debug('FrontPagePrep, Template = ' + message.templateFilename)\\n*/\\n\\n    const rawEntryPaths = this.resolveRawEntryPaths(message)\\n    message.content = ''\\n\\n    // TODO tidy up //\\n    const entryCount = Math.min(5, rawEntryPaths.length) // Limit to 5 entries or less\\n    logger.debug('FrontPagePrep, entryCount = ' + entryCount)\\n\\n    const rangeStart = rawEntryPaths.length - entryCount\\n    const rangeEnd = rawEntryPaths.length - 1\\n    //     for (let i = 0; i < entryCount; i++) {\\n    for (let i = rangeEnd; i >= rangeStart; i--) {\\n      logger.debug('FrontPagePrep, i = ' + entryCount)\\n      const rawEntryPath = rawEntryPaths[i]\\n      if (rawEntryPath) {\\n        message.content += await readFile(rawEntryPath, 'utf8')\\n      } else {\\n        logger.warn(`Skipping undefined entry path at index ${i}`)\\n      }\\n    }\\n\\n    message.contentBlocks.content = message.content\\n\\n    if (message.targetPath) {\\n      message.filepath = path.join(message.targetPath, message.indexPage.filepath)\\n    } else {\\n      message.filepath = path.join(message.rootDir, message.indexPage.filepath)\\n    }\\n    return this.emit('message', message)\\n\\n  }\\n\\n  //\\n  resolveRawEntryPaths(message) {\\n    const paths = []\\n    const slugs = message.slugs || []\\n    const entryCount = slugs.length\\n\\n    for (let i = 0; i < entryCount; i++) {\\n      const slug = slugs[i]\\n      if (slug) {\\n        //   const path = message.rootDir + '/' + message.entryContentMeta.targetDir + '/' + slug + '.html'\\n        let filePath\\n        /*\\n        if (message.targetPath) {\\n          filePath = path.join(message.targetPath, message.entryContentMeta.targetDir, slug + '.html')\\n        } else {\\n          filePath = path.join(message.rootDir, message.entryContentMeta.targetDir, slug + '.html')\\n        }\\n          */\\n        filePath = path.join(message.targetPath, slug + '.html')\\n        paths.push(filePath)\\n      }\\n    }\\n\\n    return paths\\n  }\\n}\\n\\nexport default FrontPagePrep\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.208Z\"\n    },\n    \"../processors/postcraft/PostcraftDispatcher.js\": {\n      \"content\": \"//// UNUSED\\n\\nimport ns from '../../utils/ns.js'\\nimport rdf from 'rdf-ext'\\nimport grapoi from 'grapoi'\\n\\nimport footpath from '../../utils/footpath.js'\\nimport logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\n/**\\n * A class that represents the PostcraftDispatcher processor.\\n* #### __*Input*__\\n* **data** : any\\n* **message** : needs dataset\\n* #### __*Output*__\\n* **data** : templateFilename\\n* **message** : adds sourceDir, targetDir, templateFilename\\n* @extends Processor\\n*/\\nclass PostcraftDispatcher extends Processor {\\n\\n  /**\\n   * Creates an instance of PostcraftDispatcher.\\n   * @param {Object} config - The configuration object.\\n   */\\n  constructor(config) {\\n    super(config)\\n  }\\n\\n  /**\\n   * Executes the PostcraftDispatcher processor.\\n   * @param {Object} data - The data object.\\n   * @param {Object} message - The message object.\\n   */\\n  async process(message) {\\n    //  logger.setLogLevel('debug')\\n    const postcraftConfig = message.dataset\\n    message.template = data.toString()\\n    logger.debug('PostcraftDispatcherPostcraftDispatcherPostcraftDispatcher ' + data)\\n    process.exit(0)\\n    const poi = grapoi({ dataset: postcraftConfig })\\n\\n    for (const q of poi.out(ns.rdf.type).quads()) {\\n      if (q.object.equals(ns.trn.ContentGroup)) {\\n        await this.processContentGroup(message, q.subject)\\n      }\\n    }\\n  }\\n\\n  /**\\n   * Processes a content group.\\n   * @param {Object} message - The message object.\\n   * @param {string} contentGroupID - The ID of the content group.\\n   */\\n  async processContentGroup(message, contentGroupID) {\\n    const postcraftConfig = message.dataset\\n    const groupPoi = rdf.grapoi({ dataset: postcraftConfig, term: contentGroupID })\\n    const sourceDir = groupPoi.out(ns.trn.sourceDirectory).term.value\\n    const targetDir = groupPoi.out(ns.trn.targetDirectory).term.value\\n    const templateFilename = groupPoi.out(ns.trn.template).term.value\\n\\n    // logger.log('sourceDir = ' + sourceDir)\\n    // logger.log('targetDir = ' + targetDir)\\n    // logger.log('templateFilename  = ' + templateFilename)\\n\\n    message.sourceDir = sourceDir\\n    message.targetDir = targetDir\\n    message.templateFilename = templateFilename\\n    message.loadContext = 'template'\\n\\n    return this.emit('message', sourceDir, message)\\n  }\\n}\\n\\nexport default PostcraftDispatcher\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.212Z\"\n    },\n    \"../processors/postcraft/PostcraftPrep.js\": {\n      \"content\": \"import path from 'path'\\nimport logger from '../../utils/Logger.js'\\n\\nimport Processor from '../base/Processor.js'\\n\\nclass PostcraftPrep extends Processor {\\n\\n  constructor(config) {\\n    super(config)\\n  }\\n\\n  async process(message) {\\n    logger.setLogLevel(\\\"debug\\\")\\n\\n    if (message.done) {\\n      return this.emit('message', message)\\n    }\\n    message.slug = this.extractSlug(message)\\n    message.targetFilename = this.extractTargetFilename(message)\\n    message.contentBlocks = {}\\n    message.contentBlocks.relURL = this.extractRelURL(message)\\n\\n    // TODO generalise - use path.join\\n    message.contentBlocks.link = 'entries/' + message.contentBlocks.relURL\\n\\n    message.contentBlocks.title = this.extractTitle(message)\\n\\n    const { created, updated } = this.extractDates(message)\\n    message.contentBlocks.created = created\\n    message.contentBlocks.updated = updated\\n\\n    return this.emit('message', message)\\n  }\\n\\n  // TODO lots of tidying up\\n  extractSlug(message) { // TODO move this into a utils file - is also in DirWalker\\n\\n    var slug = message.filename\\n    // logger.reveal(message)\\n    if (slug.includes('.')) {\\n      slug = slug.substr(0, slug.lastIndexOf(\\\".\\\"))\\n    }\\n    return slug\\n  }\\n\\n  extractTargetFilename(message) {\\n\\n\\n    /*\\n    if (message.targetPath) {\\n      return path.join(message.targetPath, message.entryContentMeta.targetDir, this.extractSlug(message) + '.html')\\n    } else {\\n      return path.join(message.rootDir, message.entryContentMeta.targetDir, this.extractSlug(message) + '.html')\\n    }\\n*/\\n    logger.reveal(message)\\n\\n    /*\\n    if (message.targetPath) {\\n      return path.join(message.targetPath, message.targetDir, this.extractSlug(message) + '.html')\\n    } else {\\n      return path.join(message.rootDir, message.targetDir, this.extractSlug(message) + '.html')\\n    }\\n      */\\n    return path.join(message.contentGroup.PostPages.targetDir, this.extractSlug(message) + '.html')\\n  }\\n\\n  extractRelURL(message) { // TODO refactor\\n    return this.extractSlug(message) + '.html'\\n  }\\n\\n  extractDates(message) {\\n    const today = (new Date()).toISOString().split('T')[0]\\n    const dates = { created: today, updated: today }\\n\\n    //  eg. 2024-04-19_hello-postcraft.md\\n    const nonExt = message.filename.split('.').slice(0, -1).join()\\n    const shreds = nonExt.split('_')\\n    if (Date.parse(shreds[0])) { // filename version is not NaN\\n      dates.created = shreds[0]\\n    }\\n    return dates\\n  }\\n\\n  // first heading in the markdown\\n  // or formatted from filename\\n  // or raw filename\\n  extractTitle(message) {\\n    let title = 'Title'\\n    let match = message.content.toString().match(/^#(.*)$/m)\\n    let contentTitle = match ? match[1].trim() : null\\n    if (contentTitle) {\\n      title = contentTitle.replaceAll('#', '') // TODO make nicer\\n      return title\\n    }\\n\\n    // derive from filename\\n    // eg. 2024-04-19_hello-postcraft.md\\n    try {\\n      const nonExt = message.filename.split('.').slice(0, -1).join()\\n      const shreds = nonExt.split('_')\\n\\n      // let title = shreds[1] // fallback, get it from filename\\n      title = shreds[1].split('-') // split the string into words\\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1)) // capitalize the first letter of each word\\n        .join(' ') // join the words back together with spaces\\n    } catch (err) {\\n      title = message.filename\\n    }\\n    return title\\n  }\\n}\\n\\nexport default PostcraftPrep\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.216Z\"\n    },\n    \"../processors/postcraft/PostcraftProcessorsFactory.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport ns from '../../utils/ns.js'\\n\\n\\nimport PostcraftDispatcher from './PostcraftDispatcher.js'\\nimport PostcraftPrep from './PostcraftPrep.js'\\nimport EntryContentToPagePrep from './EntryContentToPagePrep.js'\\nimport FrontPagePrep from './FrontPagePrep.js'\\nimport AtomFeedPrep from './AtomFeedPrep.js'\\n\\nclass PostcraftProcessorsFactory {\\n    static createProcessor(type, config) {\\n        if (type.equals(ns.trn.PostcraftDispatcher)) {\\n            return new PostcraftDispatcher(config)\\n        }\\n        if (type.equals(ns.trn.PostcraftPrep)) {\\n            return new PostcraftPrep(config)\\n        }\\n        if (type.equals(ns.trn.EntryContentToPagePrep)) {\\n            return new EntryContentToPagePrep(config)\\n        }\\n        if (type.equals(ns.trn.FrontPagePrep)) {\\n            return new FrontPagePrep(config)\\n        }\\n        if (type.equals(ns.trn.AtomFeedPrep)) {\\n            return new AtomFeedPrep(config)\\n        }\\n        return false\\n    }\\n}\\n\\nexport default PostcraftProcessorsFactory\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.220Z\"\n    },\n    \"../processors/protocols/HttpGet.js\": {\n      \"content\": \"// src/processors/http/HttpGet.js\\n/**\\n * @class HttpGet\\n * @extends Processor\\n * @classdesc\\n * **A Transmissions Processor**\\n *\\n * Retrieves content from HTTP URLs using GET requests.\\n *\\n * ### Processor Signature\\n *\\n * #### ***Input***\\n * ***`url`** - The HTTP URL to fetch content from\\n * ***`message`** - A message object that will be enriched with response data\\n *\\n * #### ***Output***\\n * ***`message`** - Original message with added sourceURL property\\n * ***`content`** - The retrieved content from the URL\\n *\\n * #### ***Behavior***\\n * * Fetches content from specified HTTP URL\\n * * Adds source URL to message object\\n * * Handles special '~~done~~' URL marker\\n * * Emits retrieved content along with enriched message\\n * * Logs detailed debug information during operation\\n */\\n\\nimport axios from 'axios'\\nimport grapoi from 'grapoi'\\nimport ns from '../../utils/ns.js'\\n\\nimport footpath from '../../utils/footpath.js'\\nimport logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass HttpGet extends Processor {\\n    constructor(config) {\\n        super(config)\\n    }\\n\\n    /**\\n     * Processes an HTTP GET request for the given URL\\n     * @param {string} url - Target URL to fetch\\n     * @param {Object} message - Message object to enrich with response data\\n     * @emits message - Emits retrieved content and enriched message\\n     */\\n    async process(url, message) {\\n        //   logger.setLogLevel('debug')\\n        logger.debug('HttpGet, url = ' + url)\\n        if (url === '~~done~~') {\\n            logger.log('HG DONE*****************')\\n            return this.emit('message', url, message)\\n            return\\n        }\\n        try {\\n            logger.log('HG GETTING*****************')\\n            const response = await axios.get(url)\\n            const content = response.data\\n\\n            message.sourceURL = url\\n            return this.emit('message', content, message)\\n        } catch (error) {\\n            logger.error(\\\"HttpGet.execute error\\\\n\\\" + error)\\n        }\\n    }\\n}\\n\\nexport default HttpGet\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.224Z\"\n    },\n    \"../processors/protocols/ProtocolsProcessorsFactory.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport ns from '../../utils/ns.js'\\n\\n\\nimport HttpGet from './HttpGet.js'\\n\\n\\n\\nclass ProtocolsProcessorsFactory {\\n    static createProcessor(type, config) {\\n        if (type.equals(ns.trn.HttpGet)) {\\n            return new HttpGet(config)\\n        }\\n\\n        return false\\n    }\\n}\\n\\nexport default ProtocolsProcessorsFactory\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.228Z\"\n    },\n    \"../processors/rdf/ConfigMap copy.js\": {\n      \"content\": \"import rdf from 'rdf-ext'\\nimport grapoi from 'grapoi'\\nimport path from 'path'\\nimport ns from '../../utils/ns.js'\\nimport logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass ConfigMap extends Processor {\\n  constructor(config) {\\n    super(config)\\n  }\\n\\n  async process(message) {\\n    // logger.setLogLevel('debug')\\n    if (!message.dataset) {\\n      logger.warn('No dataset provided')\\n      return this.emit('message', message)\\n    }\\n\\n    const basePath = message.targetPath || message.rootDir\\n    logger.debug(`ConfigMap using base path: ${basePath}`)\\n\\n    const dataset = message.dataset\\n    const poi = grapoi({ dataset })\\n\\n    // Find ContentGroup instances\\n    for (const quad of poi.out(ns.rdf.type, ns.trn.ContentGroup).quads()) {\\n      const groupID = quad.subject\\n\\n      let groupName = ns.getShortname(groupID.value)\\n      //   let type = ns.getShortname(processorType.value)\\n      logger.debug(`*** groupName = ${groupName} `)\\n      // *** groupID.value = http://hyperdata.it/transmissions/AtomFeed\\n\\n      const groupPoi = grapoi({ dataset, term: groupID })\\n\\n      if (!message.contentGroup) message.contentGroup = {}\\n      // Extract paths\\n      if (groupPoi.out(ns.trn.sourceDirectory).term) {\\n        let sourceDir = this.resolvePath(\\n          basePath,\\n          groupPoi.out(ns.trn.sourceDirectory).term.value)\\n\\n        if (!message.contentGroup[groupName]) message.contentGroup[groupName] = {}\\n        message.contentGroup[groupName].sourceDir = sourceDir\\n      }\\n\\n      if (groupPoi.out(ns.trn.targetDirectory).term) {\\n        let targetDir = this.resolvePath(\\n          basePath,\\n          groupPoi.out(ns.trn.targetDirectory).term.value\\n        )\\n        if (!message.contentGroup[groupName]) message.contentGroup[groupName] = {}\\n        message.contentGroup[groupName].targetDir = targetDir\\n      }\\n\\n      if (groupPoi.out(ns.trn.template).term) {\\n        let templateFile = this.resolvePath(\\n          basePath,\\n          groupPoi.out(ns.trn.template).term.value\\n        )\\n        if (!message.contentGroup[groupName]) message.contentGroup[groupName] = {}\\n        message.contentGroup[groupName].templateFile = templateFile\\n      }\\n\\n      /*\\nlogger.debug(`Resolved :\\n  groupName: ${groupName}\\n  sourceDir: ${sourceDir}\\n  targetDir: ${targetDir}\\n  templateFile: ${templateFile}`)\\n\\n\\nmessage.contentGroup[groupName] =\\n{ \\\"sourceDir\\\": sourceDir, \\\"targetDir\\\": targetDir, \\\"templateFile\\\": templateFile }\\n*/\\n      //  logger.reveal(message)\\n    }\\n    // process.exit()\\n\\n    return this.emit('message', message)\\n  }\\n\\n  resolvePath(basePath, relativePath) {\\n    if (!basePath || !relativePath) {\\n      throw new Error('Base path and relative path required')\\n    }\\n\\n    const resolved = path.isAbsolute(relativePath)\\n      ? relativePath\\n      : path.join(basePath, relativePath)\\n\\n    return path.normalize(resolved)\\n  }\\n}\\n\\nexport default ConfigMap\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.232Z\"\n    },\n    \"../processors/rdf/ConfigMap.js\": {\n      \"content\": \"import rdf from 'rdf-ext'\\nimport grapoi from 'grapoi'\\nimport path from 'path'\\nimport ns from '../../utils/ns.js'\\nimport logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass ConfigMap extends Processor {\\n  constructor(config) {\\n    super(config)\\n  }\\n\\n  async process(message) {\\n    // logger.setLogLevel('debug')\\n\\n    /*\\n     if (!message.dataset) {\\n       logger.warn('No dataset provided')\\n       return this.emit('message', message)\\n     }\\n */\\n    logger.debug(`ConfigMap.process`)\\n    this.showMyConfig()\\n\\n    const basePath = message.targetPath || message.rootDir\\n    logger.debug(`ConfigMap using base path: ${basePath}`)\\n\\n    const dataset = message.dataset\\n    const poi = grapoi({ dataset })\\n\\n    // Find ConfigSet instances\\n    for (const quad of poi.out(ns.rdf.type, ns.trn.ConfigSet).quads()) {\\n      const groupID = quad.subject\\n\\n      let groupName = ns.getShortname(groupID.value)\\n      //   let type = ns.getShortname(processorType.value)\\n      logger.debug(`*** groupName = ${groupName} `)\\n      // *** groupID.value = http://hyperdata.it/transmissions/AtomFeed\\n\\n      const groupPoi = grapoi({ dataset, term: groupID })\\n\\n      if (!message.contentGroup) message.contentGroup = {}\\n      // Extract paths\\n      if (groupPoi.out(ns.trn.sourceDirectory).term) {\\n        let sourceDir = this.resolvePath(\\n          basePath,\\n          groupPoi.out(ns.trn.sourceDirectory).term.value)\\n\\n        if (!message.contentGroup[groupName]) message.contentGroup[groupName] = {}\\n        message.contentGroup[groupName].sourceDir = sourceDir\\n      }\\n\\n      if (groupPoi.out(ns.trn.targetDirectory).term) {\\n        let targetDir = this.resolvePath(\\n          basePath,\\n          groupPoi.out(ns.trn.targetDirectory).term.value\\n        )\\n        if (!message.contentGroup[groupName]) message.contentGroup[groupName] = {}\\n        message.contentGroup[groupName].targetDir = targetDir\\n      }\\n\\n      if (groupPoi.out(ns.trn.template).term) {\\n        let templateFile = this.resolvePath(\\n          basePath,\\n          groupPoi.out(ns.trn.template).term.value\\n        )\\n        if (!message.contentGroup[groupName]) message.contentGroup[groupName] = {}\\n        message.contentGroup[groupName].templateFile = templateFile\\n      }\\n\\n      /*\\nlogger.debug(`Resolved :\\n  groupName: ${groupName}\\n  sourceDir: ${sourceDir}\\n  targetDir: ${targetDir}\\n  templateFile: ${templateFile}`)\\n\\n\\nmessage.contentGroup[groupName] =\\n{ \\\"sourceDir\\\": sourceDir, \\\"targetDir\\\": targetDir, \\\"templateFile\\\": templateFile }\\n*/\\n      //  logger.reveal(message)\\n    }\\n    // process.exit()\\n\\n    return this.emit('message', message)\\n  }\\n\\n  resolvePath(basePath, relativePath) {\\n    if (!basePath || !relativePath) {\\n      throw new Error('Base path and relative path required')\\n    }\\n\\n    const resolved = path.isAbsolute(relativePath)\\n      ? relativePath\\n      : path.join(basePath, relativePath)\\n\\n    return path.normalize(resolved)\\n  }\\n}\\n\\nexport default ConfigMap\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.237Z\"\n    },\n    \"../processors/rdf/DatasetReader copy.js\": {\n      \"content\": \"// src/processors/rdf/DatasetReader.js\\n/**\\n * @class DatasetReader\\n * @extends Processor\\n * @classdesc\\n * **a Transmissions Processor**\\n * \\n * Reads a Turtle file and adds it to the message as an RDF dataset.\\n * \\n * #### __*Input*__\\n * * **`message.rootDir`** - Root directory containing `manifest.ttl`\\n * \\n * #### __*Output*__\\n * * **`message.rootDir`** - Unchanged\\n * * **`message.dataset`** - RDF dataset created from `manifest.ttl`\\n * \\n * #### __*Behavior*__\\n * * Reads the manifest.ttl file from the rootDir\\n * * Creates an RDF dataset from the Turtle file\\n * * Adds the dataset to the message object\\n * \\n * #### __Tests__\\n * * TODO: Add test information\\n */\\n\\nimport path from 'path'\\nimport rdf from 'rdf-ext'\\nimport { fromFile } from 'rdf-utils-fs'\\nimport Processor from '../base/Processor.js'\\nimport logger from '../../utils/Logger.js'\\n\\nclass DatasetReader extends Processor {\\n    constructor(config) {\\n        super(config)\\n    }\\n\\n    /**\\n     * @returns {string[]} Array of input keys\\n     * @todo Implement properly\\n     */\\n    getInputKeys() { // what were these for!?\\n        return ['sdfsdf']\\n    }\\n\\n    /**\\n     * @returns {string[]} Array of output keys\\n     * @todo Implement properly\\n     */\\n    getOutputKeys() {\\n        return ['sdfsdfsdfdataset']\\n    }\\n\\n    /**\\n     * Executes the DatasetReader processor\\n     * @param {Object} message - The message object\\n     */\\n    async process(message) {\\n        this.preProcess(message) ////// TODO manifest loading has been moved to ApplicationManager\\n\\n        /// TODO make this more useful!!!\\n        var datasetName = 'dataset'\\n        var datasetFilename = path.join(message.rootDir, '/manifest.ttl') // TODO move to system config\\n        if (message.datasetFilename) {\\n            datasetFilename = message.datasetFilename\\n        }\\n        if (message.datasetName) {\\n            datasetName = message.datasetName\\n        }\\n        /////\\n\\n        const stream = fromFile(datasetFilename)\\n\\n        message[datasetName] = await rdf.dataset().import(stream)\\n        logger.debug(`DatasetReader, datasetName = ${datasetName}`)\\n        //   logger.debug(`DatasetReader, message[datasetName] = ${message[datasetName]}`)\\n        return this.emit('message', message)\\n    }\\n}\\n\\nexport default DatasetReader\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.242Z\"\n    },\n    \"../processors/rdf/DatasetReader.js\": {\n      \"content\": \"import path from 'path';\\nimport rdf from 'rdf-ext';\\nimport { fromFile } from 'rdf-utils-fs';\\nimport ns from '../../utils/ns.js';\\nimport logger from '../../utils/Logger.js';\\nimport Processor from '../base/Processor.js';\\n\\nclass DatasetReader extends Processor {\\n    constructor(config) {\\n        super(config);\\n    }\\n\\n    async process(message) {\\n        try {\\n            const datasetFile = this.getPropertyFromMyConfig(ns.trn.datasetFile);\\n            const datasetPath = path.join(message.rootDir, datasetFile);\\n\\n            logger.debug(`Reading dataset from ${datasetPath}`);\\n            const stream = fromFile(datasetPath);\\n            message.dataset = await rdf.dataset().import(stream);\\n\\n            if (message.dataset.size === 0) {\\n                logger.warn('Empty dataset loaded');\\n            } else {\\n                logger.debug(`Loaded dataset with ${message.dataset.size} quads`);\\n            }\\n\\n            return this.emit('message', message);\\n        } catch (err) {\\n            logger.error('Failed to read dataset:', err);\\n            throw err;\\n        }\\n    }\\n}\\n\\nexport default DatasetReader;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.248Z\"\n    },\n    \"../processors/rdf/RDFConfig.js\": {\n      \"content\": \"import rdf from 'rdf-ext'\\nimport grapoi from 'grapoi'\\nimport ns from '../../utils/ns.js'\\nimport logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass RDFConfig extends Processor {\\n  constructor(config) {\\n    super(config)\\n    this.configMap = new Map()\\n  }\\n\\n  async process(message) {\\n    if (!message.dataset) {\\n      throw new Error('No RDF dataset provided')\\n    }\\n\\n    const dataset = message.dataset\\n    const poi = grapoi({ dataset })\\n\\n    // Find all ConfigGroup instances\\n    for (const configGroup of poi.out(ns.rdf.type, ns.trn.ConfigGroup).terms) {\\n      const groupPoi = grapoi({ dataset, term: configGroup })\\n\\n      // Extract property mappings\\n      const mappings = {}\\n      for (const quad of groupPoi.quads()) {\\n        if (!quad.predicate.equals(ns.rdf.type)) {\\n          mappings[quad.predicate.value] = this.resolveValue(quad.object)\\n        }\\n      }\\n\\n      this.configMap.set(configGroup.value, mappings)\\n      message.configMap = this.configMap\\n    }\\n\\n    // Apply configuration patterns\\n    if (message.configPatterns) {\\n      for (const pattern of message.configPatterns) {\\n        const config = this.configMap.get(pattern)\\n        if (config) {\\n          Object.assign(message, config)\\n        }\\n      }\\n    }\\n\\n    return this.emit('message', message)\\n  }\\n\\n  resolveValue(term) {\\n    // Handle different RDF term types\\n    if (term.termType === 'NamedNode') {\\n      return term.value\\n    } else if (term.termType === 'Literal') {\\n      const value = term.value\\n      // Convert numeric literals\\n      return isNaN(value) ? value : Number(value)\\n    }\\n    return term.value\\n  }\\n\\n  getConfig(groupId) {\\n    return this.configMap.get(groupId)\\n  }\\n}\\n\\nexport default RDFConfig\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.253Z\"\n    },\n    \"../processors/rdf/RDFProcessorsFactory.js\": {\n      \"content\": \"import ns from '../../utils/ns.js'\\nimport DatasetReader from './DatasetReader.js'\\nimport ConfigMap from './ConfigMap.js'\\nimport RDFConfig from './RDFConfig.js'\\n\\nclass RDFProcessorsFactory {\\n    static createProcessor(type, config) {\\n        if (type.equals(ns.trn.DatasetReader)) {\\n            return new DatasetReader(config)\\n        }\\n        if (type.equals(ns.trn.ConfigMap)) {\\n            return new ConfigMap(config)\\n        }\\n        if (type.equals(ns.trn.RDFConfig)) {\\n            return new RDFConfig(config)\\n        }\\n        return false\\n    }\\n}\\n\\nexport default RDFProcessorsFactory\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.258Z\"\n    },\n    \"../processors/sparql/SPARQLProcessorsFactory.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport ns from '../../utils/ns.js'\\n\\nimport SPARQLSelect from './SPARQLSelect.js'\\nimport SPARQLUpdate from './SPARQLUpdate.js'\\n\\n/**\\n * @class SPARQLProcessorsFactory\\n * @classdesc\\n * **Factory for SPARQL Processors**\\n *\\n * Creates instances of SPARQL query and update processors.\\n *\\n */\\nclass SPARQLProcessorsFactory {\\n\\n    static createProcessor(type, config) {\\n\\n        if (type.equals(ns.trn.SPARQLSelect)) {\\n            return new SPARQLSelect(config)\\n        }\\n        if (type.equals(ns.trn.SPARQLUpdate)) {\\n            return new SPARQLUpdate(config)\\n        }\\n\\n        return false\\n    }\\n}\\nexport default SPARQLProcessorsFactory\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.264Z\"\n    },\n    \"../processors/sparql/SPARQLSelect.js\": {\n      \"content\": \"import axios from 'axios';\\nimport nunjucks from 'nunjucks';\\nimport logger from '../../utils/Logger.js';\\nimport Processor from '../base/Processor.js';\\nimport ns from '../../utils/ns.js';\\nimport SessionEnvironment from './SessionEnvironment.js';\\n\\nclass SPARQLSelect extends Processor {\\n    constructor(config) {\\n        super(config);\\n        this.env = new SessionEnvironment(this);\\n    }\\n\\n    async process(message) {\\n        if (!this.env.endpoints) {\\n            await this.env.loadEndpoints(message.rootDir);\\n        }\\n\\n        const endpoint = this.env.getQueryEndpoint();\\n        const template = await this.env.getTemplate(\\n            message.rootDir,\\n            this.getProperty(ns.trn.templateFilename)\\n        );\\n\\n        const queryData = {\\n            startDate: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\\n            ...message\\n        };\\n\\n        const query = nunjucks.renderString(template, queryData);\\n\\n        try {\\n            const response = await axios.post(endpoint.url, query, {\\n                headers: {\\n                    'Content-Type': 'application/sparql-query',\\n                    'Accept': 'application/json',\\n                    'Authorization': this.env.getBasicAuthHeader(endpoint)\\n                }\\n            });\\n\\n            message.queryResults = response.data;\\n            return this.emit('message', message);\\n        } catch (error) {\\n            logger.error('SPARQL query error:', error);\\n            throw error;\\n        }\\n    }\\n}\\n\\nexport default SPARQLSelect;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.269Z\"\n    },\n    \"../processors/sparql/SPARQLUpdate.js\": {\n      \"content\": \"import axios from 'axios';\\nimport nunjucks from 'nunjucks';\\nimport crypto from 'crypto';\\nimport logger from '../../utils/Logger.js';\\nimport Processor from '../base/Processor.js';\\nimport ns from '../../utils/ns.js';\\nimport SessionEnvironment from './SessionEnvironment.js';\\n\\nclass SPARQLUpdate extends Processor {\\n    constructor(config) {\\n        super(config);\\n        this.env = new SessionEnvironment(this);\\n    }\\n\\n    async process(message) {\\n        if (!this.env.endpoints) {\\n            await this.env.loadEndpoints(message.rootDir);\\n        }\\n\\n        const endpoint = this.env.getUpdateEndpoint();\\n        const template = await this.env.getTemplate(\\n            message.rootDir,\\n            this.getProperty(ns.trn.templateFilename)\\n        );\\n\\n        const now = new Date().toISOString();\\n        const updateData = {\\n            id: crypto.randomUUID(),\\n            title: message.meta?.title || 'Untitled Post',\\n            content: message.content,\\n            published: now,\\n            modified: now,\\n            author: { // default to me!!\\n                name: 'Danny',\\n                email: 'danny.ayers@gmail.com',\\n                url: 'https://danny.ayers.name'\\n            },\\n            ...message\\n        };\\n\\n        const update = nunjucks.renderString(template, updateData);\\n\\n        try {\\n            const response = await axios.post(endpoint.url, update, {\\n                headers: {\\n                    'Content-Type': 'application/sparql-update',\\n                    'Authorization': this.env.getBasicAuthHeader(endpoint)\\n                }\\n            });\\n\\n            message.updateStatus = response.status === 200 ? 'success' : 'error';\\n            message.updateResponse = response.data;\\n\\n            return this.emit('message', message);\\n        } catch (error) {\\n            logger.error('SPARQL update error:', error);\\n            throw error;\\n        }\\n    }\\n}\\n\\nexport default SPARQLUpdate;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.275Z\"\n    },\n    \"../processors/sparql/SessionEnvironment.js\": {\n      \"content\": \"import axios from 'axios';\\nimport nunjucks from 'nunjucks';\\nimport fs from 'fs/promises';\\nimport path from 'path';\\nimport logger from '../../utils/Logger.js';\\nimport ns from '../../utils/ns.js';\\n\\nclass SessionEnvironment {\\n    constructor(processor) {\\n        this.processor = processor\\n        this.endpoints = null;\\n        this.templateCache = new Map();\\n    }\\n\\n    async loadEndpoints(dir) {\\n        logger.setLogLevel('debug')\\n\\n        const settingsPath = this.processor.getProperty(ns.trn.endpointSettings)\\n        logger.debug(`SessionEnvironment.loadEndpoints dir = ${dir}`)\\n        logger.debug(`SessionEnvironment.loadEndpoints settingsPath = ${settingsPath}`)\\n        const filePath = path.join(dir, settingsPath);\\n        const data = await fs.readFile(filePath, 'utf8');\\n        this.endpoints = JSON.parse(data);\\n    }\\n\\n    getQueryEndpoint() {\\n        return this.endpoints.find(e => e.type === 'query');\\n    }\\n\\n    getUpdateEndpoint() {\\n        return this.endpoints.find(e => e.type === 'update');\\n    }\\n\\n    async getTemplate(dir, templateFilename) {\\n        const cacheKey = path.join(dir, templateFilename);\\n\\n        if (this.templateCache.has(cacheKey)) {\\n            return this.templateCache.get(cacheKey);\\n        }\\n\\n        const template = await fs.readFile(cacheKey, 'utf8');\\n        this.templateCache.set(cacheKey, template);\\n        return template;\\n    }\\n\\n    clearTemplateCache() {\\n        this.templateCache.clear();\\n    }\\n\\n    // getProperty(property) {\\n    //   return property;\\n    //}\\n\\n    getBasicAuthHeader(endpoint) {\\n        return `Basic ${Buffer.from(\\n            `${endpoint.credentials.user}:${endpoint.credentials.password}`\\n        ).toString('base64')}`;\\n    }\\n}\\n\\nexport default SessionEnvironment;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.279Z\"\n    },\n    \"../processors/staging/MarkdownFormatter.js\": {\n      \"content\": \"import path from 'path'\\nimport logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass MarkdownFormatter extends Processor {\\n    constructor(config) {\\n        super(config)\\n    }\\n\\n    async process(message) {\\n\\n        if (message.done) return\\n\\n        // TODO move to config\\n        const dir = '/home/danny/github-danny/hyperdata/docs/postcraft/content-raw/chat-archives/md'\\n\\n        const filename = `${message.content.created_at.substring(0, 10)}_${message.content.uuid.substring(0, 3)}.md`\\n\\n        message.filepath = path.join(dir, message.meta.conv_uuid.substring(0, 4), filename)\\n        message.content = this.extractMarkdown(message)\\n\\n        return this.emit('message', message)\\n    }\\n\\n    // https://claude.ai/chat/be3ae4a9-51cd-42f6-a903-3193af00fed8\\n\\n    extractMarkdown(message) {\\n        // TODO move to config\\n        const urlBase = 'https://claude.ai/chat/'\\n\\n        const lines = []\\n        lines.push(`# [${message.meta.conv_name}](${urlBase}${message.meta.conv_uuid})\\\\n`)\\n        //   lines.push(`${message.meta.conv_uuid}\\\\n`)\\n        lines.push(`${message.content.uuid}\\\\n`)\\n        // lines.push('')\\n        lines.push(message.content.text)\\n        lines.push('\\\\n---\\\\n')\\n\\n        for (const [key, value] of Object.entries(message)) {\\n            if (key !== 'content' && value !== null) {\\n                if (value) {\\n                    const v = typeof value === 'object' ? JSON.stringify(value, null, 2) : value.toString()\\n                    lines.push(`* **${key}** : ${v}`)\\n                } else {\\n                    lines.push(`* **${key}** : [undefined]`)\\n                }\\n            }\\n        }\\n\\n        return lines.join('\\\\n')\\n    }\\n\\n}\\n\\nexport default MarkdownFormatter\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.290Z\"\n    },\n    \"../processors/staging/StagingProcessorsFactory.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport ns from '../../utils/ns.js'\\n\\n\\nimport MarkdownFormatter from './MarkdownFormatter.js'\\nimport TurtleFormatter from './TurtleFormatter.js'\\n\\n// ref needed in transmissions/src/engine/AbstractProcessorFactory.js\\n\\n\\nclass StagingProcessorsFactory {\\n    static createProcessor(type, config) {\\n\\n        if (type.equals(ns.trn.MarkdownFormatter)) {\\n            return new MarkdownFormatter(config)\\n        }\\n        if (type.equals(ns.trn.TurtleFormatter)) {\\n            return new TurtleFormatter(config)\\n        }\\n        return false\\n    }\\n}\\nexport default StagingProcessorsFactory\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.296Z\"\n    },\n    \"../processors/staging/TurtleFormatter.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass TurtleFormatter extends Processor {\\n    constructor(config) {\\n        super(config)\\n        this.baseURI = config.baseURI || 'http://example.org/'\\n    }\\n\\n    async process(message) {\\n        try {\\n            const item = message.currentItem\\n            if (!item) {\\n                return\\n            }\\n\\n            // Convert item to Turtle\\n            const turtle = this.formatTurtle(item)\\n            message.content = turtle\\n            message.targetFile = `${item.id}.ttl`\\n\\n            this.emit('message', message)\\n        } catch (err) {\\n            logger.error(\\\"TurtleFormatter.execute error: \\\" + err.message)\\n            throw err\\n        }\\n    }\\n\\n    formatTurtle(item) {\\n        const lines = []\\n        lines.push('@prefix : <http://example.org/ns#> .')\\n        lines.push('@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .')\\n        lines.push('')\\n\\n        const subject = `<${this.baseURI}${item.id}>`\\n        lines.push(`${subject} a :Item ;`)\\n\\n        const entries = Object.entries(item)\\n        entries.forEach(([key, value], index) => {\\n            if (value !== null) {\\n                const isLast = index === entries.length - 1\\n                const literal = typeof value === 'string' ?\\n                    `\\\"${value.replace(/\\\"/g, '\\\\\\\\\\\"')}\\\"` :\\n                    `\\\"${JSON.stringify(value)}\\\"`\\n                lines.push(`    :${key} ${literal}${isLast ? ' .' : ' ;'}`)\\n            }\\n        })\\n\\n        return lines.join('\\\\n')\\n    }\\n}\\n\\nexport default TurtleFormatter\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.304Z\"\n    },\n    \"../processors/system/EnvLoader.js\": {\n      \"content\": \"import 'dotenv/config'\\n\\n// import { readFile } from 'node:fs/promises' // whatever else\\n\\nimport logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js' // maybe more specific\\n\\n\\n/**\\n * FileReader class that extends xxxxxProcessor.\\n * DESCRIPTION\\n * #### __*Input*__\\n * **message.INPUT**\\n * #### __*Output*__\\n * **message.OUTPUT**\\n *\\n * ### References\\n * * https://dotenvx.com/\\n * * https://github.com/motdotla/dotenv\\n*/\\nclass EnvLoader extends Processor {\\n\\n    /**\\n     * Constructs a new ProcessorExample instance.\\n     * @param {Object} config - The configuration object.\\n     */\\n    constructor(config) {\\n        super(config)\\n    }\\n\\n    /**\\n     * Does something with the message and emits a 'message' event with the processed message.\\n     * @param {Object} message - The message object.\\n     */\\n    async process(message) {\\n        //   logger.setLogLevel('debug')\\n        // console.log(process.env)\\n\\n        this.config.whiteboard.env = process.env\\n\\n        return this.emit(\\\"message\\\", message)\\n    }\\n}\\n\\nexport default EnvLoader\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.309Z\"\n    },\n    \"../processors/system/SystemProcessorsFactory.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport ns from '../../utils/ns.js'\\n\\n\\nimport EnvLoader from './EnvLoader.js'\\n\\n\\n\\nclass SystemsProcessorsFactory {\\n    static createProcessor(type, config) {\\n        if (type.equals(ns.trn.EnvLoader)) {\\n            return new EnvLoader(config)\\n        }\\n        return false\\n    }\\n}\\nexport default SystemsProcessorsFactory\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.314Z\"\n    },\n    \"../processors/test/AppendProcess.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass AppendProcess extends Processor {\\n\\n    // In AppendProcess.js\\n    async process(message) {\\n        logger.debug(\\\"AppendProcess data : \\\" + message.content)\\n        message.content = message.content + \\\" world\\\"\\n        return this.emit('message', message)\\n    }\\n}\\n\\nexport default AppendProcess\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.319Z\"\n    },\n    \"../processors/test/FileSink.js\": {\n      \"content\": \"import path from 'path'\\nimport { fileURLToPath } from 'url'\\n\\nimport { writeFile } from 'node:fs/promises'\\nimport footpath from '../../utils/footpath.js'\\nimport grapoi from 'grapoi'\\nimport ns from '../../utils/ns.js'\\nimport logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass FileSink extends Processor {\\n\\n    constructor(config) {\\n        super(config)\\n        const dataset = this.config\\n        const poi = grapoi({ dataset })\\n        this.destinationFile = poi.out(ns.trn.destinationFile).value\\n    }\\n\\n    // In FileSink.js\\n    async process(message) {\\n        const toRootDir = '../../../'\\n        const dataDir = path.join(toRootDir, message.dataDir)\\n        const df = footpath.resolve(import.meta.url, dataDir, this.destinationFile)\\n        logger.debug(\\\"FileSink to = \\\" + df)\\n        await writeFile(df, message.content)\\n        return this.emit('message', message)\\n    }\\n}\\n\\nexport default FileSink\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.324Z\"\n    },\n    \"../processors/test/FileSource.js\": {\n      \"content\": \"import path from 'path'\\nimport { fileURLToPath } from 'url'\\n\\nimport { readFile } from 'node:fs/promises'\\n\\nimport footpath from '../../utils/footpath.js'\\nimport rdf from 'rdf-ext'\\n\\nimport grapoi from 'grapoi'\\nimport ns from '../../utils/ns.js'\\n\\nimport logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass FileSource extends Processor {\\n\\n    constructor(config) {\\n        super(config)\\n        const dataset = this.config\\n        const poi = grapoi({ dataset })\\n        this.sourceFile = poi.out(ns.trn.sourceFile).value\\n    }\\n\\n    // In FileSource.js\\n    async process(message) {\\n        try {\\n            const toRootDir = '../../../'\\n            const dataDir = toRootDir + message.dataDir\\n            const sf = footpath.resolve(import.meta.url, dataDir, this.sourceFile)\\n            logger.debug('FileSource file : ' + sf)\\n            const contents = await readFile(sf, { encoding: 'utf8' })\\n            logger.debug('FileSource data : ' + contents)\\n            return this.emit('message', { content: contents, ...message })\\n        } catch (err) {\\n            logger.error(\\\"FileSource.execute error : \\\" + err.message)\\n        }\\n    }\\n}\\n\\nexport default FileSource\\n\\n\\n\\n\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.328Z\"\n    },\n    \"../processors/test/StringSink.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass StringSink extends Processor {\\n\\n    process(message) {\\n        logger.log(\\\"\\\\n\\\\nStringSink outputs : \\\\\\\"\\\" + message + \\\"\\\\\\\"\\\\n\\\\n\\\")\\n    }\\n}\\n\\nexport default StringSink \\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.334Z\"\n    },\n    \"../processors/test/StringSource.js\": {\n      \"content\": \"import Processor from '../base/Processor.js'\\n\\nclass StringSource extends Processor {\\n\\n    constructor(config) {\\n        super(config)\\n    }\\n\\n    async process(message) {\\n        console.log(\\\"message = \\\" + message)\\n        console.log(\\\"data = \\\" + data)\\n        return this.emit('message', message)\\n    }\\n}\\n\\nexport default StringSource\\n\\n\\n\\n\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.339Z\"\n    },\n    \"../processors/test/TestProcessorsFactory.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport ns from '../../utils/ns.js'\\n\\nimport StringSource from './StringSource.js'\\nimport StringSink from './StringSink.js'\\nimport AppendProcess from './AppendProcess.js'\\nimport FileSource from './FileSource.js'\\nimport FileSink from './FileSink.js'\\n\\n\\n\\nclass TestProcessorsFactory {\\n    static createProcessor(type, config) {\\n\\n        // for e2e tests\\n        // String\\n        if (type.equals(ns.trn.StringSource)) {\\n            return new StringSource(config)\\n        }\\n        if (type.equals(ns.trn.StringSink)) {\\n            return new StringSink(config)\\n        }\\n        if (type.equals(ns.trn.AppendProcess)) {\\n            return new AppendProcess(config)\\n        }\\n\\n        // simple file\\n        if (type.equals(ns.trn.FileSource)) {\\n            return new FileSource(config)\\n        }\\n        if (type.equals(ns.trn.FileSink)) {\\n            return new FileSink(config)\\n        }\\n\\n        return false\\n    }\\n}\\n\\nexport default TestProcessorsFactory\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.345Z\"\n    },\n    \"../processors/text/LineReader.js\": {\n      \"content\": \"\\nimport { readFile } from 'node:fs/promises'\\nimport grapoi from 'grapoi'\\nimport ns from '../../utils/ns.js'\\nimport footpath from '../../utils/footpath.js'\\nimport logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass LineReader extends Processor {\\n\\n    constructor(config) {\\n        super(config)\\n    }\\n\\n    async process(message) {\\n\\n        const text = data.toString()\\n\\n\\n        const lines = text.split('\\\\n')\\n        for await (let line of lines) {\\n            if (line.trim() && !line.startsWith('#')) {\\n                logger.debug('Line = [[[' + line + ']]]')\\n                return this.emit('message', line, message)\\n            }\\n        }\\n\\n        return this.emit('message', '~~done~~', message)\\n    }\\n}\\n\\nexport default LineReader\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.350Z\"\n    },\n    \"../processors/text/StringFilter copy.js\": {\n      \"content\": \"import fs from 'fs/promises';\\nimport path from 'path';\\nimport Processor from '../base/Processor.js';\\nimport logger from '../../utils/Logger.js';\\nimport ns from '../../utils/ns.js';\\n\\nclass StringFilter extends Processor {\\n    constructor(config) {\\n        super(config);\\n        this.gitignorePatterns = [];\\n        this.initialized = false;\\n        this.initialize();\\n    }\\n\\n    async initialize() {\\n        if (this.initialized) return;\\n\\n        try {\\n            // Get include/exclude patterns from config\\n            if (this.settings) {\\n                this.includePatterns = this.getPropertyFromMyConfig(ns.trn.include)?.split(',') || [];\\n                this.excludePatterns = this.getPropertyFromMyConfig(ns.trn.exclude)?.split(',') || [];\\n            } else {\\n                this.includePatterns = this.config.include?.split(',') || [];\\n                this.excludePatterns = this.config.exclude?.split(',') || [];\\n            }\\n\\n            // Try to load gitignore if path provided\\n            const gitignorePath = this.config.gitignorePath;\\n            if (gitignorePath) {\\n                try {\\n                    const gitignoreContent = await fs.readFile(gitignorePath, 'utf8');\\n                    this.gitignorePatterns = gitignoreContent\\n                        .split('\\\\n')\\n                        .map(line => line.trim())\\n                        .filter(line => line && !line.startsWith('#'));\\n                } catch (err) {\\n                    logger.warn(`Could not load gitignore from ${gitignorePath}: ${err.message}`);\\n                }\\n            }\\n        } catch (err) {\\n            logger.error('Error initializing StringFilter:', err);\\n        }\\n\\n        this.initialized = true;\\n    }\\n\\n    async process(message) {\\n        await this.initialize();\\n\\n        if (!message.filepath) {\\n            logger.warn('StringFilter: No filepath provided');\\n            return;\\n        }\\n\\n        const relativePath = message.filepath;\\n        logger.debug(`StringFilter, relative path = ${relativePath}`);\\n\\n        // Check gitignore patterns\\n        if (this.gitignorePatterns.some(pattern => this.matchPattern(relativePath, pattern))) {\\n            return;\\n        }\\n\\n        // Check exclude patterns\\n        if (this.excludePatterns.some(pattern => this.matchPattern(relativePath, pattern))) {\\n            return;\\n        }\\n\\n        // Check include patterns\\n        if (this.includePatterns.length > 0 &&\\n            !this.includePatterns.some(pattern => this.matchPattern(relativePath, pattern))) {\\n            return;\\n        }\\n\\n        return this.emit('message', message);\\n    }\\n\\n    matchPattern(filePath, pattern) {\\n        // Convert glob pattern to regex\\n        const regexPattern = pattern\\n            .replace(/\\\\./g, '\\\\\\\\.')\\n            .replace(/\\\\*/g, '.*')\\n            .replace(/\\\\?/g, '.');\\n        const regex = new RegExp(`^${regexPattern}$`);\\n\\n        // Get filename for matching\\n        const filename = path.basename(filePath);\\n        return regex.test(filename) || regex.test(filePath);\\n    }\\n}\\n\\nexport default StringFilter;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.356Z\"\n    },\n    \"../processors/text/StringFilter.js\": {\n      \"content\": \"import fs from 'fs/promises';\\nimport path from 'path';\\nimport Processor from '../base/Processor.js';\\nimport logger from '../../utils/Logger.js';\\nimport ns from '../../utils/ns.js';\\n\\nclass StringFilter extends Processor {\\n    constructor(config) {\\n        super(config);\\n        this.initialized = false;\\n        this.includePatterns = [];\\n        this.excludePatterns = [];\\n    }\\n\\n    async process(message) {\\n        logger.log(`StringFilter.process, done=${message.done}`)\\n        if (message.done) return this.emit('message', message);\\n\\n        await this.initialize();\\n\\n        // TODO path handling needs updating\\n        if (!message.filepath) {\\n            logger.warn('StringFilter: No filepath provided, terminating pipe');\\n            return;\\n        }\\n\\n        const relativePath = message.filepath;\\n        logger.debug(`StringFilter checking path = ${relativePath}`);\\n\\n        if (this.isAccepted(relativePath)) {\\n            return this.emit('message', message);\\n        }\\n    }\\n\\n    async initialize() {\\n        if (this.initialized) return;\\n\\n        try {\\n            if (this.settings) {\\n                const includeStr = this.getProperty(ns.trn.includePatterns);\\n                const excludeStr = this.getProperty(ns.trn.excludePatterns);\\n\\n                this.includePatterns = includeStr ? includeStr.split(',').map(p => p.trim()) : [];\\n                this.excludePatterns = excludeStr ? excludeStr.split(',').map(p => p.trim()) : [];\\n            }\\n\\n            logger.debug(`StringFilter initialized with:\\n                Include patterns: ${this.includePatterns}\\n                Exclude patterns: ${this.excludePatterns}`);\\n\\n        } catch (err) {\\n            logger.error('Error initializing StringFilter:', err);\\n            throw err;\\n        }\\n\\n        this.initialized = true;\\n    }\\n\\n\\n\\n    isAccepted(filePath) {\\n        // If no patterns defined, accept all\\n        if (this.includePatterns.length === 0 && this.excludePatterns.length === 0) {\\n            return true;\\n        }\\n\\n        // Check exclude patterns first\\n        if (this.matchesAnyPattern(filePath, this.excludePatterns)) {\\n            return false;\\n        }\\n\\n        // If include patterns exist, file must match at least one\\n        if (this.includePatterns.length > 0) {\\n            return this.matchesAnyPattern(filePath, this.includePatterns);\\n        }\\n\\n        return true;\\n    }\\n\\n    matchesAnyPattern(filePath, patterns) {\\n        return patterns.some(pattern => this.matchPattern(filePath, pattern));\\n    }\\n\\n    matchPattern(filePath, pattern) {\\n        const regexPattern = pattern\\n            .replace(/\\\\./g, '\\\\\\\\.')\\n            .replace(/\\\\*/g, '.*')\\n            .replace(/\\\\?/g, '.');\\n        const regex = new RegExp(`^${regexPattern}$`);\\n\\n        const filename = path.basename(filePath);\\n        return regex.test(filename) || regex.test(filePath);\\n    }\\n}\\n\\nexport default StringFilter;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.359Z\"\n    },\n    \"../processors/text/StringMerger.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\n// OLD : PRE-REFACTOR\\nclass StringMerger extends Processor {\\n    constructor(config) {\\n        super(config)\\n        this.merged = ''\\n    }\\n\\n    async process(message) {\\n        logger.log('SMDATA*********************************\\\\n' + data)\\n\\n        if (data === '~~done~~') {\\n            logger.log('SM  DONE**********************************\\\\n' + this.merged)\\n            return this.emit('message', this.merged, message)\\n            return\\n        }\\n        this.merged = this.merged + data\\n\\n    }\\n}\\n\\nexport default StringMerger\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.364Z\"\n    },\n    \"../processors/text/StringReplace.js\": {\n      \"content\": \"// src/processors/text/StringReplace.js\\n/**\\n * @class StringReplace\\n * @extends Processor\\n * @classdesc\\n * **a Transmissions Processor**\\n *\\n * Replaces all occurrences of a specified substring in the content with a replacement string.\\n *\\n * ### Signature\\n *\\n * #### __*Input*__\\n * * **`message.content`** - The original string content\\n * * **`message.match`** - The substring to be replaced\\n * * **`message.replace`** - The replacement string\\n *\\n * #### __*Output*__\\n * * **`message.content`** - The modified string with replacements\\n *\\n * #### __*Behavior*__\\n * * Replaces every exact occurrence of `message.match` in `message.content` with `message.replace`\\n * * If `message.match` is not found, the content remains unchanged\\n *\\n * #### __Tests__\\n * * TODO: Add test information\\n */\\n\\nimport ns from '../../utils/ns.js'\\nimport logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass StringReplace extends Processor {\\n    constructor(config) {\\n        super(config)\\n    }\\n\\n    /**\\n     * Executes the string replacement process\\n     * @param {Object} message - The message object containing content, match, and replace strings\\n     */\\n    async process(message) {\\n        // logger.setLogLevel('debug')\\n        const inputField = this.getProperty(ns.trn.inputField)\\n        const outputField = this.getProperty(ns.trn.outputField)\\n\\n        var match = message.match ? message.match : this.getProperty(ns.trn.match)\\n        var replace = message.replace ? message.replace : this.getProperty(ns.trn.replace)\\n\\n        var input = message.input ? message.input : message[inputField]\\n        if (!input) {\\n            input = message.content\\n        }\\n\\n        logger.debug('StringReplace.process input = ' + input)\\n\\n        // global s & r\\n        const output = input.split(match).join(replace)\\n\\n        logger.debug('StringReplace output: ' + output)\\n        try {\\n            message[outputField] = output\\n        } catch {\\n            message.content = output\\n        }\\n        return this.emit('message', message)\\n    }\\n}\\n\\nexport default StringReplace\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.368Z\"\n    },\n    \"../processors/text/Templater.js\": {\n      \"content\": \"// src/processors/text/Templater.js\\n/**\\n * @class Templater\\n * @extends Processor\\n * @classdesc\\n * **a Transmissions Processor**\\n *\\n * Provides templating functionality using Nunjucks.\\n *\\n * #### __*Input*__\\n * * **`message.templateFilename`** - Path to the template file (optional)\\n * * **`message.template`** - Template string (used if templateFilename is not provided)\\n * * **`message.contentBlocks`** - Object with properties for template rendering (e.g., title, body)\\n *\\n * #### __*Output*__\\n * * **`message.content`** - The rendered template content\\n *\\n * #### __*Behavior*__\\n * * Uses Nunjucks to render templates\\n * * Can render from a template file or a template string\\n * * Applies content from message.contentBlocks to the template\\n *\\n * #### __Tests__\\n * *\\n *\\n  * #### __TODO__\\n * * Add test information here\\n * * Cache templates - cache in utils?\\n */\\n\\nimport Processor from '../base/Processor.js'\\nimport nunjucks from 'nunjucks'\\nimport path from 'path'\\nimport logger from '../../utils/Logger.js'\\nimport ns from '../../utils/ns.js'\\n\\nclass Templater extends Processor {\\n    constructor(config) {\\n        super(config)\\n    }\\n\\n    /**\\n     * Executes the templating process\\n     * @param {Object} message - The message object containing template and content information\\n     */\\n    async process(message) {\\n        logger.setLogLevel('debug')\\n        //   logger.log(this.getPropertyFromMyConfig(ns.trn.templateFilename))\\n        //    this.addPropertyToMyConfig(ns.trn.templateFilename, 'poo')\\n        //   this.showMyConfig()\\n        var templateFilename = this.getProperty(ns.trn.templateFilename)\\n\\n        logger.debug(`\\\\nTemplater.process, templateFilename = ${templateFilename}`)\\n        // process.exit()\\n\\n        if (templateFilename) {\\n            //       logger.debug(`\\\\nTemplater.process, templateFilename = ${templateFilename}`)\\n\\n            // Extract path and filename from templateFilename\\n            var targetPath = templateFilename.substr(0, templateFilename.lastIndexOf(\\\"/\\\"))\\n            const filename = templateFilename.substr(templateFilename.lastIndexOf(\\\"/\\\") + 1)\\n\\n            if (!path.isAbsolute(targetPath)) {\\n                targetPath = path.join(this.getProperty(ns.trn.targetPath, message.rootDir), targetPath)\\n            }\\n\\n            logger.debug('\\\\nTemplater, targetPath = ' + targetPath)\\n            logger.debug('Templater, filename = ' + filename)\\n\\n            // Configure Nunjucks with the template path\\n            nunjucks.configure(targetPath, { autoescape: false })\\n\\n            //   logger.debug(`content PRE = ${message.content}`)\\n            // Render the template file\\n            message.content = nunjucks.render(filename, message.contentBlocks)\\n\\n            logger.debug(`content POST = ${message.content}`)\\n\\n\\n        } else {   // Configure Nunjucks for string templates\\n            // TODO priorities\\n\\n            nunjucks.configure({ autoescape: false })\\n\\n            //    logger.reveal(message)\\n            // Render the template string\\n            message.content = nunjucks.renderString(message.template, message.contentBlocks)\\n        }\\n\\n        return this.emit('message', message)\\n    }\\n}\\nexport default Templater\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.372Z\"\n    },\n    \"../processors/text/TextProcessorsFactory.js\": {\n      \"content\": \"import ns from '../../utils/ns.js'\\n\\nimport LineReader from './LineReader.js'\\nimport StringFilter from './StringFilter.js'\\nimport StringMerger from './StringMerger.js'\\nimport StringReplace from './StringReplace.js'\\nimport Templater from './Templater.js'\\n\\nclass TextProcessorsFactory {\\n    static createProcessor(type, config) {\\n\\n        if (type.equals(ns.trn.Templater)) {\\n            return new Templater(config)\\n        }\\n        if (type.equals(ns.trn.LineReader)) {\\n            return new LineReader(config)\\n        }\\n\\n        if (type.equals(ns.trn.StringFilter)) {\\n            return new StringFilter(config)\\n        }\\n\\n        if (type.equals(ns.trn.StringMerger)) {\\n            return new StringMerger(config)\\n        }\\n\\n        if (type.equals(ns.trn.StringReplace)) {\\n            return new StringReplace(config)\\n        }\\n\\n        //     if (type.equals(ns.trn.CommentStripper)) {\\n        //       return new CommentStripper(config)\\n        // }\\n\\n        return false\\n    }\\n}\\n\\nexport default TextProcessorsFactory\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.375Z\"\n    },\n    \"../processors/unsafe/RunCommand.js\": {\n      \"content\": \"import { exec } from 'child_process';\\nimport logger from '../../utils/Logger.js';\\nimport Processor from '../base/Processor.js';\\nimport ns from '../../utils/ns.js';\\n\\nclass RunCommand extends Processor {\\n    constructor(config) {\\n        super(config);\\n        this.allowedCommands = config.allowedCommands || [];\\n        this.blockedPatterns = config.blockedPatterns || [];\\n        this.timeout = config.timeout || 5000;\\n        this.initializeSecurity();\\n    }\\n\\n    async initializeSecurity() {\\n        if (this.settings) {\\n            const allowed = await this.getPropertyFromMyConfig(ns.trn.allowedCommands);\\n            this.allowedCommands = allowed ? allowed.split(',') : [];\\n\\n            const blocked = await this.getPropertyFromMyConfig(ns.trn.blockedPatterns);\\n            this.blockedPatterns = blocked ? blocked.split(',') : [];\\n        }\\n    }\\n\\n    validateCommand(command) {\\n        if (!command) {\\n            throw new Error('No command specified');\\n        }\\n\\n        const commandName = command.split(' ')[0];\\n        const isAllowed = this.allowedCommands.length === 0 ||\\n            this.allowedCommands.includes(commandName);\\n\\n        if (!isAllowed) {\\n            throw new Error(`Command '${commandName}' not in allowed list`);\\n        }\\n\\n        const hasBlocked = this.blockedPatterns.some(pattern =>\\n            command.includes(pattern)\\n        );\\n        if (hasBlocked) {\\n            throw new Error('Command contains blocked pattern');\\n        }\\n    }\\n\\n    async process(message) {\\n        let command = message.command;\\n        if (!command) {\\n            command = this.getPropertyFromMyConfig(ns.trn.command);\\n        }\\n\\n        try {\\n            this.validateCommand(command);\\n            const result = await this.executeCommand(command);\\n            message.content = result.stdout;\\n            message.commandResult = result;\\n            logger.debug(`Command executed successfully: ${command}`);\\n        } catch (error) {\\n            logger.error(`Command error: ${error.message}`);\\n            message.commandError = error.message;\\n            message.content = error.message;\\n            throw error;\\n        }\\n\\n        return this.emit('message', message);\\n    }\\n\\n    executeCommand(command) {\\n        return new Promise((resolve, reject) => {\\n            const child = exec(command, {\\n                timeout: this.timeout\\n            }, (error, stdout, stderr) => {\\n                if (error) {\\n                    if (error.signal === 'SIGTERM') {\\n                        reject(new Error('Command timeout'));\\n                    } else {\\n                        reject(error);\\n                    }\\n                    return;\\n                }\\n                resolve({\\n                    stdout: stdout.toString(),\\n                    stderr: stderr.toString(),\\n                    code: 0\\n                });\\n            });\\n        });\\n    }\\n}\\n\\nexport default RunCommand;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.379Z\"\n    },\n    \"../processors/unsafe/UnsafeProcessorsFactory.js\": {\n      \"content\": \"// import logger from '../../utils/Logger.js'\\nimport ns from '../../utils/ns.js'\\n\\n\\nimport RunCommand from './RunCommand.js'\\n\\n\\nclass UnsafeProcessorsFactory {\\n    static createProcessor(type, config) {\\n\\n        if (type.equals(ns.trn.RunCommand)) {\\n            return new RunCommand(config)\\n        }\\n\\n        return false\\n    }\\n}\\nexport default UnsafeProcessorsFactory\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.383Z\"\n    },\n    \"../processors/util/CaptureAll.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass CaptureAll extends Processor {\\n    constructor(config) {\\n        // Ensure whiteboard is initialized as an array\\n        if (!config.whiteboard || !Array.isArray(config.whiteboard)) {\\n            config.whiteboard = [];\\n        }\\n        super(config)\\n\\n        if (CaptureAll.singleInstance) {\\n            return CaptureAll.singleInstance\\n        }\\n        CaptureAll.singleInstance = this\\n    }\\n\\n    async process(message) {\\n        logger.log(`CaptureAll at [${message.tags}] ${this.getTag()}, done=${message.done}`)\\n        this.config.whiteboard.push(message)\\n        return this.emit('message', message)\\n    }\\n}\\n\\nexport default CaptureAll\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.387Z\"\n    },\n    \"../processors/util/SetMessage.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\nimport GrapoiHelpers from '../../utils/GrapoiHelpers.js'\\nimport ns from '../../utils/ns.js'\\nimport rdf from 'rdf-ext'\\n\\nclass SetMessage extends Processor {\\n\\n    constructor(config) {\\n        super(config)\\n        logger.log('SetMessage constructor')\\n    }\\n\\n    async process(message) {\\n        logger.setLogLevel('debug')\\n        const setters = await this.getSetters(this.config, this.settings, ns.trn.setValue)\\n        for (let i = 0; i < setters.length; i++) {\\n            message[setters[i].key] = setters[i].value\\n        }\\n        return this.emit('message', message)\\n    }\\n\\n    async getSetters(config, settings, term) { // TODO refactor - is same in RestructureJSON\\n        logger.debug(`***** config = ${config}`)\\n        logger.debug(`***** settings.value = ${settings.value}`)\\n        logger.debug(`***** term = ${term}`)\\n        const settersRDF = GrapoiHelpers.listToArray(config, settings, term)\\n        const dataset = this.config\\n        var setters = []\\n        for (let i = 0; i < settersRDF.length; i++) {\\n            let setter = settersRDF[i]\\n            let poi = rdf.grapoi({ dataset: dataset, term: setter })\\n            let key = poi.out(ns.trn.key).value\\n            let value = poi.out(ns.trn.value).value\\n            setters.push({ \\\"key\\\": key, \\\"value\\\": value })\\n        }\\n        return setters\\n    }\\n}\\n\\nexport default SetMessage\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.391Z\"\n    },\n    \"../processors/util/ShowConfig.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass ShowConfig extends Processor {\\n\\n    constructor(config) {\\n        super(config)\\n        this.verbose = false\\n    }\\n\\n    async process(message) {\\n\\n        //    logger.log(\\\"\\\\n\\\\nStringSink outputs : \\\\\\\"\\\" + data + \\\"\\\\\\\"\\\\n\\\\n\\\")\\n\\n        if (this.verbose) logger.log(\\\"\\\\n***  Show Config ***\\\")\\n\\n\\n        logger.log(\\\"***************************\\\")\\n        logger.log(\\\"***  Config\\\")\\n        logger.reveal(this.config) // TODO the rest\\n        logger.log(\\\"***************************\\\")\\n        //     logger.log(\\\"***  Trace\\\")\\n        //   console.trace() // move to Logger, only when debugging\\n        // logger.log(\\\"***************************\\\")\\n\\n        return this.emit('message', message)\\n    }\\n}\\n\\nexport default ShowConfig\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.395Z\"\n    },\n    \"../processors/util/ShowMessage.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass ShowMessage extends Processor {\\n\\n    constructor(config) {\\n        super(config)\\n        this.verbose = false\\n    }\\n\\n    async process(message) {\\n\\n        //    logger.log(\\\"\\\\n\\\\nStringSink outputs : \\\\\\\"\\\" + data + \\\"\\\\\\\"\\\\n\\\\n\\\")\\n\\n        if (this.verbose) logger.log(\\\"\\\\n***  Show Message ***\\\")\\n\\n        logger.log(\\\"***************************\\\")\\n        logger.log(\\\"***  Message\\\")\\n        logger.reveal(message)\\n        logger.log(\\\"***************************\\\")\\n        //     logger.log(\\\"***  Trace\\\")\\n        //   console.trace() // move to Logger, only when debugging\\n        // logger.log(\\\"***************************\\\")\\n\\n        return this.emit('message', message)\\n    }\\n}\\n\\nexport default ShowMessage\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.399Z\"\n    },\n    \"../processors/util/ShowSettings.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport ns from '../../utils/ns.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass ShowSettings extends Processor {\\n\\n    constructor(config) {\\n        super(config)\\n        //   this.verbose = false\\n    }\\n\\n    async process(message) {\\n        logger.setLogLevel('debug')\\n        logger.debug(`ShowSettings.process`)\\n\\n        const property = ns.trn.name\\n\\n        logger.debug(`ShowSettings.process, property = ${property}`)\\n\\n        const value = this.getProperty(property)\\n\\n        logger.debug(`ShowSettings.process, value  = ${value}`)\\n\\n        return this.emit('message', message)\\n    }\\n}\\n\\nexport default ShowSettings\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.404Z\"\n    },\n    \"../processors/util/ShowTransmission.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass ShowTransmission extends Processor {\\n\\n    async process(message) {\\n        logger.log(this.transmission.toString())\\n        return this.emit('message', message)\\n    }\\n}\\n\\nexport default ShowTransmission\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.409Z\"\n    },\n    \"../processors/util/Stash.js\": {\n      \"content\": \"import rdf from 'rdf-ext'\\nimport { fromFile, toFile } from 'rdf-utils-fs'\\nimport Processor from '../base/Processor.js'\\n\\n/**\\n * Takes the input and stashes it in the message as told by processors.ttl\\n * \\n * #### __*Input*__\\n * **data** : any\\n * **message** : any\\n * #### __*Output*__\\n * **data** : as Input\\n * **message** : adds key:value determined by processors.ttl\\n * @extends Processor\\n */\\nclass Stash extends Processor {\\n\\n    /**\\n     * Create a DatasetReader.\\n     * @param {Object} config - The configuration object.\\n     */\\n    constructor(config) {\\n        super(config)\\n    }\\n\\n    /**\\n     * Execute the DatasetReader processor.\\n     * @param {string} data -.\\n     * @param {Object} message - .\\n     */\\n    async process(message) {\\n        const manifestFilename = rootDir + '/manifest.ttl'\\n        const stream = fromFile(manifestFilename)\\n\\n        // should append RDF to incoming\\n        message.rootDir = rootDir\\n        message.dataset = await rdf.dataset().import(stream)\\n        return this.emit('message', message)\\n    }\\n}\\nexport default Stash\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.413Z\"\n    },\n    \"../processors/util/UtilProcessorsFactory.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport ns from '../../utils/ns.js'\\n\\nimport ShowMessage from './ShowMessage.js'\\nimport ShowTransmission from './ShowTransmission.js'\\nimport CaptureAll from './CaptureAll.js'\\nimport ShowConfig from './ShowConfig.js'\\nimport WhiteboardToMessage from './WhiteboardToMessage.js'\\nimport SetMessage from './SetMessage.js'\\nimport ShowSettings from './ShowSettings.js'\\nShowSettings\\n\\nclass UtilProcessorsFactory {\\n    static createProcessor(type, config) {\\n\\n        if (type.equals(ns.trn.ShowMessage)) {\\n            return new ShowMessage(config)\\n        }\\n        if (type.equals(ns.trn.ShowTransmission)) {\\n            return new ShowTransmission(config)\\n        }\\n        if (type.equals(ns.trn.CaptureAll)) {\\n            return new CaptureAll(config)\\n        }\\n        if (type.equals(ns.trn.ShowConfig)) {\\n            return new ShowConfig(config)\\n        }\\n        if (type.equals(ns.trn.WhiteboardToMessage)) {\\n            return new WhiteboardToMessage(config)\\n        }\\n        if (type.equals(ns.trn.SetMessage)) {\\n            return new SetMessage(config)\\n        }\\n        if (type.equals(ns.trn.ShowSettings)) {\\n            return new ShowSettings(config)\\n        }\\n        return false\\n    }\\n}\\nexport default UtilProcessorsFactory\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.419Z\"\n    },\n    \"../processors/util/WhiteboardToMessage.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport Processor from '../base/Processor.js'\\n\\nclass WhiteboardToMessage extends Processor {\\n\\n    constructor(config) {\\n        super(config);\\n    }\\n    async process(message) {\\n\\n        logger.log('WhiteboardToMessage at [' + message.tags + '] ' + this.getTag())\\n\\n        const originalArray = this.config.whiteboard\\n\\n        message.whiteboard = Object.keys(originalArray).reduce((acc, key) => {\\n            const value = originalArray[key];\\n            if (value !== undefined && value !== null) {\\n                Object.keys(value).forEach((prop) => {\\n                    if (!acc[prop]) {\\n                        acc[prop] = [];\\n                    }\\n                    acc[prop].push(value[prop]);\\n                });\\n            }\\n            return acc;\\n        }, {});\\n\\n        return this.emit('message', message)\\n    }\\n}\\n\\nexport default WhiteboardToMessage\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.425Z\"\n    },\n    \"../processors/xmpp/XmppClient.js\": {\n      \"content\": \"import logger from \\\"../../utils/Logger.js\\\"; // path will likely change\\nimport Processor from \\\"../base/Processor.js\\\"; // maybe more specific\\n\\n/**\\n * FileReader class that extends xxxxxProcessor.\\n * DESCRIPTION\\n * #### __*Input*__\\n * **message.INPUT**\\n * #### __*Output*__\\n * **message.OUTPUT**\\n */\\nclass XmppClient extends Processor {\\n  /**\\n   * Constructs a new ProcessorExample instance.\\n   * @param {Object} config - The configuration object.\\n   */\\n  constructor(config) {\\n    super(config);\\n  }\\n\\n  /**\\n   * Does something with the message and emits a 'message' event with the processed message.\\n   * @param {Object} message - The message object.\\n   */\\n  async process(message) {\\n    logger.setLogLevel(\\\"debug\\\");\\n\\n    // processing goes here\\n    return this.emit(\\\"message\\\", message);\\n  }\\n}\\n\\nexport default XmppClient\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.432Z\"\n    },\n    \"../processors/xmpp/XmppProcessorsFactory.js\": {\n      \"content\": \"import logger from \\\"../../utils/Logger.js\\\";\\nimport ns from \\\"../../utils/ns.js\\\";\\n\\nimport ProcessorTemplate from \\\"./XmppClient.js\\\";\\n\\n// ref needed in transmissions/src/processors/base/AbstractProcessorFactory.js\\n\\nclass XmppProcessorsFactory {\\n  static createProcessor(type, config) {\\n    if (type.equals(ns.trn.XmppClient)) {\\n      return new XmppClient(config)\\n    }\\n    return false\\n  }\\n}\\nexport default XmppProcessorsFactory\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.438Z\"\n    },\n    \"../simples/env-loader/about.md\": {\n      \"content\": \"node src/apps-simple/env-loader/env-loader.js\\n\\nfrom:\\n\\n:envy a trm:Pipeline ;\\n\\n# trm:pipe (:SC :s10 :s20 :SM) .\\n\\ntrm:pipe (:p10 :p20 :SC) .\\n:p10 a :EnvLoader .\\n:p20 a :WhiteboardToMessage .\\n\",\n      \"type\": \".md\",\n      \"timestamp\": \"2025-01-19T17:23:38.443Z\"\n    },\n    \"../simples/env-loader/env-loader.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\nimport EnvLoader from '../../processors/system/EnvLoader.js'\\nimport WhiteboardToMessage from '../../processors/util/WhiteboardToMessage.js'\\n\\nlogger.log('EnvLoader simple')\\n\\nconst config = { whiteboard: [] }\\n\\nconst p10 = new EnvLoader(config)\\np10.id = 'http://purls.org/stuff/#p10'\\n\\nconst p20 = new WhiteboardToMessage(config)\\np10.id = 'http://purls.org/stuff/#p20'\\n\\nvar message = {\\n    \\\"dataDir\\\": \\\"src/applications/env-loader-test/data\\\",\\n    \\\"rootDir\\\": \\\"[no key]\\\",\\n    \\\"tags\\\": \\\"SM\\\"\\n}\\n\\nconst x = 3\\n\\nmessage = await p10.process(message)\\n\\nlogger.log('p10 output ' + p10.getTag() + message)\\n\\nmessage = await p20.process(message)\\n\\nlogger.log('p20 output ')\\n\\nlogger.reveal(message)\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.447Z\"\n    },\n    \"../simples/nop/nop copy.js\": {\n      \"content\": \"import logger from '../../utils/Logger.js'\\n// import EnvLoader from '../../processors/system/EnvLoader.js'\\n// import WhiteboardToMessage from '../../processors/util/WhiteboardToMessage.js'\\nimport NOP from '../../processors/flow/NOP.js'\\nlogger.log('NOP simple')\\n\\nconst config = {\\n    \\\"runmode\\\": \\\"functions\\\",\\n    whiteboard: []\\n}\\n\\nconst p10 = new NOP(config)\\np10.id = 'http://purls.org/stuff/#p10'\\n\\n\\nvar message = {\\n    \\\"test\\\": \\\"test string\\\",\\n    \\\"dataDir\\\": \\\"src/applications/env-loader-test/data\\\",\\n    \\\"rootDir\\\": \\\"[no key]\\\",\\n    \\\"tags\\\": \\\"SM\\\"\\n}\\n\\n\\n\\n\\nmessage = await p10.process(message)\\n\\nlogger.log('p10 output ' + message)\\n\\n// message = await p20.process(message)\\n// logger.log('p20 output ' + message)\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.452Z\"\n    },\n    \"../simples/nop/nop.js\": {\n      \"content\": \"// nop.js\\n// node src/simples/nop/nop.js\\n\\nimport NOP from '../../processors/flow/NOP.js'\\n\\nconst config = {\\n    \\\"runmode\\\": \\\"functions\\\",\\n    whiteboard: []\\n}\\n\\nconst nop = new NOP(config)\\n\\nvar message = { 'value': '42' }\\n\\nmessage = await nop.process(message)\\n\\nconsole.log('value = ' + message.value)\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.457Z\"\n    },\n    \"../simples/nop/simple-runner.js\": {\n      \"content\": \"// simple-runner.js\\nimport NOP from '../../processors/flow/NOP.js'\\nimport Fork from '../../processors/flow/Fork.js'\\n\\n/*\\nasync function runProcessor(processor, message) {\\n    const outputs = await processor.process(message)\\n    return outputs\\n}\\n*/\\n\\nasync function main() {\\n    const config = {}\\n    const nop = new NOP(config)\\n    const fork = new Fork(config)\\n\\n    var message = { 'value': '42' }\\n\\n    // Run NOP\\n    // message = await nop.execut(message)\\n    var outputs = await nop.process(message)\\n    console.log('NOP outputs:', outputs)\\n\\n    // Run Fork\\n    message.nForks = 3\\n    outputs = await fork.process(message)\\n    console.log('Fork outputs:', outputs)\\n}\\n\\nmain().catch(console.error)\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.462Z\"\n    },\n    \"../simples/set-message/set-message.js\": {\n      \"content\": \"// set-message.js\\n// node src/simples/set-message/set-message.js \\n\\nimport logger from '../../utils/Logger.js'\\nimport SetMessage from '../../processors/util/SetMessage.js'\\n\\nconst config = {\\n    \\\"runmode\\\": \\\"functions\\\",\\n    whiteboard: []\\n}\\n\\nconst setm = new SetMessage(config)\\n\\nvar message = { 'value': '42' }\\n\\nmessage = await setm.process(message)\\n\\nlogger.log('value = ' + message.value)\\n\\nlogger.reveal(message)\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.466Z\"\n    },\n    \"../utils/GrapoiHelpers.js\": {\n      \"content\": \"import rdf from 'rdf-ext'\\nimport grapoi from 'grapoi'\\nimport { fromFile, toFile } from 'rdf-utils-fs'\\nimport ns from './ns.js'\\nimport logger from './Logger.js'\\n\\n// probably already exist - ask Bergi\\n\\nclass GrapoiHelpers {\\n\\n    // file utils\\n    static async readDataset(filename) {\\n        const stream = fromFile(filename)\\n        const dataset = await rdf.dataset().import(stream)\\n        return dataset\\n    }\\n\\n    static async writeDataset(dataset, filename) {\\n        await toFile(dataset.toStream(), filename)\\n    }\\n\\n    // follows chain in rdf:List\\n    static listToArray(dataset, term, property) {\\n        const poi = rdf.grapoi({ dataset: dataset, term: term })\\n        const first = poi.out(property).term\\n\\n        let p = rdf.grapoi({ dataset, term: first })\\n        let object = p.out(ns.rdf.first).term\\n        //  logger.log('object = ' + object.value)\\n        const result = [object]\\n\\n        while (true) {\\n            let restHead = p.out(ns.rdf.rest).term\\n            let p2 = rdf.grapoi({ dataset, term: restHead })\\n            let object = p2.out(ns.rdf.first).term\\n         //   logger.log('restHead = ' + restHead.value)\\n            if (restHead.equals(ns.rdf.nil)) break\\n            result.push(object)\\n            p = rdf.grapoi({ dataset, term: restHead })\\n        }\\n        return result\\n    }\\n\\n\\n\\n    // unused & untested\\n    // [subjects] predicate ->  [objects]\\n    static listObjects(dataset, subjectList, predicate) {\\n        const objects = []\\n        for (const subject of subjectList) {\\n            logger.log(\\\"subject = \\\" + subject.value)\\n            let p = rdf.grapoi({ dataset, term: subject })\\n            let object = p.out(predicate).term\\n            logger.log(\\\"object = \\\" + object.value)\\n            objects.push(object)\\n        }\\n        return objects\\n    }\\n}\\nexport default GrapoiHelpers\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.471Z\"\n    },\n    \"../utils/Logger.js\": {\n      \"content\": \"import log from 'loglevel';\\nimport fs from 'fs';\\nimport chalk from 'chalk';\\n\\nconst logger = {};\\n\\n//  logger.log(`\\\\n\\\\nconfig dataset: ${[...config].map(q => `${q.subject.value} ${q.predicate.value} ${q.object.value}`).join('\\\\n')}`)\\n\\n\\n// Map log levels to chalk styles\\nconst LOG_STYLES = {\\n    \\\"trace\\\": chalk.greenBright,\\n    \\\"debug\\\": chalk.white,\\n    \\\"info\\\": chalk.yellow,\\n    \\\"warn\\\": chalk.red.italic,\\n    \\\"error\\\": chalk.red.bold\\n};\\nconst LOG_LEVELS = [\\\"trace\\\", \\\"debug\\\", \\\"info\\\", \\\"warn\\\", \\\"error\\\"];\\n\\nlogger.logfile = 'latest.log';\\nlogger.currentLogLevel = \\\"warn\\\";\\n\\nlog.setLevel(logger.currentLogLevel);\\n\\nlogger.getLevel = () => log.getLevel();\\nlogger.enableAll = () => log.enableAll();\\nlogger.disableAll = () => log.disableAll();\\nlogger.setDefaultLevel = (level) => log.setDefaultLevel(level);\\nlogger.getLogger = (name) => {\\n    const namedLogger = log.getLogger(name);\\n    return wrapLogger(namedLogger, name);\\n};\\n\\nlogger.methodFactory = log.methodFactory;\\n\\nlogger.noConflict = () => log.noConflict();\\n\\nfunction wrapLogger(baseLogger, name = 'root') {\\n    const wrapped = {};\\n\\n    wrapped.log = function (msg, level = \\\"info\\\") {  // Changed default to info\\n        const timestamp = chalk.dim(`[${logger.timestampISO()}]`);\\n        const levelStyle = LOG_STYLES[level] || LOG_STYLES[\\\"info\\\"];  // Fallback to info style\\n        const levelTag = levelStyle(`[${level.toUpperCase()}]`);\\n        const nameTag = chalk.green(`[${name}]`);\\n        const message = levelStyle(msg);\\n\\n        //   const consoleMessage = `${timestamp} ${levelTag} ${nameTag} - ${message}`;\\n        const consoleMessage = `${message}`;\\n        const fileMessage = `[${logger.timestampISO()}] [${level.toUpperCase()}] [${name}] - ${msg}`;\\n\\n        baseLogger[level](consoleMessage);\\n        logger.appendLogToFile(fileMessage);\\n    };\\n\\n    LOG_LEVELS.forEach(level => {\\n        wrapped[level] = (msg) => wrapped.log(msg, level);\\n    });\\n\\n    wrapped.getLevel = () => baseLogger.getLevel();\\n    wrapped.setLevel = (level, persist) => baseLogger.setLevel(level, persist);\\n    wrapped.setDefaultLevel = (level) => baseLogger.setDefaultLevel(level);\\n    wrapped.enableAll = () => baseLogger.enableAll();\\n    wrapped.disableAll = () => baseLogger.disableAll();\\n    wrapped.methodFactory = baseLogger.methodFactory;\\n    wrapped.setMethodFactory = function (factory) {\\n        baseLogger.methodFactory = factory;\\n        baseLogger.rebuild();\\n    };\\n\\n    return wrapped;\\n}\\n\\nlogger.appendLogToFile = function (message) {\\n    if (logger.logfile) {\\n        fs.appendFileSync(logger.logfile, message + '\\\\n', 'utf8');\\n    }\\n}\\n\\nlogger.setLogLevel = function (logLevel = \\\"warn\\\", persist = true) {\\n    logger.currentLogLevel = logLevel;\\n    log.setLevel(logLevel, persist);\\n}\\n\\nlogger.timestampISO = function () {\\n    return new Date().toISOString();\\n}\\n\\nlogger.log = function (msg, level = \\\"info\\\") {\\n    const levelStyle = LOG_STYLES[level] || LOG_STYLES[\\\"info\\\"];\\n    const message = levelStyle(msg);\\n    const consoleMessage = `${message}`;\\n    const fileMessage = `[${logger.timestampISO()}] [${level.toUpperCase()}] [root] - ${msg}`;\\n    try {\\n        //   console.log(`level = ${level}`)\\n        // console.log(`consoleMessage = ${consoleMessage}`)\\n\\n        log[level](consoleMessage);\\n        logger.appendLogToFile(fileMessage);\\n    } catch (err) {\\n        console.log(`wtf? ${err.message}`)\\n    }\\n\\n}\\n\\nlogger.reveal = function (instance) {\\n    if (!instance) {\\n        logger.log('no instance defined', 'warn');\\n        return;\\n    }\\n\\n    const serialized = {};\\n    logger.log('***    hidden keys :  ', 'debug');\\n    const loglevel = logger.getLevel()\\n    logger.setLogLevel('trace')\\n\\n    for (const key in instance) {\\n        if (key === 'dataset') {\\n            logger.log('[[dataset found, skipping]]', 'debug');\\n            continue;\\n        }\\n\\n        if (key.startsWith('_')) {\\n            logger.log(`       ${key}`, 'debug');\\n            continue;\\n        }\\n\\n        if (instance.hasOwnProperty(key)) {\\n            let value = instance[key];\\n            if (value) {\\n                if (Buffer.isBuffer(value)) {\\n                    value = value.toString();\\n                }\\n                if (value.length > 100) {\\n                    try {\\n                        value = value.substring(0, 100) + '...';\\n                    } catch (e) {\\n                        value = value.slice(0, 99);\\n                    }\\n                }\\n                serialized[key] = value;\\n            } else {\\n                serialized[key] = '[no key]';\\n            }\\n        }\\n    }\\n\\n    const props = JSON.stringify(serialized, null, 2);\\n    //  logger.log(`Instance of ${chalk.bold(instance.constructor.name)} with properties - \\\\n${props}`, 'trace');\\n    logger.log(`Instance of ${chalk.yellow(chalk.bold(instance.constructor.name))} with properties - \\\\n${chalk.yellow(props)})`);\\n    logger.setLogLevel(loglevel)\\n}\\n\\nLOG_LEVELS.forEach(level => {\\n    logger[level] = (msg) => logger.log(msg, level);\\n});\\n\\nlogger.poi = function exploreGrapoi(grapoi, predicates, objects, subjects) {\\n    console.log(chalk.bold('Properties of the Grapoi object:'));\\n    for (const prop in grapoi) {\\n        console.log(chalk.cyan(`\\\\t${prop}: ${grapoi[prop]}`));\\n    }\\n\\n    console.log(chalk.bold('\\\\nPath:'));\\n    const path = grapoi.out(predicates, objects).in(predicates, subjects);\\n    for (const quad of path.quads()) {\\n        console.log(chalk.cyan(`\\\\t${quad.predicate.value}: ${quad.object.value}`));\\n    }\\n}\\n\\nfunction handleExit(options, exitCode) {\\n    if (options.cleanup) {\\n        // Perform cleanup\\n    }\\n    if (exitCode || exitCode === 0) console.log(exitCode);\\n    if (options.exit) process.exit();\\n}\\n\\nprocess.on('exit', handleExit.bind(null, { cleanup: true }));\\nprocess.on('SIGINT', handleExit.bind(null, { exit: true }));\\nprocess.on('SIGUSR1', handleExit.bind(null, { exit: true }));\\nprocess.on('SIGUSR2', handleExit.bind(null, { exit: true }));\\nprocess.on('uncaughtException', handleExit.bind(null, { exit: true }));\\n\\n// TESTING\\n// logger.setLogLevel('info')\\n// logger.log('a log() message on info - show yellow, concise')\\n// logger.debug('a debug() message on info -  dont show')\\n// logger.setLogLevel('debug')\\n// logger.log('a log() message on debug - show yellow, with prefix')\\n// logger.debug('a debug() message on debug - show red, with prefix')\\n\\nexport default logger;\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.476Z\"\n    },\n    \"../utils/cache.js\": {\n      \"content\": \"/* TODO implement\\n\\nfilename/URI, meta, content\\n*/\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.481Z\"\n    },\n    \"../utils/footpath.js\": {\n      \"content\": \"import path from 'path'\\nimport { fileURLToPath } from 'url'\\n\\nimport logger from './Logger.js'\\n\\n/*\\nresolves paths so both runtime and tests work\\n\\nmust be a better way of doing this, but I can't be bothered looking today\\n*/\\n\\nlet footpath = {}\\n\\nfootpath.resolve = function footpath(here, relative, start) {\\n\\n    const loggy = false\\n    if (loggy) {\\n        logger.debug(\\\"\\\\n*** start footpath.resolve ***\\\")\\n        logger.debug(\\\"process.cwd() = \\\" + process.cwd())\\n        logger.debug(\\\"here = \\\" + here)\\n        logger.debug(\\\"relative = \\\" + relative)\\n        logger.debug(\\\"start = \\\" + start)\\n    }\\n\\n    const __filename = fileURLToPath(here)\\n    const __dirname = path.dirname(__filename)\\n    const rootDir = path.resolve(__dirname, relative)\\n    const filePath = path.join(rootDir, start)\\n\\n    if (loggy) {\\n        logger.debug(\\\"__filename = \\\" + __filename)\\n        logger.debug(\\\"__dirname = \\\" + __dirname)\\n        logger.debug(\\\"rootDir = \\\" + rootDir)\\n        logger.debug(\\\"filePath = \\\" + filePath)\\n        logger.debug(\\\"*** end footpath.resolve ***\\\\n\\\")\\n    }\\n\\n    return filePath\\n}\\n\\nfootpath.urlLastPart = function footpath(url = 'http://example.org/not-a-url') {\\n    // logger.debug('url = ' + url)\\n    //   try {\\n    const urlObj = new URL(url);\\n    const hash = urlObj.hash;\\n    const path = urlObj.pathname;\\n    const lastPart = hash ? hash.replace(/^#/, '') : path.split('/').pop();\\n    // } catch {\\n    //  return 'not-a-url'\\n    //}\\n    return lastPart;\\n}\\n\\nexport default footpath\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.487Z\"\n    },\n    \"../utils/ns.js\": {\n      \"content\": \"import rdf from 'rdf-ext'\\n\\nconst ns = {\\n    rdf: rdf.namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#'),\\n    rdfs: rdf.namespace('http://www.w3.org/2000/01/rdf-schema#'),\\n    dc: rdf.namespace('http://purl.org/dc/terms/'),\\n    schema: rdf.namespace('http://schema.org/'),\\n    xsd: rdf.namespace('http://www.w3.org/2001/XMLSchema#'),\\n    trn: rdf.namespace('http://purl.org/stuff/transmissions/'),\\n    //  t: rdf.namespace('http://hyperdata.it/transmissions/'),\\n    //  fs: rdf.namespace('http://purl.org/stuff/filesystem/'),\\n    //pc: rdf.namespace('http://purl.org/stuff/postcraft/')\\n}\\n\\n//ns.getPrefix = function (nsObj) {\\n//  return Object.keys(nsObj)[0];\\n//}\\n\\nns.shortName = ns.getShortname = function (url) { // I keep mixing up the name\\n\\n    if (!url) return\\n    url = url.toString()\\n    const lastSlashIndex = url.lastIndexOf('/');\\n    const lastHashIndex = url.lastIndexOf('#');\\n    const path = url.slice(lastSlashIndex + 1);\\n    return path.split('#')[0].split('?')[0];\\n}\\nexport default ns\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.492Z\"\n    },\n    \"../utils/t2j.js\": {\n      \"content\": \"/*\\n* Turtle to JSON-LD converter\\n*/\\n\\nimport { Readable } from 'readable-stream'\\nimport rdf from '@rdfjs/data-model'\\nimport SerializerJsonld from '@rdfjs/serializer-jsonld'\\nimport Serializer from '@rdfjs/serializer-turtle'\\nimport N3Parser from '@rdfjs/parser-n3'\\nimport { fromFile } from 'rdf-utils-fs'\\nimport { toFile } from 'rdf-utils-fs'\\n\\nconst testTurtle = `\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix trm: <http://purl.org/stuff/transmission/> .\\n@prefix : <https://hyperdata.it/transmissions/> . # for custom terms & instances\\n\\n:simplepipe a trm:TransmissionTransmission ;\\n    trm:pipe (:s1 :s2 :s3) .\\n\\n:s1 a trm:StringSource .\\n:s2 a trm:AppendProcess .\\n:s3 a trm:StringSink .\\n`\\nexport class Turtle2JSONLD {\\n    static async convert(turtle) {\\n        // create N3 parser instance\\n        let parser = new N3Parser({ factory: rdf })\\n        //   const stream = Turtle2JSONLD.stringToStream(turtle)\\n        //  let quadStream = parser.import(stream)\\n\\n        const input = Readable.from(turtle)\\n\\n        const output = parser.import(input)\\n\\n        const serializerJsonld = new SerializerJsonld()\\n        const jsonStream = serializerJsonld.import(output)\\n\\n        //      let outputJson = ''\\n\\n        //            outputJson = outputJson + JSON.stringify(jsonld, null, 2)\\n        //    })\\n        const outputJson = await Turtle2JSONLD.streamToString(jsonStream)\\n        return outputJson\\n    }\\n\\n    static stringToStream(str) {\\n        const stream = new Readable();\\n        stream.push(str); // Add the string to the stream\\n        stream.push(null); // Indicates that the stream has ended\\n        return stream;\\n    }\\n\\n    static streamToString(stream) {\\n        const chunks = [];\\n        return new Promise((resolve, reject) => {\\n            stream.on('data', (chunk) => {\\n                chunks.push(Buffer.from(chunk))\\n                console.log('chunk:', chunk)\\n            }\\n            );\\n            stream.on('error', (err) => reject(err));\\n            stream.on('end', () => {\\n                const result = Buffer.concat(chunks).toString('utf8')\\n                resolve(result)\\n                console.log('****************** result:', result)\\n            });\\n        })\\n    }\\n}\\n\\n// Convert a string to a stream\\n\\nconst testJson = await Turtle2JSONLD.convert(testTurtle)\\nconsole.log('àààààààààààààààààààààà')\\nconsole.log(testJson)\\n\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.496Z\"\n    },\n    \"../utils/test_runner.js\": {\n      \"content\": \"\\nimport fs from 'fs';\\nimport path from 'path';\\n\\nconst testFiles = fs.readdirSync(__dirname).filter(file => file.startsWith('test_'));\\n\\ntestFiles.forEach(testFile => {\\n    console.log(`Running ${testFile}`);\\n    require(path.join(__dirname, testFile));\\n});\\n\",\n      \"type\": \".js\",\n      \"timestamp\": \"2025-01-19T17:23:38.502Z\"\n    }\n  },\n  \"summary\": {\n    \"totalFiles\": 185,\n    \"fileTypes\": {\n      \".md\": 52,\n      \".js\": 133\n    },\n    \"timestamp\": \"2025-01-19T17:23:37.291Z\"\n  }\n}"
    ]
  }
})
***************************
Running >>> :  [p10.p20.p30.p40.p50.p60.p70.SM]  DeadEnd
Processor.getPropertyFromSettings, property = http://purl.org/stuff/transmissions/messageType
Config or node missing
DeadEnd at [p10.p20.p30.p40.p50.p60.p70.SM.DE] DE
0
